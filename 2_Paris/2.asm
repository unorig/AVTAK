; ===============================================
; 64tass Assembly Export from C64 Reverse Studio
; ===============================================
; Source file: 2.prg.0813.43b0.clean
; File size: 60418 bytes
; Base address: $0FFE
; Export date: Thu Oct 2 21:30:03 2025
; Assembler: 64tass
;

; 64tass directives
.cpu "65c02"        ; Target CPU (change as needed)
.enc "none"        ; Character encoding
* = $0FFE           ; Origin address

; External Symbol Definitions
; ============================
IRQ_vector_low = $0314
IRQ_vector_high = $0315
BRK_serv_address_low = $0316
VIC_SpritePointer4 = $07FC
BRK_serv_address_high = $0317
VIC_SpritePointer5 = $07FD
V_CarFacingDirection = $03A0
adjusted_map_y = $02FA
V_DamageCount = $03A1
adjusted_map_x = $02FB
game_priority_flag = $03A2
bullet_collision_flag = $02FC
mayday_sprite_pointer_table = $03E0
V_CarCollision = $02FD
V_ForwardReverse = $03A4
V_MaydayLanded = $02FE
V_ScrollCounter = $03A7
sprite_pointers_base = $07F7
Screen_DashClock = $05A6
V_CarPosHorizontalLow = $0338
V_CarPosHorizontalHigh = $0339
ScreenCounterDigit100 = $04F3
V_CarPositionVertLow = $033A
ScreenCounterDigit10 = $04F4
ScreenCounterDigit1 = $04F5
V_CarPositionVertHigh = $033B
V_MapXposition = $033C
V_MapYposition = $033D
V_HorzRasterScrollLoop = $033E
game_start_entry = $FCE2
vertical_scroll_delta = $0334
horizontal_scroll_delta = $0335
view_update_flag = $0336
view_ready_flag = $0337
sprite_enable_bitmask_table = $03C8
screen_speedo_bar = $0576
sprite_disable_bitmask_table = $03C0
beep_interval_counter = $034C
proximity_beep_frequency = $034D
beep_duration_counter = $034E
V_MaydayLoopCounter = $034F
V_CarSpeed = $0340
countdown_digit_0 = $0399
Line_token_Low = $0304
V_MapDrawSpeed = $0342
NMI_IRQ_addr_low = $0318
NMI_IRQ_addr_high = $0319
V_RegisterCollision = $0346
countdown_digit_6 = $0390
V_CarFacingDirectionTemp = $0347
countdown_digit_5 = $0391
countdown_digit_4 = $0393
countdown_digit_3 = $0394
countdown_digit_2 = $0396
countdown_digit_1 = $0397
V_MapScreen = $07E7
V_MenuSelection = $02E0
mayday_ready_flag = $02E1
EndGameFlag = $0313

; ==================================================
; Section: Junk (Junk)
; Range: $0FFE - $0FFF (2 bytes)
; ==================================================

                .byte $00,$10                             ; ($0FFE)

; ==================================================
; Section: MAIN PROGRAM ENTRY POINT (Code)
; Range: $1000 - $106A (107 bytes)
; Data decompression routine. Uses bit-shifted control bytes to determine
; copy vs. literal operations. Decompresses data from source pointer
; ($FB/$FC) using offset table ($FD/$FE). Mutes SID during operation. Returns
; when decompression exceeds source bounds.
; ==================================================

L1000
                SEI                                       ; ($1000)
                LDA #$0A                                  ; ($1001)
                STA $FB                                   ; ($1003)
                LDA #$19                                  ; ($1005)
                STA $FC                                   ; ($1007)
                LDA #$00                                  ; ($1009)
                STA SID_VolumeFilter                      ; ($100B)
                LDY #$00                                  ; ($100E)
                LDA ($FB),Y                               ; ($1010)
                STA $FD                                   ; ($1012)
                INY                                       ; ($1014)
                LDA ($FB),Y                               ; ($1015)
                STA $FE                                   ; ($1017)
                INY                                       ; ($1019)
                CLC                                       ; ($101A)
                CLD                                       ; ($101B)
                LDA $FB                                   ; ($101C)
                ADC $FD                                   ; ($101E)
                STA $02                                   ; ($1020)
                LDA $FC                                   ; ($1022)
                ADC $FE                                   ; ($1024)
                STA $03                                   ; ($1026)
L1028
                LDX #$08                                  ; ($1028)
                LDA ($FB),Y                               ; ($102A)
L102C
                ROL A                                     ; ($102C)
                PHA                                       ; ($102D)
                BCS L1036                                 ; ($102E)
                JSR L1080                                 ; ($1030)
                JMP L103C                                 ; ($1033)
L1036
                JSR L106B                                 ; ($1036)
                NOP                                       ; ($1039)
                NOP                                       ; ($103A)
                NOP                                       ; ($103B)
L103C
                CLD                                       ; ($103C)
                SEC                                       ; ($103D)
                LDA $FB                                   ; ($103E)
                SBC $02                                   ; ($1040)
                LDA $FC                                   ; ($1042)
                SBC $03                                   ; ($1044)
                BCS L1063                                 ; ($1046)
                JSR L108B                                 ; ($1048)
                PLA                                       ; ($104B)
                DEX                                       ; ($104C)
                CPX #$00                                  ; ($104D)
                BNE L105E                                 ; ($104F)
                LDA #$FF                                  ; ($1051)
                CMP $FB                                   ; ($1053)
                BNE L1059                                 ; ($1055)
                INC $FC                                   ; ($1057)
L1059
                INC $FB                                   ; ($1059)
                JMP L1028                                 ; ($105B)
L105E
                NOP                                       ; ($105E)
                NOP                                       ; ($105F)
                JMP L102C                                 ; ($1060)
L1063
                LDA #$00                                  ; ($1063)
                STA SID_VolumeFilter                      ; ($1065)
                PLA                                       ; ($1068)
                CLI                                       ; ($1069)
                RTS                                       ; ($106A)

; ==================================================
; Section: DECOMPRESSION HANDLER ROUTINES (Code)
; Range: $106B - $108E (36 bytes)
; Sets SID volume to max ($0F). Helper routine for decompression copy
; operation. Mutes SID volume ($00) and calls L108B. Helper routine for
; decompression literal operation.
; ==================================================

L106B
                LDA #$0F                                  ; ($106B)
                STA SID_VolumeFilter                      ; ($106D)
                NOP                                       ; ($1070)
                NOP                                       ; ($1071)
                NOP                                       ; ($1072)
                NOP                                       ; ($1073)
                NOP                                       ; ($1074)
                NOP                                       ; ($1075)
                NOP                                       ; ($1076)
                NOP                                       ; ($1077)
                NOP                                       ; ($1078)
                NOP                                       ; ($1079)
                NOP                                       ; ($107A)
                NOP                                       ; ($107B)
                NOP                                       ; ($107C)
                NOP                                       ; ($107D)
                NOP                                       ; ($107E)
                RTS                                       ; ($107F)
L1080
                LDA #$00                                  ; ($1080)
                STA SID_VolumeFilter                      ; ($1082)
                JSR L108B                                 ; ($1085)
                RTS                                       ; ($1088)
                .byte $EA,$60                             ; ($1089)
L108B
                NOP                                       ; ($108B)
                NOP                                       ; ($108C)
                NOP                                       ; ($108D)
                RTS                                       ; ($108E)

; ==================================================
; Section: COMPRESSED GRAPHICS DATA TABLES (Data)
; Range: $108F - $190A (2172 bytes)
; ==================================================

                .byte $EA,$94,$01,$44,$32,$20,$9B,$01,$AD,$66,$B6,$B0,$57,$71,$89,$2A  ; ($108F)
                .byte $FD,$4C,$54,$73,$B8,$CE,$41,$3F,$00,$8F,$F0,$1F,$E0,$1F,$FC,$07  ; ($109F)
                .byte $F8,$07,$FE,$03,$FE,$84,$EA,$15,$E8,$67,$B8,$39,$8E,$F5,$1C,$E2  ; ($10AF)
                .byte $1F,$E0,$E3,$1E,$E1,$1E,$E7,$19,$C6,$E2,$79,$8F,$E1,$F8,$DE,$66  ; ($10BF)
                .byte $31,$CC,$73,$0E,$E3,$FC,$67,$1D,$E1,$3E,$63,$C1,$FC,$77,$19,$C7  ; ($10CF)
                .byte $71,$CE,$0F,$83,$D8,$47,$1D,$C3,$BC,$0F,$A1,$CC,$33,$C7,$78,$CE  ; ($10DF)
                .byte $07,$D0,$EE,$33,$8E,$E3,$3C,$9F,$47,$31,$9E,$73,$C6,$78,$1F,$03  ; ($10EF)
                .byte $9C,$67,$8E,$F1,$9E,$07,$81,$D8,$CF,$19,$C6,$78,$1F,$06,$E3,$1E  ; ($10FF)
                .byte $B3,$CC,$78,$0F,$C0,$38,$C7,$84,$79,$06,$1F,$E0,$38,$C3,$8E,$3C  ; ($110F)
                .byte $70,$0F,$38,$F1,$C1,$C3,$87,$BC,$00,$0E,$33,$9E,$3C,$71,$F1,$E6  ; ($111F)
                .byte $18,$E3,$8E,$0C,$38,$E3,$88,$00,$1C,$71,$E1,$81,$E7,$CF,$18,$00  ; ($112F)
                .byte $1C,$73,$C0,$0F,$1E,$78,$C0,$63,$89,$CE,$0C,$38,$73,$F0,$43,$00  ; ($113F)
                .byte $F1,$9C,$40,$20,$F7,$87,$98,$61,$9C,$21,$DC,$33,$8C,$73,$08,$C3  ; ($114F)
                .byte $38,$E7,$09,$DE,$33,$CE,$7B,$98,$66,$19,$9C,$C6,$0D,$82,$77,$33  ; ($115F)
                .byte $C8,$8E,$61,$19,$CC,$73,$36,$09,$CE,$73,$D8,$86,$73,$19,$98,$CC  ; ($116F)
                .byte $CC,$A2,$77,$33,$99,$88,$CC,$4E,$67,$31,$99,$B4,$4E,$F3,$34,$CC  ; ($117F)
                .byte $06,$73,$13,$C2,$66,$13,$71,$BB,$D9,$86,$E6,$67,$39,$86,$62,$18  ; ($118F)
                .byte $80,$DC,$A7,$79,$98,$CC,$E6,$73,$31,$19,$CC,$C6,$37,$53,$B9,$D8  ; ($119F)
                .byte $66,$39,$80,$60,$08,$00,$13,$28,$57,$20,$80,$00,$00,$00,$00,$00  ; ($11AF)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($11BF)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($11CF)
                .byte $00,$00,$00,$02,$00,$14,$90,$56,$8A,$24,$CB,$6E,$F4,$A4,$45,$12  ; ($11DF)
                .byte $94,$D4,$90,$A4,$84,$14,$D2,$11,$56,$D0,$92,$E5,$4A,$B6,$4C,$4A  ; ($11EF)
                .byte $53,$48,$4A,$96,$D0,$10,$92,$5A,$54,$AD,$90,$80,$00,$49,$68,$29  ; ($11FF)
                .byte $4A,$13,$49,$02,$02,$94,$62,$08,$4A,$90,$00,$52,$9A,$92,$10,$94  ; ($120F)
                .byte $00,$04,$09,$10,$84,$11,$E4,$06,$81,$FF,$BC,$0F,$FC,$19,$F8,$07  ; ($121F)
                .byte $FF,$E0,$CF,$C1,$9F,$98,$3C,$77,$06,$7C,$03,$E6,$3F,$E6,$1D,$E3  ; ($122F)
                .byte $1E,$F1,$DE,$71,$8F,$10,$FF,$87,$F9,$C4,$79,$87,$78,$0F,$B8,$0E  ; ($123F)
                .byte $63,$BC,$07,$F8,$0E,$63,$BC,$4F,$31,$4E,$61,$DE,$33,$DC,$27,$88  ; ($124F)
                .byte $FE,$1B,$D8,$5F,$03,$F8,$FF,$82,$F8,$1F,$83,$FC,$17,$C0,$7F,$0F  ; ($125F)
                .byte $FC,$37,$C0,$FE,$1D,$F8,$5F,$01,$F0,$FF,$80,$F0,$3F,$07,$F8,$2F  ; ($126F)
                .byte $00,$F8,$1F,$F0,$FF,$05,$F0,$7F,$E1,$FE,$0F,$C1,$FE,$17,$E0,$FC  ; ($127F)
                .byte $3F,$C2,$BC,$07,$87,$FC,$1B,$E1,$FE,$0F,$F0,$7F,$83,$F8,$3E,$03  ; ($128F)
                .byte $E0,$FE,$1F,$87,$F8,$38,$67,$83,$DE,$1E,$0F,$F0,$7F,$C1,$F0,$7F  ; ($129F)
                .byte $03,$F8,$1F,$1F,$81,$FE,$0E,$0F,$81,$FE,$00,$C7,$C0,$FF,$80,$78  ; ($12AF)
                .byte $FC,$1F,$FC,$07,$FF,$81,$E1,$60,$FF,$C0,$FC,$10,$7F,$E0,$3F,$80  ; ($12BF)
                .byte $3F,$C0,$0F,$FC,$07,$FC,$00,$FF,$80,$FF,$00,$0F,$C0,$7F,$80,$63  ; ($12CF)
                .byte $E0,$7F,$80,$3C,$E0,$7F,$C0,$00,$F8,$0F,$F0,$0F,$8F,$03,$FC,$03  ; ($12DF)
                .byte $FF,$01,$FC,$01,$FF,$03,$FE,$01,$FE,$01,$FF,$80,$7F,$C0,$7F,$F0  ; ($12EF)
                .byte $07,$F8,$0F,$F8,$00,$FC,$0F,$FC,$00,$7E,$07,$FC,$00,$3F,$01,$FF  ; ($12FF)
                .byte $80,$07,$F0,$1F,$F8,$00,$3F,$03,$FC,$00,$0F,$C1,$FF,$80,$01,$F0  ; ($130F)
                .byte $7F,$F0,$00,$1F,$86,$67,$E0,$00,$1F,$1F,$03,$E0,$00,$07,$02,$00  ; ($131F)
                .byte $E0,$00,$00,$00,$06,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($132F)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$E0,$00  ; ($133F)
                .byte $00,$00,$00,$00,$18,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($134F)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($135F)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($136F)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($137F)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($138F)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00  ; ($139F)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($13AF)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$76,$B6,$16  ; ($13BF)
                .byte $E3,$69,$48,$4F,$5B,$0C,$C8,$30,$AA,$FE,$80,$0F,$FB,$84,$33,$8C  ; ($13CF)
                .byte $FC,$00,$3F,$C0,$7F,$80,$FF,$FC,$03,$FC,$C7,$FC,$C3,$BC,$77,$80  ; ($13DF)
                .byte $7B,$C3,$7C,$07,$09,$E7,$E1,$3E,$03,$E0,$7E,$1F,$C3,$E2,$3C,$03  ; ($13EF)
                .byte $E0,$3E,$0F,$E0,$FC,$0F,$C1,$FC,$3F,$C3,$F0,$7C,$1F,$C3,$E0,$7C  ; ($13FF)
                .byte $07,$C2,$F8,$7F,$87,$C0,$7C,$39,$F0,$FC,$1F,$A1,$E0,$FE,$07,$C1  ; ($140F)
                .byte $F0,$FD,$0F,$07,$F0,$7C,$0F,$07,$F0,$7C,$07,$E0,$F8,$1F,$0F,$D0  ; ($141F)
                .byte $F8,$7F,$87,$C0,$F8,$7C,$0F,$8F,$F0,$F8,$0F,$0F,$40,$F8,$3F,$C3  ; ($142F)
                .byte $E0,$1E,$0F,$40,$F8,$7F,$87,$80,$78,$7A,$07,$87,$F8,$7C,$07,$C3  ; ($143F)
                .byte $E8,$1F,$0F,$F8,$7C,$03,$F0,$7D,$07,$C3,$FC,$1E,$03,$FC,$3E,$03  ; ($144F)
                .byte $C3,$FC,$1F,$81,$E7,$07,$C8,$3C,$31,$F0,$1F,$83,$F7,$07,$E8,$7C  ; ($145F)
                .byte $E3,$CC,$3E,$03,$C7,$0E,$70,$F3,$C3,$8E,$1E,$78,$70,$7C,$52,$F8  ; ($146F)
                .byte $43,$C7,$0E,$38,$70,$40,$73,$81,$CC,$3F,$18,$70,$00,$7F,$83,$70  ; ($147F)
                .byte $00,$03,$FF,$FE,$0C,$00,$21,$FF,$01,$80,$00,$39,$F0,$06,$00,$00  ; ($148F)
                .byte $FF,$E0,$1C,$00,$03,$CF,$FC,$1C,$08,$01,$FF,$1E,$06,$30,$40,$9F  ; ($149F)
                .byte $18,$60,$00,$00,$3F,$F0,$07,$07,$00,$3F,$FF,$80,$00,$10,$03,$FE  ; ($14AF)
                .byte $30,$0C,$00,$00,$FC,$70,$00,$00,$00,$07,$FF,$80,$38,$00,$00,$3F  ; ($14BF)
                .byte $F0,$00,$00,$00,$03,$1E,$00,$38,$40,$04,$F1,$C0,$00,$00,$00,$00  ; ($14CF)
                .byte $00,$00,$06,$00,$00,$0F,$18,$00,$00,$00,$00,$00,$00,$03,$80,$00  ; ($14DF)
                .byte $1F,$00,$00,$00,$00,$00,$00,$00,$00,$06,$00,$00,$1E,$20,$00,$00  ; ($14EF)
                .byte $00,$00,$08,$60,$00,$C0,$00,$01,$F1,$E0,$00,$00,$00,$00,$00,$80  ; ($14FF)
                .byte $00,$E0,$00,$03,$E0,$00,$00,$00,$00,$00,$00,$00,$01,$80,$00,$01  ; ($150F)
                .byte $F0,$00,$00,$00,$00,$00,$00,$00,$0A,$80,$00,$07,$80,$00,$00,$00  ; ($151F)
                .byte $00,$00,$00,$00,$00,$30,$00,$00,$60,$00,$00,$00,$00,$00,$00,$00  ; ($152F)
                .byte $01,$80,$00,$01,$FE,$00,$00,$00,$00,$00,$00,$00,$00,$20,$00,$00  ; ($153F)
                .byte $F8,$00,$00,$00,$00,$00,$00,$00,$00,$60,$00,$00,$3F,$80,$00,$00  ; ($154F)
                .byte $00,$00,$00,$00,$00,$10,$00,$00,$78,$00,$00,$00,$00,$00,$00,$00  ; ($155F)
                .byte $00,$00,$00,$00,$38,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($156F)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($157F)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($158F)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($159F)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($15AF)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($15BF)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($15CF)
                .byte $00,$00,$00,$00,$00,$00,$4C,$63,$8E,$F1,$82,$1C,$72,$F0,$9C,$F0  ; ($15DF)
                .byte $1E,$21,$FF,$18,$7F,$80,$7C,$87,$BC,$E0,$78,$C3,$EF,$0E,$F8,$23  ; ($15EF)
                .byte $E3,$0F,$30,$F7,$86,$38,$73,$C2,$1E,$31,$F1,$8F,$B8,$7C,$E3,$C7  ; ($15FF)
                .byte $3C,$1F,$F8,$7F,$E1,$FF,$07,$FC,$18,$78,$F8,$C1,$E1,$FF,$87,$FE  ; ($160F)
                .byte $1F,$8C,$1F,$38,$3F,$0F,$0E,$1F,$07,$DF,$07,$C7,$83,$C7,$83,$07  ; ($161F)
                .byte $EF,$00,$1F,$07,$8F,$C1,$C1,$F8,$38,$0F,$83,$1E,$00,$E1,$E0,$70  ; ($162F)
                .byte $7E,$1C,$0F,$06,$03,$C0,$00,$00,$38,$7C,$00,$0F,$C7,$C0,$F8,$00  ; ($163F)
                .byte $07,$06,$07,$00,$C6,$03,$E0,$60,$78,$78,$18,$1C,$1E,$06,$03,$E0  ; ($164F)
                .byte $00,$7F,$FC,$07,$0F,$07,$87,$81,$FF,$00,$43,$E0,$07,$E7,$C0,$07  ; ($165F)
                .byte $E1,$83,$F3,$C0,$FF,$E0,$F9,$F8,$01,$F0,$43,$F0,$83,$E3,$07,$DF  ; ($166F)
                .byte $81,$FF,$80,$1E,$00,$7F,$F0,$71,$F0,$01,$E3,$C1,$87,$FF,$07,$0C  ; ($167F)
                .byte $1E,$78,$70,$E3,$C3,$07,$06,$1C,$F0,$1E,$00,$0F,$FF,$E0,$41,$E0  ; ($168F)
                .byte $C0,$00,$00,$F3,$E0,$F0,$83,$8F,$DC,$10,$E3,$C0,$1E,$08,$7F,$E0  ; ($169F)
                .byte $3C,$00,$27,$EF,$81,$06,$0C,$30,$70,$04,$DF,$03,$04,$3D,$F1,$87  ; ($16AF)
                .byte $3C,$41,$C7,$08,$3B,$E7,$0C,$70,$C7,$DE,$18,$F3,$84,$79,$87,$70  ; ($16BF)
                .byte $CF,$78,$07,$88,$7F,$88,$7B,$86,$3E,$E1,$9F,$80,$7F,$E0,$03,$88  ; ($16CF)
                .byte $77,$CC,$77,$80,$7F,$80,$7F,$01,$FE,$30,$39,$87,$7E,$C3,$1F,$E0  ; ($16DF)
                .byte $1F,$E0,$1F,$E0,$1F,$C4,$0C,$C3,$3B,$C4,$7F,$90,$0F,$61,$09,$FF  ; ($16EF)
                .byte $01,$9C,$63,$0C,$F7,$08,$E7,$98,$87,$7F,$00,$7F,$80,$03,$30,$0E  ; ($16FF)
                .byte $F7,$11,$FE,$20,$0F,$F0,$00,$FF,$C0,$1E,$60,$0D,$0A,$FF,$11,$DF  ; ($170F)
                .byte $60,$19,$CC,$63,$BC,$E6,$11,$9F,$F1,$00,$77,$80,$03,$C0,$00,$FE  ; ($171F)
                .byte $00,$66,$11,$DF,$73,$0C,$EF,$90,$08,$C6,$3B,$C0,$03,$98,$33,$8F  ; ($172F)
                .byte $30,$46,$1C,$E3,$98,$03,$B7,$20,$80,$1E,$20,$8C,$73,$00,$0C,$00  ; ($173F)
                .byte $15,$EA,$AA,$02,$BE,$80,$83,$7D,$CA,$14,$4A,$A5,$E9,$55,$2B,$42  ; ($174F)
                .byte $54,$AD,$4A,$52,$69,$56,$54,$AB,$40,$AB,$75,$6A,$EE,$F8,$AA,$02  ; ($175F)
                .byte $02,$A0,$95,$14,$08,$9E,$86,$A4,$40,$55,$5D,$41,$5B,$5F,$CA,$6A  ; ($176F)
                .byte $C9,$6A,$93,$5B,$56,$49,$F4,$54,$9B,$64,$B6,$DB,$CB,$6B,$2E,$A6  ; ($177F)
                .byte $DB,$AA,$5A,$BA,$6A,$25,$2C,$37,$6A,$52,$D9,$6B,$45,$16,$6A,$5B  ; ($178F)
                .byte $6A,$D5,$2B,$D4,$AA,$51,$A5,$65,$52,$52,$A9,$6C,$AD,$A9,$12,$C4  ; ($179F)
                .byte $25,$52,$53,$6A,$95,$25,$42,$56,$00,$22,$9C,$00,$02,$51,$83,$E0  ; ($17AF)
                .byte $0F,$FE,$00,$FE,$00,$FF,$E0,$0E,$00,$FF,$80,$3F,$F0,$0F,$C0,$3F  ; ($17BF)
                .byte $F0,$01,$C2,$3F,$E1,$1F,$F0,$EF,$80,$FF,$18,$61,$C2,$3C,$E1,$FF  ; ($17CF)
                .byte $04,$7D,$C3,$9E,$10,$F7,$00,$E1,$1E,$71,$EF,$08,$F3,$0F,$70,$C7  ; ($17DF)
                .byte $F8,$0F,$08,$F9,$C3,$FE,$08,$FC,$03,$FC,$01,$FE,$07,$08,$7F,$C3  ; ($17EF)
                .byte $FE,$01,$F0,$0F,$F0,$7F,$E0,$3C,$00,$FC,$C3,$FF,$02,$1C,$08,$00  ; ($17FF)
                .byte $3F,$C0,$60,$C0,$83,$8F,$18,$7F,$00,$38,$60,$00,$01,$C0,$0F,$00  ; ($180F)
                .byte $03,$80,$30,$41,$8C,$01,$C0,$01,$C0,$1C,$C0,$1C,$00,$8E,$00,$71  ; ($181F)
                .byte $07,$80,$00,$00,$0E,$00,$0E,$00,$70,$00,$00,$02,$00,$43,$00,$01  ; ($182F)
                .byte $08,$08,$00,$06,$08,$03,$00,$00,$20,$03,$C0,$18,$00,$00,$00,$00  ; ($183F)
                .byte $00,$30,$04,$00,$00,$80,$00,$00,$28,$20,$00,$00,$00,$00,$00,$00  ; ($184F)
                .byte $00,$00,$00,$00,$40,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($185F)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$80,$00,$39,$E0,$00,$00  ; ($186F)
                .byte $00,$00,$00,$03,$00,$00,$00,$00,$38,$00,$07,$FC,$38,$00,$00,$03  ; ($187F)
                .byte $80,$00,$00,$00,$00,$00,$38,$00,$00,$FF,$E1,$00,$00,$00,$40,$00  ; ($188F)
                .byte $00,$00,$00,$00,$00,$70,$00,$07,$8F,$1E,$03,$80,$00,$00,$00,$00  ; ($189F)
                .byte $00,$00,$00,$00,$00,$70,$00,$06,$1C,$30,$00,$00,$00,$00,$00,$00  ; ($18AF)
                .byte $00,$00,$00,$00,$00,$08,$00,$00,$00,$00,$00,$00,$00,$00,$31,$80  ; ($18BF)
                .byte $06,$00,$00,$00,$00,$00,$00,$00,$00,$00,$40,$00,$00,$00,$00,$00  ; ($18CF)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$8C,$08,$38,$F1,$C0,$00  ; ($18DF)
                .byte $00,$00,$00,$00,$00,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$06  ; ($18EF)
                .byte $30,$81,$00,$18,$00,$00,$00,$00,$00,$06,$0C,$99  ; ($18FF)

; ==================================================
; Section: COMPRESSED GRAPHICS DATA TABLES 2 (Data)
; Range: $190B - $2FFF (5877 bytes)
; ==================================================

                .byte $06,$25,$B0,$81,$19,$FF,$EC,$00,$00,$0F,$EE,$F6,$00,$00,$1F,$FF  ; ($190B)
                .byte $F8,$00,$00,$3F,$FF,$34,$01,$27,$FF,$FD,$80,$01,$BF,$FD,$90,$00  ; ($191B)
                .byte $DF,$FF,$E4,$00,$03,$FF,$FB,$11,$00,$FF,$FF,$E4,$04,$4F,$FF,$B3  ; ($192B)
                .byte $31,$3F,$FF,$C8,$01,$1F,$FF,$F7,$31,$08,$FF,$F9,$80,$03,$3F,$FF  ; ($193B)
                .byte $98,$00,$3F,$FF,$A0,$00,$6F,$FF,$EC,$00,$07,$FF,$F4,$00,$03,$FF  ; ($194B)
                .byte $FF,$98,$00,$1F,$FF,$A0,$00,$1F,$FF,$F0,$00,$0F,$FF,$C8,$00,$01  ; ($195B)
                .byte $FF,$FF,$88,$00,$1F,$FF,$C0,$00,$33,$FF,$FE,$00,$01,$FF,$FE,$00  ; ($196B)
                .byte $00,$FF,$FF,$F0,$00,$07,$FF,$FE,$00,$00,$FF,$FE,$78,$00,$07,$FF  ; ($197B)
                .byte $F0,$00,$07,$FF,$F9,$E0,$00,$3F,$FF,$F8,$00,$01,$FF,$FE,$3E,$00  ; ($198B)
                .byte $07,$FF,$FC,$00,$03,$9F,$FC,$3C,$00,$0F,$FF,$FE,$00,$00,$0F,$FF  ; ($199B)
                .byte $80,$F8,$00,$1F,$FF,$18,$00,$03,$33,$FC,$07,$C0,$03,$FF,$FC,$00  ; ($19AB)
                .byte $00,$01,$EE,$E0,$01,$F8,$00,$3F,$FF,$40,$06,$02,$31,$38,$C7,$1F  ; ($19BB)
                .byte $00,$03,$FF,$09,$01,$81,$20,$7B,$F1,$CC,$44,$70,$41,$4E,$CC,$C2  ; ($19CB)
                .byte $41,$23,$0A,$71,$43,$32,$84,$E3,$20,$E3,$52,$22,$11,$C5,$71,$C1  ; ($19DB)
                .byte $01,$D4,$E7,$A7,$84,$19,$B5,$44,$F3,$10,$28,$C2,$B2,$C6,$51,$D8  ; ($19EB)
                .byte $61,$47,$02,$1A,$25,$55,$38,$33,$A9,$51,$99,$14,$79,$5D,$53,$2A  ; ($19FB)
                .byte $02,$63,$4B,$87,$58,$38,$C8,$29,$BF,$28,$DC,$8C,$94,$EE,$32,$D7  ; ($1A0B)
                .byte $49,$6A,$90,$EC,$0C,$C4,$27,$0A,$88,$42,$92,$08,$84,$5C,$08,$E0  ; ($1A1B)
                .byte $24,$60,$BB,$40,$88,$4E,$83,$06,$2A,$01,$10,$80,$04,$10,$08,$66  ; ($1A2B)
                .byte $22,$F4,$00,$76,$D3,$3A,$00,$01,$08,$00,$28,$90,$10,$10,$09,$01  ; ($1A3B)
                .byte $00,$0A,$B4,$88,$00,$11,$42,$40,$84,$02,$00,$08,$44,$08,$01,$08  ; ($1A4B)
                .byte $88,$44,$10,$80,$08,$04,$00,$82,$41,$20,$04,$20,$48,$01,$21,$08  ; ($1A5B)
                .byte $00,$01,$14,$00,$40,$00,$00,$00,$02,$30,$20,$80,$06,$00,$50,$14  ; ($1A6B)
                .byte $80,$00,$92,$44,$15,$48,$10,$18,$00,$00,$04,$00,$04,$00,$00,$40  ; ($1A7B)
                .byte $08,$D2,$A0,$00,$C0,$23,$00,$00,$00,$65,$20,$80,$80,$04,$01,$8A  ; ($1A8B)
                .byte $00,$19,$C9,$00,$44,$91,$98,$40,$92,$C1,$3A,$88,$C4,$8C,$0E,$A3  ; ($1A9B)
                .byte $6A,$03,$3D,$33,$9E,$C2,$56,$60,$9C,$24,$31,$C7,$7E,$01,$3F,$FC  ; ($1AAB)
                .byte $23,$CD,$E4,$7C,$03,$FE,$0F,$FC,$07,$EF,$81,$F0,$0F,$F0,$7F,$C0  ; ($1ABB)
                .byte $7C,$70,$7C,$07,$C0,$3F,$83,$FC,$79,$BC,$33,$E6,$1F,$F0,$FC,$1F  ; ($1ACB)
                .byte $C3,$84,$79,$87,$71,$DE,$3B,$8F,$00,$E6,$39,$C6,$78,$8F,$3E,$21  ; ($1ADB)
                .byte $CF,$1D,$E3,$1C,$63,$9F,$80,$67,$19,$E4,$39,$0E,$FE,$43,$30,$9E  ; ($1AEB)
                .byte $67,$98,$7F,$79,$0E,$E1,$1E,$E3,$98,$73,$F7,$19,$C4,$7F,$31,$DD  ; ($1AFB)
                .byte $B7,$61,$B8,$8D,$E6,$4F,$33,$F7,$0D,$0A,$CC,$33,$DC,$87,$F6,$EE  ; ($1B0B)
                .byte $33,$31,$9C,$CC,$CF,$6E,$C7,$73,$1B,$FD,$88,$EE,$73,$19,$CC,$67  ; ($1B1B)
                .byte $39,$88,$FE,$73,$19,$98,$8C,$EE,$47,$F7,$D8,$8C,$CC,$6F,$F0,$1F  ; ($1B2B)
                .byte $FB,$B1,$4C,$E6,$37,$FE,$01,$FE,$EC,$46,$E6,$27,$FE,$07,$FF,$91  ; ($1B3B)
                .byte $1D,$D8,$CF,$FC,$47,$F7,$EC,$43,$7B,$08,$FF,$C4,$7F,$FC,$88,$EE  ; ($1B4B)
                .byte $C0,$7F,$E0,$7F,$FC,$80,$6E,$C2,$3F,$F8,$8F,$F7,$E4,$23,$B8,$80  ; ($1B5B)
                .byte $FF,$E0,$3F,$FE,$41,$3F,$81,$1F,$F8,$1F,$FF,$98,$E7,$F8,$86,$7F  ; ($1B6B)
                .byte $C0,$1F,$EF,$90,$47,$F8,$0F,$FF,$00,$EF,$39,$86,$FF,$88,$FF,$10  ; ($1B7B)
                .byte $47,$FC,$E1,$0E,$79,$C3,$3F,$E0,$0F,$FF,$F0,$07,$FC,$03,$FE,$10  ; ($1B8B)
                .byte $FF,$98,$E0,$0F,$F8,$01,$FF,$0C,$3E,$F1,$FE,$00,$FF,$80,$3F,$E0  ; ($1B9B)
                .byte $C3,$CF,$3F,$00,$7F,$C0,$7F,$C0,$3D,$E3,$FB,$F0,$23,$FC,$81,$FF  ; ($1BAB)
                .byte $C0,$F3,$C3,$ED,$E0,$97,$D0,$0F,$FC,$0F,$1C,$1F,$1F,$05,$0F,$C0  ; ($1BBB)
                .byte $07,$F8,$07,$C3,$C3,$C3,$C1,$E7,$F0,$03,$F0,$03,$E7,$C7,$87,$81  ; ($1BCB)
                .byte $AF,$E0,$21,$FC,$00,$0F,$F3,$E0,$F8,$1E,$FF,$00,$3F,$C0,$01,$F8  ; ($1BDB)
                .byte $38,$7C,$07,$BF,$80,$E3,$F8,$00,$1F,$83,$C3,$F0,$3F,$7F,$03,$F7  ; ($1BEB)
                .byte $E0,$00,$FC,$38,$7E,$03,$FF,$E0,$3F,$FE,$00,$1F,$E0,$01,$F8,$07  ; ($1BFB)
                .byte $FF,$F0,$0F,$8F,$C0,$3F,$C3,$87,$E0,$3F,$FF,$80,$FF,$9F,$00,$7F  ; ($1C0B)
                .byte $1F,$07,$E0,$0F,$FF,$E0,$1E,$0F,$C0,$1F,$FF,$87,$E0,$1F,$FF,$C0  ; ($1C1B)
                .byte $3F,$FF,$80,$3F,$C3,$C3,$F8,$03,$FF,$F8,$03,$E1,$F8,$07,$E3,$E0  ; ($1C2B)
                .byte $FC,$03,$FF,$F8,$00,$07,$F8,$01,$FF,$FE,$1F,$C0,$0F,$FF,$E0,$07  ; ($1C3B)
                .byte $1F,$E0,$0F,$8F,$E1,$F8,$03,$FF,$F8,$00,$01,$FC,$01,$FC,$FE,$07  ; ($1C4B)
                .byte $E0,$07,$FF,$F0,$00,$0F,$E0,$03,$FF,$80,$FC,$02,$DF,$F8,$00,$03  ; ($1C5B)
                .byte $FC,$00,$03,$FC,$07,$F0,$04,$3F,$F0,$00,$1F,$C0,$00,$FE,$00,$F0  ; ($1C6B)
                .byte $00,$0F,$F8,$00,$01,$F8,$00,$2D,$B1,$01,$F0,$00,$1F,$FF,$00,$00  ; ($1C7B)
                .byte $00,$18,$E0,$00,$00,$00,$00,$1F,$FF,$C0,$00,$00,$00,$00,$00,$00  ; ($1C8B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$0F,$C0,$00,$00,$00,$00,$00,$00  ; ($1C9B)
                .byte $00,$00,$00,$07,$39,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($1CAB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($1CBB)
                .byte $00,$00,$11,$BF,$5A,$96,$34,$A1,$43,$1A,$22,$15,$29,$51,$5C,$A9  ; ($1CCB)
                .byte $9A,$54,$84,$54,$2A,$64,$92,$45,$14,$90,$C8,$52,$83,$04,$41,$02  ; ($1CDB)
                .byte $41,$A5,$0A,$18,$C0,$42,$02,$51,$41,$28,$98,$63,$C0,$02,$00,$08  ; ($1CEB)
                .byte $1E,$70,$00,$00,$60,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($1CFB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($1D0B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($1D1B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($1D2B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($1D3B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($1D4B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($1D5B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($1D6B)
                .byte $00,$00,$00,$00,$08,$C0,$02,$00,$E7,$FC,$00,$3F,$E0,$78,$1F,$81  ; ($1D7B)
                .byte $FF,$C0,$FF,$E0,$7F,$80,$FC,$E0,$F8,$3F,$FC,$1F,$CF,$03,$F0,$40  ; ($1D8B)
                .byte $FC,$1F,$07,$E0,$7F,$78,$3F,$00,$1F,$03,$FF,$07,$E0,$F0,$3F,$3C  ; ($1D9B)
                .byte $1F,$C0,$07,$E0,$7E,$18,$1F,$80,$F0,$3F,$0C,$1F,$83,$EF,$81,$F0  ; ($1DAB)
                .byte $70,$FC,$1F,$03,$F0,$C0,$FC,$0F,$9F,$03,$F0,$70,$7C,$0F,$81,$F0  ; ($1DBB)
                .byte $B0,$FC,$1F,$1C,$1F,$83,$87,$E0,$FC,$0F,$C3,$C3,$F0,$3E,$0E,$0F  ; ($1DCB)
                .byte $83,$C1,$F0,$7E,$07,$C3,$C3,$E0,$FC,$38,$3C,$1E,$1F,$81,$F8,$1F  ; ($1DDB)
                .byte $81,$87,$E0,$7C,$1C,$1F,$07,$87,$C1,$FE,$07,$C1,$E7,$E0,$F0,$78  ; ($1DEB)
                .byte $7C,$1E,$0F,$C3,$CF,$81,$F8,$3C,$7C,$1F,$07,$07,$87,$83,$E0,$C3  ; ($1DFB)
                .byte $C0,$F8,$78,$F8,$3C,$1E,$0F,$07,$81,$FC,$00,$F8,$1F,$0F,$0F,$87  ; ($1E0B)
                .byte $83,$C3,$C3,$C0,$FF,$00,$F8,$3E,$3C,$3F,$07,$03,$C1,$E0,$F0,$03  ; ($1E1B)
                .byte $F0,$0F,$03,$E7,$C1,$F0,$00,$70,$70,$70,$01,$F0,$0F,$07,$07,$BF  ; ($1E2B)
                .byte $9E,$1E,$00,$00,$00,$00,$00,$07,$8E,$30,$18,$7F,$E7,$80,$00,$C0  ; ($1E3B)
                .byte $00,$F0,$00,$00,$E1,$80,$E1,$FF,$FF,$00,$00,$03,$C1,$C1,$C0,$01  ; ($1E4B)
                .byte $C2,$02,$1F,$FC,$E0,$00,$00,$00,$00,$00,$00,$01,$C1,$01,$07,$FF  ; ($1E5B)
                .byte $00,$00,$00,$08,$00,$00,$00,$03,$80,$0E,$3F,$9F,$E0,$00,$00,$70  ; ($1E6B)
                .byte $70,$00,$00,$00,$38,$40,$43,$FF,$C0,$00,$00,$00,$60,$00,$00,$00  ; ($1E7B)
                .byte $07,$04,$06,$1F,$8F,$80,$00,$00,$01,$80,$00,$00,$00,$07,$0C,$08  ; ($1E8B)
                .byte $3E,$7C,$00,$00,$00,$00,$00,$00,$00,$00,$00,$30,$40,$43,$C7,$87  ; ($1E9B)
                .byte $00,$00,$03,$00,$00,$00,$00,$00,$0C,$18,$08,$3E,$3C,$18,$00,$00  ; ($1EAB)
                .byte $07,$00,$00,$00,$00,$00,$0C,$00,$00,$E1,$E0,$C0,$00,$00,$00,$00  ; ($1EBB)
                .byte $00,$00,$00,$00,$18,$20,$01,$E3,$C3,$00,$00,$00,$18,$00,$00,$00  ; ($1ECB)
                .byte $00,$00,$06,$00,$00,$1E,$3C,$38,$00,$00,$00,$80,$00,$00,$00,$00  ; ($1EDB)
                .byte $00,$30,$00,$00,$FF,$E0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($1EEB)
                .byte $06,$00,$00,$38,$E0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($1EFB)
                .byte $0E,$00,$00,$71,$E0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($1F0B)
                .byte $C0,$00,$03,$FD,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$00  ; ($1F1B)
                .byte $00,$00,$FF,$E0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$20,$00,$00  ; ($1F2B)
                .byte $7E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$06,$00  ; ($1F3B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($1F4B)
                .byte $00,$00,$00,$FF,$C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($1F5B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$13,$4A,$7A  ; ($1F6B)
                .byte $48,$00,$00,$00,$09,$00,$40,$A0,$4A,$54,$82,$01,$A0,$00,$40,$04  ; ($1F7B)
                .byte $20,$00,$00,$00,$00,$E1,$80,$00,$00,$00,$00,$00,$00,$00,$00,$01  ; ($1F8B)
                .byte $80,$00,$01,$00,$00,$00,$00,$00,$00,$01,$C0,$56,$0A,$01,$00,$46  ; ($1F9B)
                .byte $22,$00,$04,$08,$81,$18,$32,$66,$44,$09,$13,$22,$07,$8B,$89,$89  ; ($1FAB)
                .byte $C7,$8F,$9F,$9F,$8F,$8F,$CF,$CF,$C7,$C7,$C7,$C7,$CF,$8F,$8F,$1F  ; ($1FBB)
                .byte $1E,$3E,$7C,$78,$F8,$F1,$F3,$E3,$E3,$E3,$E3,$E3,$E3,$E3,$C7,$C7  ; ($1FCB)
                .byte $C7,$8F,$9F,$1E,$3C,$7C,$F9,$F1,$E3,$E7,$CF,$8F,$8F,$1F,$1F,$1F  ; ($1FDB)
                .byte $1F,$3E,$3E,$3E,$3C,$7C,$F9,$F3,$E7,$C7,$8F,$1E,$3C,$7C,$F9,$F3  ; ($1FEB)
                .byte $E3,$E3,$C7,$C7,$C7,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($1FFB)
                .byte $00,$00,$3E,$00,$00,$7F,$00,$00,$7F,$00,$00,$7F,$00,$00,$41,$00  ; ($200B)
                .byte $00,$7F,$00,$00,$5D,$00,$00,$5D,$00,$00,$5D,$00,$00,$7F,$00,$00  ; ($201B)
                .byte $41,$00,$00,$3E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($202B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($203B)
                .byte $00,$00,$06,$00,$00,$0F,$00,$00,$1F,$80,$00,$3F,$C0,$00,$67,$C0  ; ($204B)
                .byte $00,$B3,$80,$01,$7B,$00,$03,$FE,$00,$02,$F4,$00,$01,$68,$00,$00  ; ($205B)
                .byte $B0,$00,$00,$60,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($206B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($207B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$FF,$80,$02,$8B,$C0  ; ($208B)
                .byte $02,$FB,$C0,$02,$FB,$C0,$02,$FB,$C0,$02,$8B,$C0,$01,$FF,$80,$00  ; ($209B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($20AB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($20BB)
                .byte $00,$00,$00,$00,$00,$60,$00,$00,$B0,$00,$01,$68,$00,$02,$F4,$00  ; ($20CB)
                .byte $03,$FE,$00,$01,$7B,$00,$00,$B3,$80,$00,$67,$C0,$00,$3F,$C0,$00  ; ($20DB)
                .byte $1F,$80,$00,$0F,$00,$00,$06,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($20EB)
                .byte $00,$00,$00,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($20FB)
                .byte $00,$00,$00,$00,$00,$3E,$00,$00,$41,$00,$00,$7F,$00,$00,$5D,$00  ; ($210B)
                .byte $00,$5D,$00,$00,$5D,$00,$00,$7F,$00,$00,$41,$00,$00,$7F,$00,$00  ; ($211B)
                .byte $7F,$00,$00,$7F,$00,$00,$3E,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($212B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($213B)
                .byte $00,$00,$00,$00,$00,$06,$00,$00,$0D,$00,$00,$16,$80,$00,$2F,$40  ; ($214B)
                .byte $00,$7F,$C0,$00,$DE,$80,$01,$CD,$00,$03,$E6,$00,$03,$FC,$00,$01  ; ($215B)
                .byte $F8,$00,$00,$F0,$00,$00,$60,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($216B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($217B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$FF,$C0,$01,$E8,$A0  ; ($218B)
                .byte $01,$EF,$A0,$01,$EF,$A0,$01,$EF,$A0,$01,$E8,$A0,$00,$FF,$C0,$00  ; ($219B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($21AB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($21BB)
                .byte $00,$00,$30,$00,$00,$78,$00,$00,$FC,$00,$01,$FE,$00,$01,$F3,$00  ; ($21CB)
                .byte $00,$E6,$80,$00,$6F,$40,$00,$3F,$E0,$00,$17,$A0,$00,$0B,$40,$00  ; ($21DB)
                .byte $06,$80,$00,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($21EB)
                .byte $00,$00,$00,$00,$00,$03,$E0,$00,$07,$F0,$00,$07,$F0,$00,$07,$F0  ; ($21FB)
                .byte $00,$04,$10,$00,$07,$F0,$00,$05,$D0,$00,$05,$50,$00,$07,$F0,$00  ; ($220B)
                .byte $07,$F0,$00,$04,$10,$00,$03,$E0,$00,$00,$00,$00,$00,$00,$00,$00  ; ($221B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($222B)
                .byte $00,$00,$00,$00,$00,$00,$18,$00,$00,$3C,$00,$00,$7E,$00,$00,$FF  ; ($223B)
                .byte $00,$01,$9F,$00,$02,$CE,$00,$05,$EC,$00,$0F,$78,$00,$0B,$D0,$00  ; ($224B)
                .byte $05,$A0,$00,$02,$C0,$00,$01,$80,$00,$00,$00,$00,$00,$00,$00,$00  ; ($225B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($226B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($227B)
                .byte $00,$07,$FE,$00,$0A,$2F,$00,$0B,$EF,$00,$0B,$6F,$00,$0B,$EF,$00  ; ($228B)
                .byte $0A,$2F,$00,$07,$FE,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($229B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($22AB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$80  ; ($22BB)
                .byte $00,$02,$C0,$00,$05,$A0,$00,$0B,$D0,$00,$0F,$78,$00,$05,$EC,$00  ; ($22CB)
                .byte $02,$CE,$00,$01,$9F,$00,$00,$FF,$00,$00,$7E,$00,$00,$3C,$00,$00  ; ($22DB)
                .byte $18,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($22EB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$E0  ; ($22FB)
                .byte $00,$04,$10,$00,$07,$F0,$00,$05,$D0,$00,$05,$50,$00,$05,$D0,$00  ; ($230B)
                .byte $07,$F0,$00,$04,$10,$00,$07,$F0,$00,$07,$F0,$00,$07,$F0,$00,$03  ; ($231B)
                .byte $E0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($232B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$C0  ; ($233B)
                .byte $00,$01,$A0,$00,$02,$D0,$00,$05,$E8,$00,$0F,$78,$00,$1B,$D0,$00  ; ($234B)
                .byte $39,$A0,$00,$7C,$C0,$00,$7F,$80,$00,$3F,$00,$00,$1E,$00,$00,$0C  ; ($235B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($236B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($237B)
                .byte $00,$3F,$F0,$00,$7A,$28,$00,$7B,$E8,$00,$7B,$68,$00,$7B,$E8,$00  ; ($238B)
                .byte $7A,$28,$00,$3F,$F0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($239B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($23AB)
                .byte $00,$00,$00,$00,$00,$0C,$00,$00,$1E,$00,$00,$3F,$00,$00,$7F,$80  ; ($23BB)
                .byte $00,$7C,$C0,$00,$39,$A0,$00,$1B,$D0,$00,$0F,$78,$00,$05,$E8,$00  ; ($23CB)
                .byte $02,$D0,$00,$01,$A0,$00,$00,$C0,$00,$00,$00,$00,$00,$00,$00,$00  ; ($23DB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($23EB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($23FB)
                .byte $00,$00,$00,$00,$1C,$38,$70,$2A,$D6,$A8,$54,$A9,$54,$AB,$56,$AA  ; ($240B)
                .byte $95,$AB,$52,$4A,$95,$2C,$26,$CD,$98,$1C,$38,$70,$00,$00,$00,$00  ; ($241B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($242B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0D,$60,$00,$0A,$90  ; ($243B)
                .byte $00,$05,$D0,$00,$0A,$B0,$00,$05,$4E,$00,$0A,$B5,$00,$0D,$CB,$00  ; ($244B)
                .byte $00,$35,$00,$00,$CA,$E0,$00,$B4,$90,$00,$AB,$50,$00,$74,$B0,$00  ; ($245B)
                .byte $0B,$50,$00,$0C,$B0,$00,$0B,$50,$00,$07,$60,$00,$00,$00,$00,$00  ; ($246B)
                .byte $00,$00,$00,$00,$00,$00,$30,$00,$00,$58,$00,$00,$AC,$00,$01,$56  ; ($247B)
                .byte $00,$01,$AA,$00,$00,$D4,$00,$00,$B4,$00,$00,$AC,$00,$00,$94,$00  ; ($248B)
                .byte $01,$2A,$00,$01,$56,$00,$01,$AA,$00,$00,$D4,$00,$00,$AC,$00,$00  ; ($249B)
                .byte $EC,$00,$00,$96,$00,$01,$2A,$00,$01,$56,$00,$00,$AA,$00,$00,$54  ; ($24AB)
                .byte $00,$00,$30,$00,$00,$00,$00,$00,$00,$00,$00,$00,$06,$A0,$00,$0D  ; ($24BB)
                .byte $50,$00,$0A,$B0,$00,$0D,$50,$00,$76,$D0,$00,$95,$50,$00,$EA,$90  ; ($24CB)
                .byte $00,$AA,$E0,$07,$55,$00,$0A,$AB,$00,$0D,$55,$00,$0D,$4E,$00,$0A  ; ($24DB)
                .byte $B0,$00,$0D,$50,$00,$0A,$90,$00,$07,$E0,$00,$00,$00,$00,$00,$00  ; ($24EB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($24FB)
                .byte $00,$00,$00,$00,$1C,$38,$70,$2A,$D6,$A8,$54,$A9,$54,$AB,$56,$AA  ; ($250B)
                .byte $95,$AB,$52,$4A,$95,$2C,$26,$CD,$98,$1C,$38,$70,$00,$00,$00,$00  ; ($251B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($252B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$05,$A0,$00,$0A,$D0  ; ($253B)
                .byte $00,$0D,$30,$00,$0A,$D0,$00,$0D,$2E,$00,$0A,$D5,$00,$09,$2D,$00  ; ($254B)
                .byte $07,$53,$00,$00,$AC,$E0,$00,$D3,$B0,$00,$AD,$50,$00,$72,$B0,$00  ; ($255B)
                .byte $0D,$50,$00,$0A,$B0,$00,$0B,$50,$00,$05,$E0,$00,$00,$00,$00,$00  ; ($256B)
                .byte $00,$00,$00,$00,$00,$00,$30,$00,$00,$58,$00,$00,$AC,$00,$01,$56  ; ($257B)
                .byte $00,$01,$AA,$00,$00,$D4,$00,$00,$B4,$00,$00,$AC,$00,$00,$94,$00  ; ($258B)
                .byte $01,$2A,$00,$01,$56,$00,$01,$AA,$00,$00,$D4,$00,$00,$AC,$00,$00  ; ($259B)
                .byte $EC,$00,$00,$96,$00,$01,$2A,$00,$01,$56,$00,$00,$AA,$00,$00,$54  ; ($25AB)
                .byte $00,$00,$30,$00,$00,$00,$00,$00,$00,$00,$00,$00,$06,$A0,$00,$09  ; ($25BB)
                .byte $50,$00,$0A,$B0,$00,$0D,$50,$00,$72,$B0,$00,$AA,$B0,$00,$D5,$50  ; ($25CB)
                .byte $00,$AA,$E0,$07,$55,$00,$09,$57,$00,$0A,$A9,$00,$0D,$6E,$00,$0A  ; ($25DB)
                .byte $B0,$00,$0D,$50,$00,$0A,$B0,$00,$07,$E0,$00,$00,$00,$00,$00,$00  ; ($25EB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$24,$00,$01,$12,$80,$00,$6B  ; ($25FB)
                .byte $00,$09,$55,$50,$02,$AA,$B0,$29,$12,$2C,$23,$9A,$A4,$0A,$50,$12  ; ($260B)
                .byte $44,$C5,$58,$12,$4A,$12,$49,$A2,$A0,$04,$0C,$8A,$2A,$A1,$20,$01  ; ($261B)
                .byte $12,$90,$16,$49,$04,$00,$A4,$40,$03,$15,$10,$00,$D8,$40,$00,$27  ; ($262B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$0A,$00,$00,$20,$C0,$00,$84  ; ($263B)
                .byte $00,$00,$29,$50,$00,$92,$00,$02,$A5,$A0,$02,$48,$D4,$05,$2A,$A0  ; ($264B)
                .byte $04,$87,$18,$09,$28,$2A,$06,$41,$D4,$04,$94,$A8,$0B,$12,$12,$08  ; ($265B)
                .byte $4C,$EC,$0A,$A2,$18,$00,$58,$A4,$05,$02,$10,$00,$28,$E0,$02,$47  ; ($266B)
                .byte $30,$00,$12,$40,$00,$4F,$FF,$00,$FF,$00,$8B,$00,$FF,$00,$89,$31  ; ($267B)
                .byte $FF,$00,$FF,$31,$FF,$00,$2C,$31,$73,$00,$2C,$00,$FF,$00,$FF,$30  ; ($268B)
                .byte $33,$37,$2C,$21,$FF,$00,$2C,$31,$FF,$00,$2C,$31,$34,$00,$FF,$31  ; ($269B)
                .byte $35,$00,$2C,$00,$FF,$32,$2C,$31,$75,$35,$2C,$31,$35,$00,$FF,$00  ; ($26AB)
                .byte $75,$39,$7C,$00,$FF,$30,$2C,$31,$B6,$11,$2C,$31,$FF,$20,$00,$00  ; ($26BB)
                .byte $FF,$3E,$FF,$91,$FF,$55,$AB,$31,$FF,$00,$31,$36,$33,$2C,$31,$36  ; ($26CB)
                .byte $35,$00,$31,$36,$FF,$2C,$31,$36,$FF,$2C,$31,$37,$31,$2C,$31,$37  ; ($26DB)
                .byte $FF,$00,$32,$15,$FF,$00,$32,$35,$00,$2C,$31,$37,$35,$2C,$31,$37  ; ($26EB)
                .byte $77,$00,$FF,$00,$FF,$FF,$00,$FF,$00,$FF,$34,$FF,$00,$FF,$34,$30  ; ($26FB)
                .byte $00,$FF,$00,$72,$00,$FF,$39,$30,$30,$FF,$1E,$FF,$00,$FF,$00,$71  ; ($270B)
                .byte $33,$30,$00,$DE,$00,$FF,$08,$86,$00,$FF,$25,$28,$32,$FF,$00,$29  ; ($271B)
                .byte $3A,$FF,$49,$FF,$00,$E5,$33,$34,$2A,$87,$41,$3A,$41,$FF,$00,$FF  ; ($272B)
                .byte $01,$29,$A2,$FF,$00,$82,$3A,$8E,$00,$90,$27,$CA,$00,$DF,$34,$FF  ; ($273B)
                .byte $00,$33,$00,$2C,$00,$37,$2C,$31,$00,$FF,$2C,$31,$35,$37,$2C,$32  ; ($274B)
                .byte $39,$FF,$31,$39,$00,$31,$13,$2C,$00,$34,$37,$2C,$31,$33,$33,$2C  ; ($275B)
                .byte $00,$FF,$30,$2C,$00,$3B,$35,$2C,$FF,$31,$2C,$31,$18,$38,$2C,$31  ; ($276B)
                .byte $28,$FF,$00,$FF,$00,$00,$FF,$00,$FF,$00,$AF,$00,$FF,$00,$37,$33  ; ($277B)
                .byte $FF,$00,$FF,$24,$FF,$00,$27,$D4,$48,$00,$31,$00,$FF,$00,$FF,$38  ; ($278B)
                .byte $32,$2C,$31,$21,$FF,$00,$37,$37,$FF,$00,$32,$2C,$37,$00,$FF,$31  ; ($279B)
                .byte $33,$00,$2C,$00,$FF,$34,$0C,$37,$76,$2C,$38,$33,$2C,$00,$FF,$00  ; ($27AB)
                .byte $79,$35,$7C,$00,$FF,$00,$D5,$27,$C6,$09,$A1,$43,$FF,$20,$8B,$00  ; ($27BB)
                .byte $FF,$B2,$FF,$22,$FF,$32,$35,$30,$FF,$00,$DB,$27,$C5,$09,$8E,$00  ; ($27CB)
                .byte $00,$00,$4D,$00,$FF,$60,$20,$02,$FF,$56,$56,$90,$50,$00,$00,$00  ; ($27DB)
                .byte $FF,$00,$58,$00,$FF,$00,$A2,$04,$00,$00,$B1,$FD,$B1,$FB,$88,$D0  ; ($27EB)
                .byte $FD,$00,$FF,$00,$FF,$00,$00,$00,$00,$00,$0F,$00,$00,$FF,$00,$03  ; ($27FB)
                .byte $FF,$00,$0F,$FF,$00,$3F,$F8,$00,$7F,$87,$00,$FC,$78,$03,$F9,$80  ; ($280B)
                .byte $07,$E6,$00,$0F,$8C,$00,$0F,$36,$00,$1E,$7B,$00,$3C,$FD,$80,$79  ; ($281B)
                .byte $FE,$C0,$79,$1F,$60,$F2,$0F,$B0,$F2,$07,$D8,$E4,$03,$ED,$C8,$01  ; ($282B)
                .byte $F7,$C8,$00,$FB,$00,$00,$00,$00,$F0,$00,$00,$FF,$00,$00,$FF,$C0  ; ($283B)
                .byte $00,$FF,$F0,$00,$1F,$FC,$00,$E1,$FE,$00,$1E,$3F,$00,$01,$9F,$C0  ; ($284B)
                .byte $00,$E7,$E0,$00,$71,$F0,$00,$7C,$F0,$00,$FA,$78,$01,$F7,$3C,$03  ; ($285B)
                .byte $ED,$9E,$07,$D8,$9E,$0F,$B0,$4F,$1F,$60,$4F,$BE,$C0,$27,$FD,$80  ; ($286B)
                .byte $13,$FB,$00,$13,$C0,$00,$00,$00,$00,$00,$0F,$00,$00,$FF,$00,$03  ; ($287B)
                .byte $FF,$00,$0F,$FF,$00,$3F,$F8,$00,$7F,$87,$00,$FC,$7F,$03,$F9,$8F  ; ($288B)
                .byte $07,$E6,$07,$0F,$8C,$07,$0F,$30,$07,$1E,$60,$07,$3C,$C0,$07,$79  ; ($289B)
                .byte $80,$07,$79,$00,$07,$F2,$00,$07,$F2,$00,$07,$E4,$00,$0F,$C8,$00  ; ($28AB)
                .byte $1D,$CF,$FF,$FE,$FF,$00,$00,$00,$F0,$00,$00,$FF,$00,$00,$FF,$C0  ; ($28BB)
                .byte $00,$FF,$F0,$00,$1F,$FC,$00,$E1,$FE,$00,$FE,$3F,$00,$E1,$9F,$C0  ; ($28CB)
                .byte $E0,$67,$E0,$E0,$31,$F0,$E0,$0C,$F0,$E0,$06,$78,$E0,$03,$3C,$E0  ; ($28DB)
                .byte $01,$9E,$E0,$00,$9E,$E0,$00,$4F,$E0,$00,$4F,$F0,$00,$67,$B8,$00  ; ($28EB)
                .byte $73,$7F,$FF,$F3,$9F,$00,$00,$00,$00,$00,$0F,$00,$00,$FF,$00,$03  ; ($28FB)
                .byte $FF,$00,$0F,$FF,$00,$3F,$F8,$00,$7F,$87,$00,$FC,$78,$03,$F9,$80  ; ($290B)
                .byte $07,$E6,$00,$0F,$8C,$00,$0F,$36,$00,$1E,$7B,$00,$3C,$FD,$80,$79  ; ($291B)
                .byte $FE,$C0,$79,$1F,$60,$F2,$0F,$B0,$F2,$07,$D8,$E4,$03,$ED,$C8,$01  ; ($292B)
                .byte $F7,$C8,$00,$FB,$E6,$00,$00,$00,$F0,$00,$00,$FF,$00,$00,$FF,$C0  ; ($293B)
                .byte $00,$FF,$F0,$00,$20,$FC,$00,$E1,$FE,$00,$1E,$3F,$00,$01,$9F,$C0  ; ($294B)
                .byte $00,$E7,$E0,$00,$71,$F0,$00,$7C,$F0,$00,$FA,$78,$01,$F7,$3C,$03  ; ($295B)
                .byte $ED,$9E,$07,$D8,$9E,$0F,$B0,$4F,$1F,$60,$4F,$BE,$C0,$27,$FD,$80  ; ($296B)
                .byte $13,$FB,$00,$13,$E1,$00,$00,$00,$00,$00,$0F,$00,$00,$FF,$00,$03  ; ($297B)
                .byte $FF,$00,$0F,$FF,$00,$3F,$F8,$00,$7F,$87,$00,$FC,$7F,$03,$F9,$8F  ; ($298B)
                .byte $07,$E6,$07,$0F,$8C,$07,$0F,$30,$07,$1E,$60,$07,$3C,$C0,$07,$79  ; ($299B)
                .byte $80,$07,$79,$00,$07,$F2,$00,$07,$F2,$00,$07,$E4,$00,$0F,$C8,$00  ; ($29AB)
                .byte $1D,$CF,$FF,$FE,$FF,$00,$00,$00,$F0,$00,$00,$FF,$00,$00,$FF,$C0  ; ($29BB)
                .byte $00,$FF,$F0,$00,$1F,$FC,$00,$E1,$FE,$00,$FE,$3F,$00,$E1,$9F,$C0  ; ($29CB)
                .byte $E0,$67,$E0,$E0,$31,$F0,$E0,$0C,$F0,$E0,$06,$78,$E0,$03,$3C,$E0  ; ($29DB)
                .byte $01,$9E,$E0,$00,$9E,$E0,$00,$4F,$E0,$00,$4F,$F0,$00,$67,$B8,$00  ; ($29EB)
                .byte $73,$7F,$FF,$F3,$3F,$00,$00,$FF,$00,$FF,$48,$FF,$00,$FF,$CA,$C8  ; ($29FB)
                .byte $00,$FF,$00,$E3,$00,$FF,$EB,$29,$20,$FF,$29,$FF,$00,$FF,$00,$FD  ; ($2A0B)
                .byte $00,$C8,$91,$FF,$00,$FF,$C0,$3F,$00,$FF,$A0,$00,$A9,$FF,$00,$02  ; ($2A1B)
                .byte $B1,$FF,$A2,$FF,$00,$67,$22,$CA,$80,$FA,$A5,$02,$91,$FF,$00,$FF  ; ($2A2B)
                .byte $3F,$D0,$A9,$FF,$20,$00,$85,$FC,$2D,$36,$03,$0A,$00,$DF,$1A,$FF  ; ($2A3B)
                .byte $00,$0A,$00,$FC,$00,$FB,$A5,$FC,$00,$FF,$38,$85,$FC,$20,$C4,$28  ; ($2A4B)
                .byte $A5,$FF,$8D,$37,$00,$A9,$15,$38,$00,$35,$03,$C9,$08,$90,$02,$A9  ; ($2A5B)
                .byte $00,$FF,$38,$23,$00,$38,$38,$ED,$FB,$03,$C9,$08,$90,$02,$A9,$08  ; ($2A6B)
                .byte $89,$FF,$00,$FF,$00,$00,$FF,$00,$FF,$00,$83,$00,$FF,$00,$02,$8D  ; ($2A7B)
                .byte $FF,$00,$FF,$2A,$FF,$00,$39,$03,$EC,$00,$03,$00,$FF,$00,$FF,$02  ; ($2A8B)
                .byte $AD,$3B,$03,$00,$FF,$00,$23,$90,$FF,$00,$37,$03,$18,$00,$FF,$03  ; ($2A9B)
                .byte $18,$00,$35,$00,$FF,$2C,$35,$03,$FA,$AD,$34,$03,$4A,$00,$FF,$00  ; ($2AAB)
                .byte $76,$03,$9E,$00,$FF,$36,$03,$85,$FF,$8D,$36,$03,$FF,$20,$0A,$00  ; ($2ABB)
                .byte $FF,$03,$FF,$34,$FF,$38,$ED,$36,$FF,$00,$36,$03,$A9,$07,$38,$ED  ; ($2ACB)
                .byte $36,$00,$8D,$36,$FF,$A9,$21,$AE,$FF,$03,$F0,$04,$0A,$CA,$D0,$FC  ; ($2ADB)
                .byte $FF,$00,$03,$80,$FF,$00,$FD,$0D,$00,$03,$91,$FD,$EE,$34,$03,$CE  ; ($2AEB)
                .byte $7D,$00,$FF,$00,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($2AFB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($2B0B)
                .byte $00,$10,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($2B1B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($2B2B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($2B3B)
                .byte $00,$00,$00,$00,$00,$04,$00,$00,$08,$00,$00,$19,$00,$00,$08,$80  ; ($2B4B)
                .byte $00,$5A,$40,$00,$AA,$A0,$00,$2A,$C0,$01,$0D,$30,$00,$6D,$C0,$00  ; ($2B5B)
                .byte $04,$80,$00,$13,$20,$00,$0B,$00,$00,$04,$40,$00,$00,$00,$00,$00  ; ($2B6B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($2B7B)
                .byte $00,$00,$01,$00,$00,$06,$80,$00,$26,$40,$00,$09,$00,$00,$14,$30  ; ($2B8B)
                .byte $00,$65,$A8,$00,$1A,$A0,$00,$2B,$2C,$00,$12,$D0,$00,$08,$80,$00  ; ($2B9B)
                .byte $44,$40,$00,$30,$C0,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($2BAB)
                .byte $00,$00,$00,$00,$C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($2BBB)
                .byte $00,$00,$00,$00,$00,$44,$00,$00,$1A,$00,$00,$99,$00,$00,$24,$00  ; ($2BCB)
                .byte $00,$76,$C0,$01,$96,$10,$00,$6A,$80,$00,$A7,$A0,$00,$4B,$40,$00  ; ($2BDB)
                .byte $21,$00,$00,$13,$00,$00,$02,$00,$00,$04,$00,$00,$00,$00,$00,$00  ; ($2BEB)
                .byte $00,$00,$00,$00,$FF,$5C,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$00  ; ($2BFB)
                .byte $00,$FF,$00,$52,$00,$FF,$00,$13,$00,$FF,$00,$FF,$00,$FF,$00,$55  ; ($2C0B)
                .byte $00,$1B,$00,$9E,$00,$FF,$00,$19,$00,$FF,$00,$20,$00,$FF,$00,$00  ; ($2C1B)
                .byte $00,$FF,$00,$FF,$00,$41,$00,$00,$00,$00,$00,$00,$00,$FF,$00,$FF  ; ($2C2B)
                .byte $00,$00,$00,$FF,$20,$00,$00,$00,$00,$22,$00,$21,$00,$DF,$10,$FF  ; ($2C3B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$FF,$00,$00,$00,$00,$00,$00  ; ($2C4B)
                .byte $00,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($2C5B)
                .byte $00,$FF,$00,$20,$00,$29,$00,$00,$FB,$00,$00,$00,$00,$00,$00,$00  ; ($2C6B)
                .byte $00,$FF,$00,$FF,$00,$00,$FF,$00,$FF,$00,$83,$00,$FF,$00,$00,$00  ; ($2C7B)
                .byte $FF,$00,$FF,$00,$FF,$00,$00,$0A,$40,$00,$00,$00,$FF,$00,$FF,$00  ; ($2C8B)
                .byte $00,$00,$00,$00,$FF,$00,$20,$00,$FF,$00,$04,$00,$00,$00,$FF,$04  ; ($2C9B)
                .byte $00,$00,$00,$00,$FF,$00,$00,$00,$50,$00,$00,$00,$00,$00,$FF,$00  ; ($2CAB)
                .byte $40,$00,$14,$00,$DF,$00,$00,$05,$82,$00,$00,$00,$FF,$20,$00,$00  ; ($2CBB)
                .byte $FF,$00,$FF,$00,$FF,$00,$00,$00,$FF,$00,$00,$00,$00,$00,$00,$00  ; ($2CCB)
                .byte $00,$00,$00,$00,$FF,$16,$00,$00,$FF,$1D,$00,$00,$00,$00,$00,$00  ; ($2CDB)
                .byte $FF,$00,$00,$00,$FF,$00,$00,$00,$00,$17,$00,$00,$20,$15,$00,$00  ; ($2CEB)
                .byte $54,$00,$FF,$00,$FF,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$00  ; ($2CFB)
                .byte $00,$FF,$00,$40,$00,$FF,$00,$00,$00,$FF,$00,$FF,$00,$FF,$00,$41  ; ($2D0B)
                .byte $00,$00,$00,$9E,$00,$FF,$00,$00,$00,$FF,$20,$00,$00,$FF,$00,$00  ; ($2D1B)
                .byte $00,$FF,$00,$FF,$00,$41,$00,$00,$00,$00,$00,$00,$00,$FF,$00,$FF  ; ($2D2B)
                .byte $00,$00,$00,$FF,$20,$00,$00,$00,$00,$00,$00,$00,$00,$DF,$10,$FF  ; ($2D3B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$FF,$00,$00,$00,$00,$00,$00  ; ($2D4B)
                .byte $00,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($2D5B)
                .byte $00,$FF,$00,$20,$00,$29,$00,$00,$FF,$00,$00,$00,$00,$00,$00,$00  ; ($2D6B)
                .byte $00,$FF,$00,$FF,$00,$00,$FF,$00,$FF,$00,$83,$00,$FF,$00,$00,$FF  ; ($2D7B)
                .byte $FF,$00,$FF,$00,$FF,$00,$00,$FF,$40,$00,$FF,$00,$FF,$00,$FF,$BE  ; ($2D8B)
                .byte $00,$FF,$7E,$61,$FF,$00,$FF,$00,$FF,$00,$DF,$FF,$FF,$00,$FF,$FF  ; ($2D9B)
                .byte $DF,$00,$FF,$00,$FF,$BE,$FF,$00,$50,$00,$00,$00,$DF,$00,$FF,$00  ; ($2DAB)
                .byte $C2,$FF,$14,$00,$DF,$FF,$00,$B6,$82,$00,$FF,$00,$FF,$20,$00,$00  ; ($2DBB)
                .byte $FF,$00,$FF,$00,$FF,$00,$00,$00,$FF,$00,$20,$FF,$DF,$FF,$00,$FF  ; ($2DCB)
                .byte $00,$00,$00,$FF,$FF,$FF,$DF,$00,$FF,$00,$00,$FF,$00,$00,$FF,$FF  ; ($2DDB)
                .byte $FF,$00,$FF,$00,$FF,$00,$FF,$00,$00,$00,$00,$FF,$FF,$FF,$FF,$F7  ; ($2DEB)
                .byte $54,$00,$FF,$00,$FF,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$FF,$00  ; ($2DFB)
                .byte $00,$FF,$00,$FF,$00,$FF,$FF,$00,$BF,$FF,$00,$FF,$00,$FF,$00,$41  ; ($2E0B)
                .byte $FF,$00,$81,$9E,$00,$FF,$00,$FF,$00,$FF,$20,$00,$00,$FF,$00,$00  ; ($2E1B)
                .byte $00,$FF,$00,$FF,$00,$41,$00,$FF,$AF,$FF,$FF,$FF,$00,$FF,$00,$FF  ; ($2E2B)
                .byte $34,$00,$AB,$FF,$20,$00,$FF,$49,$7D,$FF,$00,$FF,$00,$FF,$FF,$FF  ; ($2E3B)
                .byte $00,$FF,$00,$FF,$00,$FF,$FF,$FF,$00,$FF,$DF,$00,$20,$00,$FF,$00  ; ($2E4B)
                .byte $FF,$FF,$FF,$00,$00,$00,$00,$FF,$00,$FF,$FF,$00,$FF,$FF,$00,$00  ; ($2E5B)
                .byte $00,$FF,$00,$FF,$00,$FF,$00,$FF,$FF,$FF,$FF,$00,$00,$00,$00,$08  ; ($2E6B)
                .byte $AB,$FF,$00,$FF,$00,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$00,$FF  ; ($2E7B)
                .byte $FF,$00,$FF,$00,$FF,$00,$00,$FF,$40,$00,$FF,$00,$FF,$00,$FF,$BE  ; ($2E8B)
                .byte $00,$FF,$7E,$61,$FF,$00,$FF,$00,$FF,$00,$FF,$FF,$FF,$00,$FF,$FF  ; ($2E9B)
                .byte $BF,$00,$FF,$00,$FF,$BE,$FF,$00,$50,$00,$00,$00,$FF,$00,$FF,$00  ; ($2EAB)
                .byte $C0,$FF,$14,$00,$FF,$BF,$00,$B6,$82,$00,$FF,$00,$FF,$20,$00,$00  ; ($2EBB)
                .byte $FF,$00,$FF,$00,$FF,$00,$00,$00,$FF,$00,$20,$FF,$DF,$FF,$00,$FF  ; ($2ECB)
                .byte $00,$00,$00,$FF,$FF,$FF,$FF,$00,$FF,$00,$00,$FF,$00,$00,$FF,$FF  ; ($2EDB)
                .byte $FF,$00,$FF,$00,$FF,$00,$FF,$00,$00,$00,$00,$FF,$FF,$FF,$BF,$F7  ; ($2EEB)
                .byte $54,$00,$FF,$00,$FF,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$FF,$00  ; ($2EFB)
                .byte $00,$FF,$00,$FF,$00,$FF,$FF,$00,$BF,$FF,$00,$FF,$00,$FF,$00,$41  ; ($2F0B)
                .byte $FF,$00,$81,$9E,$00,$FF,$00,$FF,$00,$FF,$00,$00,$00,$FF,$00,$00  ; ($2F1B)
                .byte $00,$FF,$00,$FF,$00,$41,$00,$FF,$AF,$FF,$FF,$FF,$00,$FF,$00,$FF  ; ($2F2B)
                .byte $14,$00,$AB,$FF,$00,$00,$FF,$49,$7D,$FF,$00,$FF,$00,$DF,$FF,$FF  ; ($2F3B)
                .byte $00,$FF,$00,$FF,$00,$FF,$FF,$FF,$00,$FF,$DF,$00,$20,$00,$FF,$00  ; ($2F4B)
                .byte $FF,$FF,$FF,$00,$00,$00,$00,$FF,$00,$FF,$FF,$00,$FF,$FF,$00,$00  ; ($2F5B)
                .byte $00,$FF,$00,$FF,$00,$FF,$00,$FF,$FF,$FF,$FF,$00,$00,$00,$00,$08  ; ($2F6B)
                .byte $AB,$FF,$00,$FF,$00,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$00,$FF  ; ($2F7B)
                .byte $FF,$00,$FF,$00,$FF,$00,$00,$FF,$40,$00,$FF,$00,$FF,$00,$FF,$BE  ; ($2F8B)
                .byte $00,$FF,$7E,$61,$FF,$00,$FF,$00,$FF,$00,$FF,$FF,$FF,$00,$FF,$FF  ; ($2F9B)
                .byte $FF,$00,$FF,$00,$FF,$BE,$FF,$00,$50,$00,$00,$00,$FF,$00,$FF,$00  ; ($2FAB)
                .byte $C2,$FF,$54,$00,$FF,$FF,$00,$B6,$82,$00,$FF,$00,$FF,$20,$00,$00  ; ($2FBB)
                .byte $FF,$00,$FF,$00,$FF,$00,$00,$00,$FF,$00,$20,$FF,$DF,$FF,$00,$FF  ; ($2FCB)
                .byte $00,$00,$00,$FF,$FF,$FF,$FF,$00,$FF,$00,$00,$FF,$00,$00,$FF,$FF  ; ($2FDB)
                .byte $FF,$00,$FF,$00,$FF,$00,$52,$54,$00,$45,$45,$53,$74,$52,$45,$45  ; ($2FEB)
                .byte $57,$00,$FF,$00,$FF                 ; ($2FFB)

; ==================================================
; Section: MAIN CHARACTER SET (Data)
; Range: $3000 - $37FF (2048 bytes)
; ==================================================

                .byte $AA,$FC,$FC,$FC,$FC,$FC,$FF,$FF,$AA,$F3,$F3,$F3,$F3,$F3,$FF,$FF  ; ($3000)
                .byte $AA,$CF,$CF,$CF,$CF,$CF,$FF,$FF,$AA,$3F,$3F,$3F,$3F,$3F,$FF,$FF  ; ($3010)
                .byte $AA,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$0F,$3F,$7F,$77,$F7,$F7,$F7,$F7  ; ($3020)
                .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$F0,$FC,$EE,$EE,$EF,$EF,$EF,$EF  ; ($3030)
                .byte $FF,$FF,$FF,$FF,$E0,$F0,$F8,$FF,$FF,$FF,$BD,$FF,$00,$00,$00,$FF  ; ($3040)
                .byte $FF,$FF,$FF,$FF,$07,$0F,$1F,$FF,$FF,$CF,$C7,$C7,$C7,$C7,$C7,$C7  ; ($3050)
                .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$F3,$E3,$E3,$E3,$E3,$E3,$E3  ; ($3060)
                .byte $F7,$C7,$C7,$C7,$C7,$CF,$DF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$00  ; ($3070)
                .byte $FF,$E3,$E3,$E3,$E3,$F3,$FB,$7F,$F8,$E0,$7F,$3F,$0F,$00,$00,$00  ; ($3080)
                .byte $00,$00,$FF,$FF,$FF,$00,$00,$00,$1F,$07,$FE,$FC,$F0,$00,$00,$00  ; ($3090)
                .byte $F0,$C0,$C0,$C0,$C0,$C0,$C0,$C0,$00,$00,$00,$00,$00,$00,$00,$00  ; ($30A0)
                .byte $0F,$03,$03,$03,$03,$03,$03,$03,$C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0  ; ($30B0)
                .byte $03,$03,$03,$03,$03,$03,$03,$0F,$60,$FF,$FF,$00,$FF,$FF,$3F,$3F  ; ($30C0)
                .byte $00,$FF,$FF,$00,$FF,$FF,$FF,$FF,$00,$FF,$FF,$F3,$3F,$FC,$FC,$FF  ; ($30D0)
                .byte $FF,$FF,$3F,$3F,$FF,$FF,$3F,$3F,$FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC  ; ($30E0)
                .byte $FF,$FF,$FC,$FC,$FF,$FF,$FC,$FC,$FF,$FF,$FC,$CF,$84,$87,$CC,$FF  ; ($30F0)
                .byte $FF,$FF,$00,$FF,$00,$FF,$00,$FF,$FF,$FF,$FF,$FF,$00,$FF,$FF,$FF  ; ($3100)
                .byte $FC,$FC,$FC,$FC,$00,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$00,$FF,$00  ; ($3110)
                .byte $FF,$FF,$FF,$FF,$FF,$FE,$F9,$F9,$FF,$FF,$FF,$FF,$FF,$7F,$9F,$9F  ; ($3120)
                .byte $F9,$F9,$F9,$F9,$F9,$F9,$F9,$F9,$9F,$9F,$9F,$9F,$9F,$9F,$9F,$9F  ; ($3130)
                .byte $F9,$F9,$FE,$FF,$FF,$FF,$FF,$FF,$00,$FF,$00,$FF,$FF,$FF,$FF,$FF  ; ($3140)
                .byte $9F,$9F,$7F,$C1,$C9,$C9,$C1,$FF,$01,$02,$04,$09,$13,$27,$4F,$9F  ; ($3150)
                .byte $3F,$7D,$FD,$F5,$F5,$D5,$D5,$15,$1F,$3F,$7D,$FD,$F5,$F5,$D5,$D5  ; ($3160)
                .byte $55,$55,$55,$75,$FD,$DD,$75,$55,$FF,$55,$55,$55,$55,$55,$55,$57  ; ($3170)
                .byte $5D,$5D,$5D,$5D,$5D,$5D,$5D,$5D,$FF,$55,$55,$55,$57,$55,$FF,$55  ; ($3180)
                .byte $5F,$75,$55,$D5,$7D,$D5,$55,$75,$FF,$55,$55,$D7,$D7,$55,$FF,$55  ; ($3190)
                .byte $55,$D5,$55,$75,$56,$76,$56,$D6,$FF,$55,$55,$55,$D5,$55,$FF,$55  ; ($31A0)
                .byte $55,$55,$5D,$77,$77,$77,$5D,$55,$FF,$57,$57,$57,$57,$57,$57,$D7  ; ($31B0)
                .byte $77,$77,$77,$77,$77,$77,$77,$77,$FF,$AA,$AA,$AB,$AB,$AB,$AB,$AB  ; ($31C0)
                .byte $FF,$55,$FF,$4C,$61,$61,$4C,$FF,$FF,$55,$FF,$AE,$AE,$AE,$AE,$FF  ; ($31D0)
                .byte $FF,$55,$FF,$A1,$AF,$AF,$A1,$FF,$FF,$55,$FF,$75,$FD,$FD,$75,$FF  ; ($31E0)
                .byte $FF,$D7,$FF,$EB,$EB,$EB,$EB,$EB,$FF,$55,$5F,$F3,$F3,$5F,$55,$FF  ; ($31F0)
                .byte $FF,$55,$55,$FF,$FF,$55,$55,$FF,$FF,$55,$55,$55,$55,$55,$55,$FF  ; ($3200)
                .byte $FF,$AA,$AA,$AA,$AA,$AA,$AA,$AA,$FC,$FE,$7F,$7F,$5F,$5F,$57,$FF  ; ($3210)
                .byte $00,$00,$00,$00,$00,$00,$00,$3F,$00,$00,$00,$00,$00,$00,$3F,$3F  ; ($3220)
                .byte $00,$00,$00,$00,$00,$3F,$3F,$3F,$00,$00,$00,$00,$3F,$3F,$3F,$3F  ; ($3230)
                .byte $00,$00,$00,$3F,$3F,$3F,$3F,$3F,$00,$00,$3F,$3F,$3F,$3F,$3F,$3F  ; ($3240)
                .byte $00,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F  ; ($3250)
                .byte $80,$40,$20,$90,$C8,$E4,$F2,$F9,$FC,$FE,$BF,$BF,$AF,$AF,$AB,$AB  ; ($3260)
                .byte $FF,$D5,$D5,$D5,$D5,$D5,$D5,$FF,$01,$02,$04,$09,$13,$27,$4F,$9F  ; ($3270)
                .byte $80,$40,$20,$90,$C8,$E4,$F2,$F9,$FD,$FD,$F5,$F5,$D5,$D5,$55,$55  ; ($3280)
                .byte $55,$55,$55,$55,$55,$54,$50,$40,$55,$55,$55,$55,$55,$15,$05,$01  ; ($3290)
                .byte $55,$54,$50,$40,$00,$00,$00,$00,$55,$15,$05,$01,$00,$00,$00,$00  ; ($32A0)
                .byte $BF,$BF,$AF,$AF,$AB,$AB,$AA,$AA,$FE,$FE,$FA,$FA,$EA,$EA,$AA,$AA  ; ($32B0)
                .byte $AA,$AA,$AA,$AA,$AA,$A8,$A0,$80,$AA,$AA,$AA,$AA,$AA,$2A,$0A,$02  ; ($32C0)
                .byte $AA,$A8,$A0,$80,$00,$00,$00,$00,$AA,$2A,$0A,$02,$00,$00,$00,$00  ; ($32D0)
                .byte $55,$55,$55,$55,$55,$55,$55,$55,$AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA  ; ($32E0)
                .byte $00,$CF,$CF,$CF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($32F0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3300)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3310)
                .byte $00,$3F,$33,$33,$33,$33,$33,$3F,$00,$0C,$0C,$0C,$0C,$0C,$0C,$0C  ; ($3320)
                .byte $00,$3F,$03,$03,$3F,$30,$30,$3F,$00,$3F,$03,$03,$3F,$03,$03,$3F  ; ($3330)
                .byte $00,$33,$33,$33,$3F,$03,$03,$03,$00,$3F,$30,$30,$3F,$03,$03,$3F  ; ($3340)
                .byte $00,$3F,$30,$30,$3F,$33,$33,$3F,$00,$1F,$03,$03,$03,$03,$03,$03  ; ($3350)
                .byte $00,$3F,$33,$33,$3F,$33,$33,$3F,$00,$3F,$33,$33,$3F,$03,$03,$3F  ; ($3360)
                .byte $00,$00,$18,$18,$00,$18,$18,$00,$FD,$FE,$F9,$F6,$D9,$E6,$99,$66  ; ($3370)
                .byte $99,$66,$99,$66,$99,$64,$90,$40,$99,$66,$99,$66,$99,$26,$09,$02  ; ($3380)
                .byte $99,$64,$90,$40,$00,$00,$00,$00,$99,$26,$09,$02,$00,$00,$00,$00  ; ($3390)
                .byte $99,$66,$99,$66,$99,$66,$99,$66,$00,$00,$00,$00,$00,$00,$00,$00  ; ($33A0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($33B0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($33C0)
                .byte $40,$40,$00,$40,$00,$00,$00,$40,$00,$00,$00,$00,$00,$B7,$B7,$B7  ; ($33D0)
                .byte $B6,$BE,$B6,$B6,$B6,$B7,$BF,$BF,$B6,$0C,$04,$BC,$B6,$BC,$96,$BC  ; ($33E0)
                .byte $F4,$FD,$F4,$FD,$F6,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ; ($33F0)
                .byte $7E,$66,$66,$7E,$66,$66,$66,$00,$7E,$66,$66,$78,$66,$66,$7E,$00  ; ($3400)
                .byte $7E,$60,$60,$60,$60,$60,$7E,$00,$7C,$66,$66,$66,$66,$66,$7C,$00  ; ($3410)
                .byte $7E,$60,$60,$78,$60,$60,$7E,$00,$7E,$60,$60,$78,$60,$60,$60,$00  ; ($3420)
                .byte $7E,$60,$60,$6E,$66,$66,$7E,$00,$66,$66,$66,$7E,$66,$66,$66,$00  ; ($3430)
                .byte $18,$18,$18,$18,$18,$18,$18,$00,$06,$06,$06,$06,$66,$66,$7E,$00  ; ($3440)
                .byte $66,$66,$66,$78,$66,$66,$66,$00,$60,$60,$60,$60,$60,$60,$7E,$00  ; ($3450)
                .byte $66,$7E,$7E,$66,$66,$66,$66,$00,$66,$76,$7E,$6E,$66,$66,$66,$00  ; ($3460)
                .byte $7E,$66,$66,$66,$66,$66,$7E,$00,$7E,$66,$66,$7E,$60,$60,$60,$00  ; ($3470)
                .byte $7E,$66,$66,$66,$62,$6E,$7E,$00,$7E,$66,$66,$78,$66,$66,$66,$00  ; ($3480)
                .byte $7E,$60,$60,$7E,$06,$06,$7E,$00,$7E,$18,$18,$18,$18,$18,$18,$00  ; ($3490)
                .byte $66,$66,$66,$66,$66,$66,$7E,$00,$66,$66,$66,$66,$66,$3C,$18,$00  ; ($34A0)
                .byte $66,$66,$66,$66,$7E,$7E,$66,$00,$66,$66,$66,$18,$66,$66,$66,$00  ; ($34B0)
                .byte $66,$66,$66,$18,$18,$18,$18,$00,$7E,$06,$0C,$18,$30,$60,$7E,$00  ; ($34C0)
                .byte $00,$00,$00,$00,$00,$18,$18,$00,$00,$00,$00,$00,$00,$18,$08,$08  ; ($34D0)
                .byte $00,$03,$04,$08,$10,$20,$C0,$00,$18,$18,$18,$18,$18,$00,$18,$18  ; ($34E0)
                .byte $00,$00,$00,$7E,$7E,$00,$00,$00,$78,$60,$60,$60,$60,$60,$60,$78  ; ($34F0)
                .byte $1E,$06,$06,$06,$06,$06,$06,$1E,$00,$18,$18,$7E,$7E,$18,$18,$00  ; ($3500)
                .byte $01,$05,$05,$0D,$0D,$0D,$0D,$0D,$80,$A0,$A0,$B0,$B0,$B0,$B0,$B0  ; ($3510)
                .byte $0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$B0,$B0,$B0,$B0,$B0,$B0,$B0,$B0  ; ($3520)
                .byte $00,$00,$FF,$00,$FF,$FF,$FF,$00,$00,$00,$00,$00,$3C,$76,$FB,$FF  ; ($3530)
                .byte $AA,$AA,$AA,$AA,$A2,$A2,$AA,$AA,$AA,$AA,$82,$82,$82,$82,$AA,$AA  ; ($3540)
                .byte $AA,$80,$80,$80,$80,$80,$80,$AA,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3550)
                .byte $2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$A8,$A8,$A8,$A8,$A8,$A8,$A8,$A8  ; ($3560)
                .byte $AA,$AA,$AA,$AA,$AA,$AA,$A8,$A8,$AA,$AA,$AA,$AA,$AA,$AA,$00,$00  ; ($3570)
                .byte $AA,$AA,$AA,$AA,$AA,$AA,$2A,$2A,$A8,$A8,$AA,$AA,$AA,$AA,$AA,$AA  ; ($3580)
                .byte $00,$00,$AA,$AA,$AA,$AA,$AA,$AA,$2A,$2A,$AA,$AA,$AA,$AA,$AA,$AA  ; ($3590)
                .byte $A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A  ; ($35A0)
                .byte $AA,$AA,$AA,$AA,$A0,$A0,$A0,$A0,$AA,$AA,$AA,$AA,$00,$00,$00,$00  ; ($35B0)
                .byte $AA,$AA,$AA,$AA,$0A,$0A,$0A,$0A,$A0,$A0,$A0,$A0,$AA,$AA,$AA,$AA  ; ($35C0)
                .byte $00,$00,$00,$00,$AA,$AA,$AA,$AA,$0A,$0A,$0A,$0A,$AA,$AA,$AA,$AA  ; ($35D0)
                .byte $70,$70,$70,$70,$70,$70,$70,$70,$38,$7C,$1C,$7C,$38,$00,$00,$7E  ; ($35E0)
                .byte $00,$7E,$00,$00,$1C,$3E,$38,$3E,$10,$10,$10,$10,$10,$10,$10,$10  ; ($35F0)
                .byte $38,$38,$38,$18,$0F,$00,$00,$00,$00,$00,$00,$00,$FF,$00,$00,$00  ; ($3600)
                .byte $1C,$00,$00,$00,$FF,$00,$00,$00,$10,$10,$10,$10,$F0,$00,$00,$00  ; ($3610)
                .byte $00,$00,$00,$00,$00,$00,$00,$3F,$00,$00,$00,$00,$00,$00,$3F,$3F  ; ($3620)
                .byte $00,$00,$00,$00,$00,$3F,$3F,$3F,$00,$00,$00,$00,$3F,$3F,$3F,$3F  ; ($3630)
                .byte $00,$00,$00,$3F,$3F,$3F,$3F,$3F,$00,$00,$3F,$3F,$3F,$3F,$3F,$3F  ; ($3640)
                .byte $00,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F  ; ($3650)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3660)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3670)
                .byte $7F,$7F,$5F,$5F,$57,$57,$55,$55,$FD,$FD,$F5,$F5,$D5,$D5,$55,$55  ; ($3680)
                .byte $55,$55,$55,$55,$57,$5C,$70,$C0,$55,$55,$55,$55,$D5,$35,$0D,$03  ; ($3690)
                .byte $57,$5C,$70,$C0,$00,$00,$00,$00,$D5,$35,$0D,$03,$00,$00,$00,$00  ; ($36A0)
                .byte $BF,$BF,$AF,$AF,$AB,$AB,$AA,$AA,$FE,$FE,$FA,$FA,$EA,$EA,$AA,$AA  ; ($36B0)
                .byte $AA,$AA,$AA,$AA,$AB,$AC,$B0,$C0,$AA,$AA,$AA,$AA,$EA,$3A,$0E,$03  ; ($36C0)
                .byte $AB,$AC,$B0,$C0,$00,$00,$00,$00,$EA,$3A,$0E,$03,$00,$00,$00,$00  ; ($36D0)
                .byte $55,$55,$55,$55,$55,$55,$55,$55,$AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA  ; ($36E0)
                .byte $FF,$00,$00,$00,$00,$00,$00,$00,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$AA  ; ($36F0)
                .byte $AA,$AA,$AA,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3700)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3710)
                .byte $00,$45,$00,$51,$00,$45,$00,$51,$45,$45,$00,$51,$51,$00,$45,$45  ; ($3720)
                .byte $00,$51,$51,$00,$45,$45,$00,$51,$51,$00,$45,$45,$00,$51,$51,$00  ; ($3730)
                .byte $45,$45,$45,$00,$51,$51,$51,$00,$45,$4D,$45,$00,$51,$51,$51,$00  ; ($3740)
                .byte $00,$45,$00,$FF,$00,$00,$00,$00,$00,$51,$51,$FF,$00,$00,$00,$00  ; ($3750)
                .byte $51,$00,$45,$FF,$00,$00,$00,$00,$45,$45,$00,$FF,$00,$00,$00,$00  ; ($3760)
                .byte $BF,$7F,$9F,$6F,$9B,$67,$99,$66,$FD,$FE,$F9,$F6,$D9,$E6,$99,$66  ; ($3770)
                .byte $99,$66,$99,$66,$9B,$6C,$B0,$C0,$99,$66,$99,$66,$D9,$36,$0D,$03  ; ($3780)
                .byte $9B,$6C,$B0,$C0,$00,$00,$00,$00,$D9,$36,$0D,$03,$00,$00,$00,$00  ; ($3790)
                .byte $99,$66,$99,$66,$99,$66,$99,$66,$00,$00,$00,$00,$00,$00,$00,$00  ; ($37A0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($37B0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($37C0)
                .byte $40,$40,$00,$40,$00,$00,$00,$40,$00,$00,$00,$00,$00,$B7,$B7,$B7  ; ($37D0)
                .byte $B6,$BE,$B6,$B6,$B6,$B7,$BF,$BF,$B6,$0C,$04,$BC,$B6,$BC,$96,$BC  ; ($37E0)
                .byte $F4,$FD,$F4,$FD,$F6,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ; ($37F0)

; ==================================================
; Section: Secondary charset: animation frames, UI elements (Data)
; Range: $3800 - $3FFF (2048 bytes)
; ==================================================

                .byte $00,$00,$00,$00,$00,$00,$00,$00,$AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA  ; ($3800)
                .byte $AA,$AA,$AA,$82,$82,$82,$AA,$AA,$AA,$96,$96,$96,$96,$96,$96,$AA  ; ($3810)
                .byte $AA,$96,$96,$AA,$96,$96,$96,$AA,$AA,$AA,$AB,$AB,$A3,$AF,$B3,$BF  ; ($3820)
                .byte $FE,$CE,$FA,$FA,$2A,$EA,$AA,$AA,$AA,$AA,$EA,$EA,$FA,$CA,$FE,$F2  ; ($3830)
                .byte $BC,$BF,$A3,$AF,$AB,$AB,$AA,$AA,$FF,$CF,$FF,$FF,$F3,$FF,$CF,$FF  ; ($3840)
                .byte $AA,$FF,$F3,$FF,$CF,$FF,$FC,$FF,$FF,$CF,$FF,$FC,$FF,$FF,$FF,$AA  ; ($3850)
                .byte $FE,$CE,$FE,$FE,$F2,$FE,$CE,$FE,$BF,$8F,$BF,$B3,$BC,$8F,$BF,$BF  ; ($3860)
                .byte $AA,$AA,$AA,$AA,$AE,$AE,$BE,$BE,$BE,$BE,$BA,$BA,$AA,$AA,$AA,$AA  ; ($3870)
                .byte $AA,$AA,$AB,$AB,$AF,$AF,$BF,$AA,$AA,$FE,$FA,$FA,$EA,$EA,$AA,$AA  ; ($3880)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3890)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($38A0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($38B0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($38C0)
                .byte $00,$14,$41,$55,$41,$14,$00,$00,$AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA  ; ($38D0)
                .byte $00,$10,$14,$55,$55,$14,$10,$00,$10,$10,$10,$10,$54,$54,$10,$00  ; ($38E0)
                .byte $00,$04,$14,$55,$55,$14,$04,$00,$00,$10,$54,$54,$10,$10,$10,$10  ; ($38F0)
                .byte $AA,$CE,$FE,$FE,$CE,$FE,$3E,$CE,$AA,$BF,$BF,$B3,$8F,$BF,$B3,$BF  ; ($3900)
                .byte $FE,$3E,$FE,$CE,$FE,$3E,$CE,$AA,$BF,$B3,$BF,$8F,$BF,$B3,$BF,$AA  ; ($3910)
                .byte $FF,$FF,$FC,$FE,$FF,$FF,$DF,$CF,$C7,$C3,$C1,$C0,$E0,$F0,$FC,$CF  ; ($3920)
                .byte $C0,$C0,$C0,$F0,$FE,$FF,$FF,$FF,$FF,$FF,$1C,$0C,$06,$86,$C3,$C3  ; ($3930)
                .byte $E1,$F1,$F8,$7C,$3E,$1E,$07,$03,$F1,$38,$0C,$03,$01,$C2,$FF,$FF  ; ($3940)
                .byte $FF,$FF,$1F,$1F,$0F,$0F,$0F,$07,$87,$87,$C3,$C3,$63,$23,$17,$9B  ; ($3950)
                .byte $E7,$D9,$A3,$43,$43,$87,$BF,$FF,$FF,$FF,$F8,$F8,$F0,$F0,$F0,$E0  ; ($3960)
                .byte $E1,$E1,$C3,$C3,$C6,$C4,$E8,$D9,$E7,$9B,$C5,$C2,$C2,$E1,$FD,$FF  ; ($3970)
                .byte $FF,$FF,$38,$30,$60,$61,$C3,$C3,$87,$8F,$1F,$3E,$7C,$78,$E0,$C0  ; ($3980)
                .byte $8F,$1C,$30,$C0,$80,$43,$FF,$FF,$FF,$FF,$3F,$7F,$FF,$FF,$FB,$F3  ; ($3990)
                .byte $E3,$C3,$83,$03,$07,$0F,$3F,$F3,$03,$03,$03,$0F,$7F,$FF,$FF,$FF  ; ($39A0)
                .byte $FF,$FD,$E1,$C2,$C2,$C5,$9B,$E7,$D9,$E8,$C4,$C6,$C3,$C3,$E1,$E1  ; ($39B0)
                .byte $E0,$F0,$F0,$F0,$F8,$F8,$FF,$FF,$FF,$FF,$43,$80,$C0,$30,$1C,$8F  ; ($39C0)
                .byte $C0,$E0,$78,$7C,$3E,$1F,$8F,$87,$C3,$C3,$61,$60,$30,$38,$FF,$FF  ; ($39D0)
                .byte $FF,$FF,$FF,$7F,$0F,$03,$03,$03,$F3,$3F,$0F,$07,$03,$83,$C3,$E3  ; ($39E0)
                .byte $F3,$FB,$FF,$FF,$7F,$3F,$FF,$FF,$FF,$FF,$FF,$FE,$F0,$C0,$C0,$C0  ; ($39F0)
                .byte $CF,$FC,$F0,$E0,$C0,$C1,$C3,$C7,$CF,$DF,$FF,$FF,$FE,$FC,$FF,$FF  ; ($3A00)
                .byte $FF,$FF,$C2,$01,$03,$0C,$38,$F1,$03,$07,$1E,$3E,$7C,$F8,$F1,$E1  ; ($3A10)
                .byte $C3,$C3,$86,$06,$0C,$1C,$FF,$FF,$FF,$BF,$87,$43,$43,$A3,$D9,$E7  ; ($3A20)
                .byte $9B,$17,$23,$63,$C3,$C3,$87,$87,$05,$0F,$0F,$0F,$1F,$1F,$FD,$FF  ; ($3A30)
                .byte $15,$45,$51,$54,$15,$45,$51,$54,$55,$15,$55,$45,$55,$51,$55,$54  ; ($3A40)
                .byte $55,$55,$41,$55,$55,$55,$55,$14,$00,$00,$14,$41,$55,$55,$55,$55  ; ($3A50)
                .byte $54,$55,$45,$45,$45,$45,$55,$54,$55,$55,$55,$55,$55,$55,$55,$55  ; ($3A60)
                .byte $2A,$AA,$A2,$A2,$A2,$A2,$AA,$2A,$AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA  ; ($3A70)
                .byte $15,$45,$51,$54,$15,$45,$51,$54,$55,$15,$55,$45,$55,$51,$55,$54  ; ($3A80)
                .byte $3C,$42,$40,$40,$40,$42,$3C,$00,$7C,$42,$42,$42,$42,$42,$7C,$00  ; ($3A90)
                .byte $7E,$40,$40,$78,$40,$40,$7E,$00,$7E,$40,$40,$78,$40,$40,$40,$00  ; ($3AA0)
                .byte $3C,$42,$40,$4E,$42,$42,$3C,$00,$42,$42,$42,$7E,$42,$42,$42,$00  ; ($3AB0)
                .byte $38,$10,$10,$10,$10,$10,$38,$00,$02,$02,$02,$02,$42,$42,$3C,$00  ; ($3AC0)
                .byte $44,$48,$50,$60,$50,$48,$44,$00,$40,$40,$40,$40,$40,$40,$7C,$00  ; ($3AD0)
                .byte $42,$66,$5A,$42,$42,$42,$42,$00,$42,$62,$52,$4A,$46,$42,$42,$00  ; ($3AE0)
                .byte $3C,$42,$42,$42,$42,$42,$3C,$00,$7C,$42,$42,$7C,$40,$40,$40,$00  ; ($3AF0)
                .byte $3C,$42,$42,$42,$4A,$46,$3E,$00,$7C,$42,$42,$7C,$48,$44,$42,$00  ; ($3B00)
                .byte $3C,$42,$40,$3C,$02,$42,$3C,$00,$7F,$08,$08,$08,$08,$08,$08,$00  ; ($3B10)
                .byte $42,$42,$42,$42,$42,$42,$3C,$00,$42,$42,$42,$42,$42,$24,$18,$00  ; ($3B20)
                .byte $42,$42,$42,$42,$5A,$66,$42,$00,$42,$42,$24,$18,$24,$42,$42,$00  ; ($3B30)
                .byte $42,$42,$24,$18,$08,$10,$20,$00,$7E,$02,$04,$08,$10,$20,$7E,$00  ; ($3B40)
                .byte $3C,$42,$62,$52,$4A,$46,$3C,$00,$08,$18,$08,$08,$08,$08,$1C,$00  ; ($3B50)
                .byte $3C,$42,$02,$3C,$40,$40,$7E,$00,$3C,$42,$02,$1C,$02,$42,$3C,$00  ; ($3B60)
                .byte $04,$0C,$14,$24,$7E,$04,$04,$00,$7E,$40,$7C,$02,$02,$42,$3C,$00  ; ($3B70)
                .byte $3C,$42,$40,$7C,$42,$42,$3C,$00,$7E,$02,$04,$08,$10,$10,$10,$00  ; ($3B80)
                .byte $3C,$42,$42,$3C,$42,$42,$3C,$00,$3C,$42,$42,$3E,$02,$42,$3C,$00  ; ($3B90)
                .byte $00,$18,$18,$00,$00,$18,$18,$00,$28,$28,$28,$28,$28,$28,$28,$27  ; ($3BA0)
                .byte $9C,$60,$23,$10,$0E,$04,$02,$01,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3BB0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3BC0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3BD0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3BE0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3BF0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA  ; ($3C00)
                .byte $AA,$AA,$AA,$82,$82,$82,$AA,$AA,$AA,$96,$96,$96,$96,$96,$96,$AA  ; ($3C10)
                .byte $AA,$96,$96,$AA,$96,$96,$96,$AA,$AA,$AA,$AB,$AB,$A3,$AF,$B3,$BF  ; ($3C20)
                .byte $FE,$CE,$FA,$FA,$2A,$EA,$AA,$AA,$AA,$AA,$EA,$EA,$FA,$CA,$FE,$F2  ; ($3C30)
                .byte $BC,$BF,$A3,$AF,$AB,$AB,$AA,$AA,$FF,$CF,$FF,$FF,$F3,$FF,$CF,$FF  ; ($3C40)
                .byte $AA,$FF,$F3,$FF,$CF,$FF,$FC,$FF,$FF,$CF,$FF,$FC,$FF,$FF,$FF,$AA  ; ($3C50)
                .byte $FE,$CE,$FE,$FE,$F2,$FE,$CE,$FE,$BF,$8F,$BF,$B3,$BC,$8F,$BF,$BF  ; ($3C60)
                .byte $AA,$AA,$AA,$AA,$AE,$AE,$BE,$BE,$BE,$BE,$BA,$BA,$AA,$AA,$AA,$AA  ; ($3C70)
                .byte $AA,$AA,$AB,$AB,$AF,$AF,$BF,$AA,$AA,$FE,$FA,$FA,$EA,$EA,$AA,$AA  ; ($3C80)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3C90)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3CA0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3CB0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3CC0)
                .byte $00,$14,$41,$55,$41,$14,$00,$00,$AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA  ; ($3CD0)
                .byte $00,$10,$14,$55,$55,$14,$10,$00,$10,$10,$10,$10,$54,$54,$10,$00  ; ($3CE0)
                .byte $00,$04,$14,$55,$55,$14,$04,$00,$00,$10,$54,$54,$10,$10,$10,$10  ; ($3CF0)
                .byte $AA,$CE,$FE,$FE,$CE,$FE,$3E,$CE,$AA,$BF,$BF,$B3,$8F,$BF,$B3,$BF  ; ($3D00)
                .byte $FE,$3E,$FE,$CE,$FE,$3E,$CE,$AA,$BF,$B3,$BF,$8F,$BF,$B3,$BF,$AA  ; ($3D10)
                .byte $FF,$FF,$FC,$FE,$FF,$FF,$DF,$CF,$C7,$C3,$C1,$C0,$E0,$F0,$FC,$CF  ; ($3D20)
                .byte $C0,$C0,$C0,$F0,$FE,$FF,$FF,$FF,$FF,$FF,$1C,$0C,$06,$86,$C3,$C3  ; ($3D30)
                .byte $E1,$F1,$F8,$7C,$3E,$1E,$07,$03,$F1,$38,$0C,$03,$01,$C2,$FF,$FF  ; ($3D40)
                .byte $FF,$FF,$1F,$1F,$0F,$0F,$0F,$07,$87,$87,$C3,$C3,$63,$23,$17,$9B  ; ($3D50)
                .byte $E7,$D9,$A3,$43,$43,$87,$BF,$FF,$FF,$FF,$F8,$F8,$F0,$F0,$F0,$E0  ; ($3D60)
                .byte $E1,$E1,$C3,$C3,$C6,$C4,$E8,$D9,$E7,$9B,$C5,$C2,$C2,$E1,$FD,$FF  ; ($3D70)
                .byte $FF,$FF,$38,$30,$60,$61,$C3,$C3,$87,$8F,$1F,$3E,$7C,$78,$E0,$C0  ; ($3D80)
                .byte $8F,$1C,$30,$C0,$80,$43,$FF,$FF,$FF,$FF,$3F,$7F,$FF,$FF,$FB,$F3  ; ($3D90)
                .byte $E3,$C3,$83,$03,$07,$0F,$3F,$F3,$03,$03,$03,$0F,$7F,$FF,$FF,$FF  ; ($3DA0)
                .byte $FF,$FD,$E1,$C2,$C2,$C5,$9B,$E7,$D9,$E8,$C4,$C6,$C3,$C3,$E1,$E1  ; ($3DB0)
                .byte $E0,$F0,$F0,$F0,$F8,$F8,$FF,$FF,$FF,$FF,$43,$80,$C0,$30,$1C,$8F  ; ($3DC0)
                .byte $C0,$E0,$78,$7C,$3E,$1F,$8F,$87,$C3,$C3,$61,$60,$30,$38,$FF,$FF  ; ($3DD0)
                .byte $FF,$FF,$FF,$7F,$0F,$03,$03,$03,$F3,$3F,$0F,$07,$03,$83,$C3,$E3  ; ($3DE0)
                .byte $F3,$FB,$FF,$FF,$7F,$3F,$FF,$FF,$FF,$FF,$FF,$FE,$F0,$C0,$C0,$C0  ; ($3DF0)
                .byte $CF,$FC,$F0,$E0,$C0,$C1,$C3,$C7,$CF,$DF,$FF,$FF,$FE,$FC,$FF,$FF  ; ($3E00)
                .byte $FF,$FF,$C2,$01,$03,$0C,$38,$F1,$03,$07,$1E,$3E,$7C,$F8,$F1,$E1  ; ($3E10)
                .byte $C3,$C3,$86,$06,$0C,$1C,$FF,$FF,$FF,$BF,$87,$43,$43,$A3,$D9,$E7  ; ($3E20)
                .byte $9B,$17,$23,$63,$C3,$C3,$87,$87,$05,$0F,$0F,$0F,$1F,$1F,$FD,$FF  ; ($3E30)
                .byte $15,$45,$51,$54,$15,$45,$51,$54,$55,$15,$55,$45,$55,$51,$55,$54  ; ($3E40)
                .byte $55,$55,$41,$55,$55,$55,$55,$14,$00,$00,$14,$41,$55,$55,$55,$55  ; ($3E50)
                .byte $54,$55,$45,$45,$45,$45,$55,$54,$55,$55,$55,$55,$55,$55,$55,$55  ; ($3E60)
                .byte $2A,$AA,$A2,$A2,$A2,$A2,$AA,$2A,$AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA  ; ($3E70)
                .byte $15,$45,$51,$54,$15,$45,$51,$54,$55,$15,$55,$45,$55,$51,$55,$54  ; ($3E80)
                .byte $3C,$42,$40,$40,$40,$42,$3C,$00,$7C,$42,$42,$42,$42,$42,$7C,$00  ; ($3E90)
                .byte $7E,$40,$40,$78,$40,$40,$7E,$00,$7E,$40,$40,$78,$40,$40,$40,$00  ; ($3EA0)
                .byte $3C,$42,$40,$4E,$42,$42,$3C,$00,$42,$42,$42,$7E,$42,$42,$42,$00  ; ($3EB0)
                .byte $38,$10,$10,$10,$10,$10,$38,$00,$02,$02,$02,$02,$42,$42,$3C,$00  ; ($3EC0)
                .byte $44,$48,$50,$60,$50,$48,$44,$00,$40,$40,$40,$40,$40,$40,$7C,$00  ; ($3ED0)
                .byte $42,$66,$5A,$42,$42,$42,$42,$00,$42,$62,$52,$4A,$46,$42,$42,$00  ; ($3EE0)
                .byte $3C,$42,$42,$42,$42,$42,$3C,$00,$7C,$42,$42,$7C,$40,$40,$40,$00  ; ($3EF0)
                .byte $3C,$42,$42,$42,$4A,$46,$3E,$00,$7C,$42,$42,$7C,$48,$44,$42,$00  ; ($3F00)
                .byte $3C,$42,$40,$3C,$02,$42,$3C,$00,$7F,$08,$08,$08,$08,$08,$08,$00  ; ($3F10)
                .byte $42,$42,$42,$42,$42,$42,$3C,$00,$42,$42,$42,$42,$42,$24,$18,$00  ; ($3F20)
                .byte $42,$42,$42,$42,$5A,$66,$42,$00,$42,$42,$24,$18,$24,$42,$42,$00  ; ($3F30)
                .byte $42,$42,$24,$18,$08,$10,$20,$00,$7E,$02,$04,$08,$10,$20,$7E,$00  ; ($3F40)
                .byte $3C,$42,$62,$52,$4A,$46,$3C,$00,$08,$18,$08,$08,$08,$08,$1C,$00  ; ($3F50)
                .byte $3C,$42,$02,$3C,$40,$40,$7E,$00,$3C,$42,$02,$1C,$02,$42,$3C,$00  ; ($3F60)
                .byte $04,$0C,$14,$24,$7E,$04,$04,$00,$7E,$40,$7C,$02,$02,$42,$3C,$00  ; ($3F70)
                .byte $3C,$42,$40,$7C,$42,$42,$3C,$00,$7E,$02,$04,$08,$10,$10,$10,$00  ; ($3F80)
                .byte $3C,$42,$42,$3C,$42,$42,$3C,$00,$3C,$42,$42,$3E,$02,$42,$3C,$00  ; ($3F90)
                .byte $00,$18,$18,$00,$00,$18,$18,$00,$28,$28,$28,$28,$28,$28,$28,$27  ; ($3FA0)
                .byte $9C,$60,$23,$10,$0E,$04,$02,$01,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3FB0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3FC0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3FD0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3FE0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($3FF0)

; ==================================================
; Section: Some init system (Code)
; Range: $4000 - $40FB (252 bytes)
; Master initialization routine: sets up entities, hardware (CIA/VIC/SID),
; sprite system, screen colors, and game state variables. Initializes 32
; entities via L49C0, disables CIA timers, configures sprites 4-5 for
; display, sets multicolor mode, establishes VIC memory bank ($0E), and
; copies initialization data from $8300 to $0300.
; ==================================================

init_game_systems
                LDX #$1F                                  ; ($4000)
init_entity_loop
                JSR init_entity                           ; ($4002)
init_secondary_loop
                DEX                                       ; ($4005)
                BPL init_entity_loop                      ; ($4006)
                DEX                                       ; ($4008)
                BPL init_secondary_loop                   ; ($4009)
                NOP                                       ; ($400B)
                NOP                                       ; ($400C)
                NOP                                       ; ($400D)
                NOP                                       ; ($400E)
                NOP                                       ; ($400F)
                NOP                                       ; ($4010)
                NOP                                       ; ($4011)
                NOP                                       ; ($4012)
                NOP                                       ; ($4013)
                NOP                                       ; ($4014)
                NOP                                       ; ($4015)
                NOP                                       ; ($4016)
                NOP                                       ; ($4017)
                NOP                                       ; ($4018)
                NOP                                       ; ($4019)
                NOP                                       ; ($401A)
                NOP                                       ; ($401B)
                NOP                                       ; ($401C)
                NOP                                       ; ($401D)
                NOP                                       ; ($401E)
                NOP                                       ; ($401F)
                NOP                                       ; ($4020)
                NOP                                       ; ($4021)
                NOP                                       ; ($4022)
                NOP                                       ; ($4023)
                NOP                                       ; ($4024)
                LDA $DD0E                                 ; ($4025)
                AND #$FE                                  ; ($4028)
                STA $DD0E                                 ; ($402A)
                LDA CIA1_ControlRegisterA                 ; ($402D)
                AND #$FE                                  ; ($4030)
                STA CIA1_ControlRegisterA                 ; ($4032)
                LDA #$04                                  ; ($4035)
                STA V_HorzRasterScrollLoop                ; ($4037)
                LDA #$01                                  ; ($403A)
                STA $033F                                 ; ($403C)
                STA sprite_init_xpos_high                 ; ($403F)
                STA sprite_init_ypos_high                 ; ($4042)
                LDA #$FA                                  ; ($4045)
                STA sprite_init_xpos_low                  ; ($4047)
                STA sprite_init_ypos_low                  ; ($404A)
                LDA #$0F                                  ; ($404D)
                STA SID_VolumeFilter                      ; ($404F)
                NOP                                       ; ($4052)
                NOP                                       ; ($4053)
                NOP                                       ; ($4054)
                NOP                                       ; ($4055)
                NOP                                       ; ($4056)
                NOP                                       ; ($4057)
                NOP                                       ; ($4058)
                NOP                                       ; ($4059)
                NOP                                       ; ($405A)
                NOP                                       ; ($405B)
                NOP                                       ; ($405C)
                NOP                                       ; ($405D)
                NOP                                       ; ($405E)
                NOP                                       ; ($405F)
                NOP                                       ; ($4060)
                NOP                                       ; ($4061)
                NOP                                       ; ($4062)
                NOP                                       ; ($4063)
                NOP                                       ; ($4064)
                NOP                                       ; ($4065)
                JSR randomize_game_state                  ; ($4066)
                NOP                                       ; ($4069)
                NOP                                       ; ($406A)
                LDA #$00                                  ; ($406B)
                STA mayday_ready_flag                     ; ($406D)
                STA EndGameFlag                           ; ($4070) #00 Continue / #80 Mayday found / Ends game #27
                LDA #$30                                  ; ($4073)
                STA VIC_SpriteEnableRegister              ; ($4075)
                LDA #$01                                  ; ($4078)
                STA VIC_Sprite4Color                      ; ($407A)
                STA VIC_Sprite5Color                      ; ($407D)
                LDA #$5E                                  ; ($4080)
                STA VIC_Sprite4Xcoord                     ; ($4082)
                LDA #$75                                  ; ($4085)
                STA VIC_Sprite5Xcoord                     ; ($4087)
                LDA #$75                                  ; ($408A)
                STA VIC_Sprite4Ycoord                     ; ($408C)
                STA VIC_Sprite5Ycoord                     ; ($408F)
                LDA VIC_SpriteSpriteCollisionRegister     ; ($4092)
                LDA VIC_SpriteBackgroundCollisionReg      ; ($4095)
                LDY #$A1                                  ; ($4098)
                STY VIC_SpritePointer5                    ; ($409A)
                DEY                                       ; ($409D)
                STY VIC_SpritePointer4                    ; ($409E)
                LDY #$00                                  ; ($40A1)
copy_sprite_data_loop
                LDA sprite_init_xpos_low,Y                ; ($40A3)
                STA V_SprPosHorizLow,Y                    ; ($40A6)
                INY                                       ; ($40A9)
                BNE copy_sprite_data_loop                 ; ($40AA)
                LDA #$07                                  ; ($40AC)
                STA VIC_SpriteExtraColor1                 ; ($40AE)
                LDA #$02                                  ; ($40B1)
                STA VIC_SpriteExtraColor2                 ; ($40B3)
                LDA #$0E                                  ; ($40B6)
                STA V_Sprite7Color                        ; ($40B8)
                LDA #$01                                  ; ($40BB)
                STA VIC_Sprite4Color                      ; ($40BD)
                STA VIC_Sprite5Color                      ; ($40C0)
                LDA VIC_MemorySetupRegister               ; ($40C3)
                AND #$F0                                  ; ($40C6)
                ORA #$0E                                  ; ($40C8)
                STA VIC_MemorySetupRegister               ; ($40CA)
                LDA #$06                                  ; ($40CD)
                STA V_BorderColor                         ; ($40CF)
                LDA #$0B                                  ; ($40D2)
                STA VIC_BackgroundColor                   ; ($40D4)
                LDA VIC_ScreenControlRegister2            ; ($40D7)
                ORA #$10                                  ; ($40DA)
                STA VIC_ScreenControlRegister2            ; ($40DC)
                LDA $01                                   ; ($40DF)
                AND #$FE                                  ; ($40E1)
                STA $01                                   ; ($40E3)
                LDA #$00                                  ; ($40E5)
                STA V_MaydayLanded                        ; ($40E7) #00 continue circling / #01 Landed
                STA $02FF                                 ; ($40EA)
                JSR L4140                                 ; ($40ED)
                LDY #$34                                  ; ($40F0)
copy_init_data_loop
                LDA $8300,Y                               ; ($40F2)
                STA $0300,Y                               ; ($40F5)
                INY                                       ; ($40F8)
                BNE copy_init_data_loop                   ; ($40F9)
                RTS                                       ; ($40FB)

; ==================================================
; Section: Junk (Junk)
; Range: $40FC - $413F (68 bytes)
; ==================================================

                .byte $60,$60,$60,$60,$FF,$00,$FD,$00,$FF,$FF,$FF,$00,$FD,$00,$FF,$FF  ; ($40FC)
                .byte $FF,$FF,$FF,$00,$FD,$00,$FF,$00,$FF,$FF,$FF,$FF,$FF,$02,$FF,$00  ; ($410C)
                .byte $FF,$00,$FF,$40,$FD,$08,$FF,$00,$FF,$20,$FF,$00,$FF,$F3,$FF,$00  ; ($411C)
                .byte $FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00  ; ($412C)
                .byte $FF,$00,$FF,$00                     ; ($413C)

; ==================================================
; Section: copy_data_tables (Code)
; Range: $4140 - $4151 (18 bytes)
; Copies two 5-byte data tables to high memory. Transfers bytes from $4152 to
; $9EEF and from $4157 to $9FFC. Purpose unclear - likely initializing sprite
; data or patching screen/color memory in upper RAM region.
; ==================================================

L4140
                LDY #$04                                  ; ($4140)
L4142
                LDA $4152,Y                               ; ($4142)
                STA $9EEF,Y                               ; ($4145)
                LDA $4157,Y                               ; ($4148)
                STA $9FFC,Y                               ; ($414B)
                DEY                                       ; ($414E)
                BPL L4142                                 ; ($414F)
                RTS                                       ; ($4151)

; ==================================================
; Section: Junk (Junk)
; Range: $4152 - $416F (30 bytes)
; ==================================================

                .byte $00,$00,$00,$01,$01,$05,$09,$09,$09,$09,$09,$00,$5F,$00,$A9,$03  ; ($4152)
                .byte $8D,$E0,$02,$4C,$30,$4F,$FF,$B1,$FF,$FF,$FF,$00,$FF,$00  ; ($4162)

; ==================================================
; Section: Sub_DashClock (Data)
; Range: $4170 - $41F0 (129 bytes)
; Dashboard countdown timer. Decrements multi-digit BCD counter from starting
; value (899 or similar). Uses cascading borrow logic across 7+ digits with
; rollover checks. Counts down with pattern suggesting format like seconds or
; deciseconds. Updates 8-byte screen display at Screen_DashClock by adding
; $64 (PETSCII digit offset) to convert BCD digits to screen codes.
; ==================================================

Sub_DashClock
                LDX #$00                                  ; ($4170)
                INC countdown_digit_0                     ; ($4172)
                LDA countdown_digit_0                     ; ($4175)
                CMP #$3C                                  ; ($4178)
                BCC update_counter_display                ; ($417A)
                STX countdown_digit_0                     ; ($417C)
                INC countdown_digit_1                     ; ($417F)
                LDA countdown_digit_1                     ; ($4182)
                CMP #$0A                                  ; ($4185)
                BCC update_counter_display                ; ($4187)
                STX countdown_digit_1                     ; ($4189)
                INC countdown_digit_2                     ; ($418C)
                LDA countdown_digit_2                     ; ($418F)
                CMP #$06                                  ; ($4192)
                BCC update_counter_display                ; ($4194)
                STX countdown_digit_2                     ; ($4196)
                INC countdown_digit_3                     ; ($4199)
                LDA countdown_digit_3                     ; ($419C)
                CMP #$0A                                  ; ($419F)
                BCC update_counter_display                ; ($41A1)
                STX countdown_digit_3                     ; ($41A3)
                INC countdown_digit_4                     ; ($41A6)
                LDA countdown_digit_4                     ; ($41A9)
                CMP #$06                                  ; ($41AC)
                BCC update_counter_display                ; ($41AE)
                STX countdown_digit_4                     ; ($41B0)
                INC countdown_digit_5                     ; ($41B3)
                LDA countdown_digit_5                     ; ($41B6)
                CMP #$0A                                  ; ($41B9)
                BCC check_zero_limit                      ; ($41BB)
                STX countdown_digit_5                     ; ($41BD)
                INC countdown_digit_6                     ; ($41C0)
check_zero_limit
                LDA countdown_digit_5                     ; ($41C3)
                CMP #$04                                  ; ($41C6)
                BCC update_counter_display                ; ($41C8)
                LDA countdown_digit_6                     ; ($41CA)
                CMP #$02                                  ; ($41CD)
                BCC update_counter_display                ; ($41CF)
                NOP                                       ; ($41D1)
                NOP                                       ; ($41D2)
                NOP                                       ; ($41D3)
                NOP                                       ; ($41D4)
                NOP                                       ; ($41D5)
                NOP                                       ; ($41D6)
                NOP                                       ; ($41D7)
                NOP                                       ; ($41D8)
                NOP                                       ; ($41D9)
                STX countdown_digit_6                     ; ($41DA)
                STX countdown_digit_5                     ; ($41DD)
update_counter_display
                LDY #$00                                  ; ($41E0)
display_counter_loop
                CLC                                       ; ($41E2)
                LDA countdown_digit_6,Y                   ; ($41E3)
                ADC #$64                                  ; ($41E6)
                STA Screen_DashClock,Y                    ; ($41E8)
                INY                                       ; ($41EB)
                CPY #$08                                  ; ($41EC)
                BNE display_counter_loop                  ; ($41EE)
                RTS                                       ; ($41F0)

; ==================================================
; Section: Junk (Junk)
; Range: $41F1 - $41FF (15 bytes)
; ==================================================

                .byte $60,$60,$60,$60,$60,$60,$60,$60,$EA,$EA,$EA,$EA,$EA,$EA,$FF  ; ($41F1)

; ==================================================
; Section: Sub_UpdateSpritePosition (Code)
; Range: $4200 - $4252 (83 bytes)
; Updates sprite position and hardware registers. Takes sprite number in
; accumulator, X/Y coordinates in $AF/$AC, and sprite pointer in $AE.
; Calculates bit mask for sprite, stores coordinates to $CFFE+offset, sets
; sprite pointer at $07F7+offset, handles X-coordinate MSB bit in $D010, and
; enables sprite in VIC register.
; ==================================================

Sub_UpdateSpritePosition
                PHA                                       ; ($4200)
                LDA #$00                                  ; ($4201)
                BCC store_x_msb                           ; ($4203)
                ADC #$00                                  ; ($4205)
store_x_msb
                STA $02                                   ; ($4207)
                STX $AF                                   ; ($4209)
                STY $AC                                   ; ($420B)
                PLA                                       ; ($420D)
                TAX                                       ; ($420E)
                PHA                                       ; ($420F)
                LDA #$00                                  ; ($4210)
                TAY                                       ; ($4212)
                SEC                                       ; ($4213)
calculate_sprite_bitmask
                ROL A                                     ; ($4214)
                INY                                       ; ($4215)
                INY                                       ; ($4216)
                DEX                                       ; ($4217)
                BNE calculate_sprite_bitmask              ; ($4218)
                STA $FB                                   ; ($421A)
                STY $FC                                   ; ($421C)
                PLA                                       ; ($421E)
                PHA                                       ; ($421F)
                TAX                                       ; ($4220)
                LDA $AE                                   ; ($4221)
                STA sprite_pointers_base,X                ; ($4223)
                LDY $FC                                   ; ($4226)
                LDA $AF                                   ; ($4228)
                STA sprite_coords_table,Y                 ; ($422A)
                INY                                       ; ($422D)
                LDA $AC                                   ; ($422E)
                STA sprite_coords_table,Y                 ; ($4230)
                LDA $02                                   ; ($4233)
                BEQ clear_x_msb_bit                       ; ($4235)
                LDA VIC_SpriteXMSB                        ; ($4237)
                ORA $FB                                   ; ($423A)
                JMP write_x_msb_register                  ; ($423C)
clear_x_msb_bit
                LDA #$FF                                  ; ($423F)
                EOR $FB                                   ; ($4241)
                AND VIC_SpriteXMSB                        ; ($4243)
write_x_msb_register
                STA VIC_SpriteXMSB                        ; ($4246)
                LDA $FB                                   ; ($4249)
                ORA VIC_SpriteEnableRegister              ; ($424B)
                STA VIC_SpriteEnableRegister              ; ($424E)
                PLA                                       ; ($4251)
                RTS                                       ; ($4252)

; ==================================================
; Section: Junk (Junk)
; Range: $4253 - $425F (13 bytes)
; ==================================================

                .byte $EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA  ; ($4253)

; ==================================================
; Section: sub_Joystick (Code)
; Range: $4260 - $428A (43 bytes)
; Reads joystick input from CIA port $DC00 and stores directional and fire
; button states. Returns Y-axis in $FD (-1/0/+1), X-axis in $FE (-1/0/+1),
; and fire button in $02 (0=pressed, 1=not pressed). Skips input reading if
; V_RegisterCollision is non-zero (collision detection override).
; ==================================================

sub_Joystick
                LDY #$00                                  ; ($4260)
                LDX #$00                                  ; ($4262)
                SEC                                       ; ($4264)
                LDA V_RegisterCollision                   ; ($4265)
                BNE store_inputs                          ; ($4268)
                LDA $DC00                                 ; ($426A)
                NOP                                       ; ($426D)
                LSR A                                     ; ($426E)
                BCS check_down_input                      ; ($426F)
                DEY                                       ; ($4271)
check_down_input
                LSR A                                     ; ($4272)
                BCS check_left_input                      ; ($4273)
                INY                                       ; ($4275)
check_left_input
                LSR A                                     ; ($4276)
                BCS check_right_input                     ; ($4277)
                DEX                                       ; ($4279)
check_right_input
                LSR A                                     ; ($427A)
                BCS finalize_inputs                       ; ($427B)
                INX                                       ; ($427D)
finalize_inputs
                LSR A                                     ; ($427E)
store_inputs
                STX $FE                                   ; ($427F)
                STY $FD                                   ; ($4281)
                LDX #$00                                  ; ($4283)
                BCS store_fire_input                      ; ($4285)
                INX                                       ; ($4287)
store_fire_input
                STX $02                                   ; ($4288)
                RTS                                       ; ($428A)

; ==================================================
; Section: Junk (Junk)
; Range: $428B - $428F (5 bytes)
; ==================================================

                .byte $FF,$FF,$FF,$FF,$FF                 ; ($428B)

; ==================================================
; Section: Sub_ShowHideSprites (Code)
; Range: $4290 - $437F (240 bytes)
; Sprite visibility management routine. Iterates through 16 sprites,
; calculates distance from car position (horizontal and vertical), and
; shows/hides sprites based on proximity thresholds ($40 horizontal, $70
; vertical). Updates sprite positions via Sub_UpdateSpritePosition when
; visible. Handles sprite reset/ repositioning from data tables at $6800+
; when hide flag bit 4 is set. Uses visibility flags in V_HideShowSprite to
; track show/hide/collision state.
; ==================================================

Sub_ShowHideSprites
                LDX #$0F                                  ; ($4290)
sprite_visibility_loop
                LDA V_SprPosHorizLow,X                    ; ($4292)
                SEC                                       ; ($4295)
                SBC V_CarPosHorizontalLow                 ; ($4296)
                STA $AD                                   ; ($4299)
                LDA V_SprPosHorizHigh,X                   ; ($429B)
                SBC V_CarPosHorizontalHigh                ; ($429E)
                STA $AF                                   ; ($42A1)
                BEQ check_vertical_distance               ; ($42A3)
                CMP #$01                                  ; ($42A5)
                BNE mayday_landing_check                  ; ($42A7)
                LDA $AD                                   ; ($42A9)
                CMP #$40                                  ; ($42AB)
                BCS mayday_landing_check                  ; ($42AD)
check_vertical_distance
                LDA V_SprPosVertLow,X                     ; ($42AF)
                SEC                                       ; ($42B2)
                SBC V_CarPositionVertLow                  ; ($42B3)
                STA $FD                                   ; ($42B6)
                LDA V_SprPosVertHigh,X                    ; ($42B8)
                SBC V_CarPositionVertHigh                 ; ($42BB)
                BNE mayday_landing_check                  ; ($42BE)
                LDA $FD                                   ; ($42C0)
                CMP #$70                                  ; ($42C2)
                BCS mayday_landing_check                  ; ($42C4)
                LDA V_HideShowSprite,X                    ; ($42C6)
                TAY                                       ; ($42C9)
                BMI show_sprite                           ; ($42CA)
                AND #$40                                  ; ($42CC)
                BNE next_sprite                           ; ($42CE)
                TYA                                       ; ($42D0)
                AND #$07                                  ; ($42D1)
                TAY                                       ; ($42D3)
                LDA sprite_enable_bitmask_table,Y         ; ($42D4)
                AND VIC_SpriteEnableRegister              ; ($42D7)
                BEQ show_sprite                           ; ($42DA)
                LDA V_HideShowSprite,X                    ; ($42DC)
                ORA #$40                                  ; ($42DF)
                STA V_HideShowSprite,X                    ; ($42E1)
                JMP next_sprite                           ; ($42E4)
show_sprite
                LDA V_HideShowSprite,X                    ; ($42E7)
                ORA #$80                                  ; ($42EA)
                STA V_HideShowSprite,X                    ; ($42EC)
                AND #$07                                  ; ($42EF)
                STA $02                                   ; ($42F1)
                INC $02                                   ; ($42F3)
                LDA sprite_pointer_table,X                ; ($42F5)
                STA $AE                                   ; ($42F8)
                TXA                                       ; ($42FA)
                PHA                                       ; ($42FB)
                LDA $FD                                   ; ($42FC)
                CLC                                       ; ($42FE)
                ADC #$90                                  ; ($42FF)
                TAY                                       ; ($4301)
                CLC                                       ; ($4302)
                LDA $AD                                   ; ($4303)
                ADC #$07                                  ; ($4305)
                TAX                                       ; ($4307)
                LDA $AF                                   ; ($4308)
                ADC #$00                                  ; ($430A)
                CLC                                       ; ($430C)
                BEQ set_xmsb_flag                         ; ($430D)
                SEC                                       ; ($430F)
set_xmsb_flag
                LDA $02                                   ; ($4310)
                JSR Sub_UpdateSpritePosition              ; ($4312)
                PLA                                       ; ($4315)
                TAX                                       ; ($4316)
next_sprite
                DEX                                       ; ($4317)
                BMI sprite_loop_exit                      ; ($4318)
                JMP sprite_visibility_loop                ; ($431A)
sprite_loop_exit
                RTS                                       ; ($431D)
mayday_landing_check
                LDA V_HideShowSprite,X                    ; ($431E)
                TAY                                       ; ($4321)
                BMI disable_sprite_hardware               ; ($4322)
check_hide_flag
                AND #$10                                  ; ($4324)
                BNE reset_sprite_position                 ; ($4326)
                JMP hide_sprite                           ; ($4328)
                .byte $EA,$EA,$EA,$EA,$EA                 ; ($432B)
reset_sprite_position
                LDA sprite_init_xpos_low,X                ; ($4330)
                STA V_SprPosHorizLow,X                    ; ($4333)
                LDA sprite_init_xpos_high,X               ; ($4336)
                STA V_SprPosHorizHigh,X                   ; ($4339)
                LDA sprite_init_ypos_low,X                ; ($433C)
                STA V_SprPosVertLow,X                     ; ($433F)
                LDA sprite_init_ypos_high,X               ; ($4342)
                STA V_SprPosVertHigh,X                    ; ($4345)
                LDA sprite_init_pointers,X                ; ($4348)
                STA sprite_pointer_table,X                ; ($434B)
                LDA sprite_init_data_extra,X              ; ($434E)
                STA sprite_data_extra,X                   ; ($4351)
                JMP hide_sprite                           ; ($4354)
disable_sprite_hardware
                LDA V_HideShowSprite,X                    ; ($4357)
                AND #$07                                  ; ($435A)
                TAY                                       ; ($435C)
                LDA sprite_disable_bitmask_table,Y        ; ($435D)
                AND VIC_SpriteEnableRegister              ; ($4360)
                STA VIC_SpriteEnableRegister              ; ($4363)
                LDA sprite_disable_bitmask_table,Y        ; ($4366)
                AND VIC_SpriteMulticolorRegister          ; ($4369)
                STA VIC_SpriteMulticolorRegister          ; ($436C)
                LDA V_HideShowSprite,Y                    ; ($436F)
                JMP check_hide_flag                       ; ($4372)
hide_sprite
                LDA V_HideShowSprite,X                    ; ($4375)
                AND #$07                                  ; ($4378)
                STA V_HideShowSprite,X                    ; ($437A)
                JMP next_sprite                           ; ($437D)

; ==================================================
; Section: Junk (Junk)
; Range: $4380 - $43AF (48 bytes)
; ==================================================

                .byte $01,$FF,$15,$FF,$00,$00,$19,$20,$21,$5D,$00,$05,$59,$79,$00,$00  ; ($4380)
                .byte $00,$5C,$00,$5D,$00,$0D,$00,$0D,$00,$5D,$00,$4D,$00,$ED,$0D,$FD  ; ($4390)
                .byte $A0,$00,$B9,$00,$5A,$40,$00,$40,$00,$00,$00,$00,$00,$00,$00,$00  ; ($43A0)

; ==================================================
; Section: system_reset (Code)
; Range: $43B0 - $43D5 (38 bytes)
; System reset entry point. Sets menu selection to 3 (both theme and
; effects), configures all interrupt vectors (BRK/NMI/IRQ) to point to $43B0,
; mutes SID audio, then falls through to stack reset and main initialization
; jump.
; ==================================================

system_reset
                LDA #$03                                  ; ($43B0)
                STA V_MenuSelection                       ; ($43B2) 1=Theme, 2=Effects, 3=Both
                LDA #$B0                                  ; ($43B5)
                STA BRK_serv_address_low                  ; ($43B7)
                STA NMI_IRQ_addr_low                      ; ($43BA)
                STA Line_token_Low                        ; ($43BD)
                LDA #$43                                  ; ($43C0)
                STA BRK_serv_address_high                 ; ($43C2)
                STA NMI_IRQ_addr_high                     ; ($43C5)
                LDA #$00                                  ; ($43C8)
                STA SID_VolumeFilter                      ; ($43CA)
                JMP reset_stack_and_init                  ; ($43CD)
reset_stack_and_init
                LDX #$FF                                  ; ($43D0)
                SEI                                       ; ($43D2)
                TXS                                       ; ($43D3)
                CLD                                       ; ($43D4)
                JMP menu_system_init                      ; ($43D5)

; ==================================================
; Section: Junk (Junk)
; Range: $43D8 - $43DF (8 bytes)
; ==================================================

                .byte $18,$D4,$4C,$30,$4F,$FF,$FF,$FF     ; ($43D8)

; ==================================================
; Section: alternate_reset_entry (Code)
; Range: $43E0 - $43E5 (6 bytes)
; Alternate reset entry point. Resets stack pointer to $FF, disables
; interrupts, clears decimal mode, and jumps to alternate initialization
; routine at L5800. Identical to L43D0 except for jump destination.
; ==================================================

reset_to_alternate_init
                LDX #$FF                                  ; ($43E0)
                SEI                                       ; ($43E2)
                TXS                                       ; ($43E3)
                CLD                                       ; ($43E4)
                JMP L5800                                 ; ($43E5)

; ==================================================
; Section: Junk (Junk)
; Range: $43E8 - $43EF (8 bytes)
; ==================================================

                .byte $18,$D4,$4C,$00,$58,$FF,$AE,$FF     ; ($43E8)

; ==================================================
; Section: secondary_reset_entry (Code)
; Range: $43F0 - $43F5 (6 bytes)
; Secondary reset entry point. Resets stack pointer to $FF, disables
; interrupts, clears decimal mode, and jumps to main initialization at L4F30.
; Identical to L43D0 - likely a duplicate entry point for alternate calling
; paths.
; ==================================================

secondary_reset_entry
                LDX #$FF                                  ; ($43F0)
                SEI                                       ; ($43F2)
                TXS                                       ; ($43F3)
                CLD                                       ; ($43F4)
                JMP menu_system_init                      ; ($43F5)

; ==================================================
; Section: Junk (Junk)
; Range: $43F8 - $43FF (8 bytes)
; ==================================================

                .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF     ; ($43F8)

; ==================================================
; Section: configure_sound_effects (Code)
; Range: $4400 - $4425 (38 bytes)
; SID sound effects configuration. Checks if effects are enabled in menu
; selection (bit 1), and if so, configures SID voice 3 with specific
; waveform, frequency, ADSR envelope, and control settings. Sets up a short
; sound effect trigger.
; ==================================================

configure_sound_effects
                LDA V_MenuSelection                       ; ($4400) 1=Theme, 2=Effects, 3=Both
                AND #$02                                  ; ($4403)
                BEQ L4425                                 ; ($4405)
                LDA #$00                                  ; ($4407)
                STA SID_Voice3_Control                    ; ($4409)
                LDA #$AA                                  ; ($440C)
                STA SID_Voice3_Freq_Lo                    ; ($440E)
                LDA #$FA                                  ; ($4411)
                STA SID_Voice3_Freq_Hi                    ; ($4413)
                LDA #$09                                  ; ($4416)
                STA SID_Voice3_Attack_Decay               ; ($4418)
                LDA #$00                                  ; ($441B)
                STA SID_Voice3_Sustain_Release            ; ($441D)
                LDA #$81                                  ; ($4420)
                STA SID_Voice3_Control                    ; ($4422)
L4425
                RTS                                       ; ($4425)

; ==================================================
; Section: Junk (Junk)
; Range: $4426 - $4427 (2 bytes)
; ==================================================

                .byte $60,$60                             ; ($4426)

; ==================================================
; Section: configure_sound_effects_alt (Code)
; Range: $4428 - $444D (38 bytes)
; SID sound effects configuration (variant). Checks if effects are enabled in
; menu selection (bit 1), and if so, configures SID voice 1 with specific
; waveform, frequency, ADSR envelope, and control settings. Similar to L4400
; but uses voice 1 and different parameters.
; ==================================================

configure_sound_effects_alt
                LDA V_MenuSelection                       ; ($4428) 1=Theme, 2=Effects, 3=Both
                AND #$02                                  ; ($442B)
                BEQ skip_effects_init                     ; ($442D)
                LDA #$00                                  ; ($442F)
                STA SID_Voice1_Control                    ; ($4431)
                LDA #$AA                                  ; ($4434)
                STA SID_Voice1_Freq_Lo                    ; ($4436)
                LDA #$04                                  ; ($4439)
                STA SID_Voice1_Freq_Hi                    ; ($443B)
                LDA #$1C                                  ; ($443E)
                STA SID_Voice1_Attack_Decay               ; ($4440)
                LDA #$01                                  ; ($4443)
                STA SID_Voice1_Sustain_Release            ; ($4445)
                LDA #$81                                  ; ($4448)
                STA SID_Voice1_Control                    ; ($444A)
skip_effects_init
                RTS                                       ; ($444D)

; ==================================================
; Section: Junk (Junk)
; Range: $444E - $444F (2 bytes)
; ==================================================

                .byte $60,$60                             ; ($444E)

; ==================================================
; Section: configure_effects_and_start (Data)
; Range: $4450 - $4475 (38 bytes)
; SID sound effects configuration and main loop entry. Checks if effects are
; enabled (bit 1 of menu selection), configures SID voice 3 with pulse wave
; sound effect, then jumps to main game loop regardless of effects setting.
; ==================================================

configure_effects_and_start
                LDA V_MenuSelection                       ; ($4450) 1=Theme, 2=Effects, 3=Both
                AND #$02                                  ; ($4453)
                BEQ start_main_loop                       ; ($4455)
                LDA #$00                                  ; ($4457)
                STA SID_Voice3_Control                    ; ($4459)
                LDA #$AA                                  ; ($445C)
                STA SID_Voice3_Freq_Lo                    ; ($445E)
                LDA #$24                                  ; ($4461)
                STA SID_Voice3_Freq_Hi                    ; ($4463)
                LDA #$12                                  ; ($4466)
                STA SID_Voice3_Attack_Decay               ; ($4468)
                LDA #$00                                  ; ($446B)
                STA SID_Voice3_Sustain_Release            ; ($446D)
                LDA #$61                                  ; ($4470)
                STA SID_Voice3_Control                    ; ($4472)
start_main_loop
                JMP Sub_MainGameLoop                      ; ($4475)

; ==================================================
; Section: Junk (Junk)
; Range: $4478 - $447F (8 bytes)
; ==================================================

                .byte $00,$FF,$00,$50,$00,$FF,$FF,$00     ; ($4478)

; ==================================================
; Section: init_sid_voice1_sustained (Code)
; Range: $4480 - $44A6 (39 bytes)
; SID voice 1 initialization with sustained tone. Sets maximum volume,
; configures voice 1 with triangle wave, medium-high frequency, fast
; attack/decay envelope, and moderate sustain. Note: Sustain/Release register
; written twice with different values ($07 then $11) - final value is $11.
; ==================================================

init_sid_voice1_sustained
                LDA #$0F                                  ; ($4480)
                STA SID_VolumeFilter                      ; ($4482)
                STA SID_FilterResonance                   ; ($4485)
                LDA #$00                                  ; ($4488)
                STA SID_Voice1_Control                    ; ($448A)
                LDA #$AA                                  ; ($448D)
                STA SID_Voice1_Freq_Lo                    ; ($448F)
                LDA #$3A                                  ; ($4492)
                STA SID_Voice1_Freq_Hi                    ; ($4494)
                LDA #$08                                  ; ($4497)
                STA SID_Voice1_Attack_Decay               ; ($4499)
                LDA #$07                                  ; ($449C)
                STA SID_Voice1_Sustain_Release            ; ($449E)
                LDA #$11                                  ; ($44A1)
                STA SID_Voice1_Sustain_Release            ; ($44A3)
                RTS                                       ; ($44A6)

; ==================================================
; Section: Junk (Junk)
; Range: $44A7 - $44FF (89 bytes)
; ==================================================

                .byte $00,$FF,$00,$FF,$00,$FF,$FF,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF  ; ($44A7)
                .byte $00,$FF,$00,$00,$00,$FF,$00,$FB,$E6,$FF,$00,$FF,$00,$FF,$FF,$FF  ; ($44B7)
                .byte $BF,$FF,$00,$FF,$00,$FF,$00,$FF,$50,$FF,$82,$FF,$00,$FF,$00,$FF  ; ($44C7)
                .byte $00,$FF,$00,$FF,$00,$00,$00,$FF,$FF,$F7,$DF,$FF,$FF,$FF,$00,$FF  ; ($44D7)
                .byte $FF,$FF,$00,$FF,$00,$FF,$00,$EF,$00,$FF,$00,$FF,$02,$FF,$00,$FF  ; ($44E7)
                .byte $04,$FF,$00,$FF,$AF,$FF,$00,$00,$FF  ; ($44F7)

; ==================================================
; Section: Sub_CarDamage (Code)
; Range: $4500 - $454F (80 bytes)
; Updates dashboard speedometer bar display and damage indicator on screen.
; Draws speed bar using V_CarSpeed (8 positions, character $04), then updates
; damage display by looking up screen position from tables at $4550/$4558 and
; writing damage character based on V_DamageCount.
; ==================================================

Sub_CarDamage
                LDA V_CarSpeed                            ; ($4500)
                LSR A                                     ; ($4503)
                AND #$03                                  ; ($4504)
                CLC                                       ; ($4506)
                ADC #$00                                  ; ($4507)
                PHA                                       ; ($4509)
                LDY #$07                                  ; ($450A)
                LDA #$04                                  ; ($450C)
draw_speed_bar_loop
                STA screen_speedo_bar,Y                   ; ($450E)
                DEY                                       ; ($4511)
                BPL draw_speed_bar_loop                   ; ($4512)
                LDA V_CarSpeed                            ; ($4514)
                CLC                                       ; ($4517)
                LSR A                                     ; ($4518)
                LSR A                                     ; ($4519)
                LSR A                                     ; ($451A)
                STA $02                                   ; ($451B)
                LDA #$07                                  ; ($451D)
                SEC                                       ; ($451F)
                SBC $02                                   ; ($4520)
                TAY                                       ; ($4522)
                PLA                                       ; ($4523)
                STA screen_speedo_bar,Y                   ; ($4524)
                JMP update_damage_display                 ; ($4527)
                .byte $EA,$EA,$EA,$EA,$EA,$EA             ; ($452A)
update_damage_display
                LDA V_DamageCount                         ; ($4530)
                LSR A                                     ; ($4533)
                LSR A                                     ; ($4534)
                LSR A                                     ; ($4535)
                TAY                                       ; ($4536)
                LDA V_DamageCount                         ; ($4537)
                AND #$07                                  ; ($453A)
                CLC                                       ; ($453C)
                ADC #$C4                                  ; ($453D)
                TAX                                       ; ($453F)
                LDA damage_screen_ptr_lo_table,Y          ; ($4540)
                STA $AE                                   ; ($4543)
                LDA damage_screen_ptr_hi_table,Y          ; ($4545)
                STA $AF                                   ; ($4548)
                LDY #$00                                  ; ($454A)
                TXA                                       ; ($454C)
                STA ($AE),Y                               ; ($454D)
                RTS                                       ; ($454F)

; ==================================================
; Section: damage_screen_ptr_lo_table (Data)
; Range: $4550 - $4554 (5 bytes)
; Low bytes of screen memory pointers for damage indicator display positions.
; Five valid entries ($0515, $04ED, $04C5, $049D, $0475), three null entries.
; ==================================================

damage_screen_ptr_lo_table
                .byte $15,$ED,$C5,$9D,$75                 ; ($4550)

; ==================================================
; Section: Junk (Junk)
; Range: $4555 - $4557 (3 bytes)
; ==================================================

                .byte $00,$00,$00                         ; ($4555)

; ==================================================
; Section: damage_screen_ptr_hi_table (Data)
; Range: $4558 - $455C (5 bytes)
; High bytes of screen memory pointers for damage indicator display
; positions. Paired with low byte table to form complete 16-bit screen
; addresses.
; ==================================================

damage_screen_ptr_hi_table
                .byte $05,$04,$04,$04,$04                 ; ($4558)

; ==================================================
; Section: Junk (Junk)
; Range: $455D - $456F (19 bytes)
; ==================================================

                .byte $00,$00,$00,$00,$AF,$96,$BA,$92,$BE,$96,$BF,$96,$06,$86,$97,$96  ; ($455D)
                .byte $02,$02,$8E                         ; ($456D)

; ==================================================
; Section: fire_player_bullet (Code)
; Range: $4570 - $45AC (61 bytes)
; Player bullet spawn routine. Checks if sprite 6 (bullet) is inactive, and
; if so, spawns bullet entity at player position with offsets ($AA
; horizontal, $31 vertical). Sets bullet sprite pointers ($C6/$AC), copies
; player facing direction for bullet trajectory, and triggers firing sound
; effect. Only fires when previous bullet has cleared.
; ==================================================

fire_player_bullet
                LDA VIC_SpriteEnableRegister              ; ($4570)
                AND #$40                                  ; ($4573)
                BNE bullet_spawn_exit                     ; ($4575)
                CLC                                       ; ($4577)
                LDA V_CarPosHorizontalLow                 ; ($4578)
                ADC #$AA                                  ; ($457B)
                STA bullet_xpos_low                       ; ($457D)
                LDA V_CarPosHorizontalHigh                ; ($4580)
                ADC #$00                                  ; ($4583)
                STA bullet_xpos_high                      ; ($4585)
                CLC                                       ; ($4588)
                LDA V_CarPositionVertLow                  ; ($4589)
                ADC #$31                                  ; ($458C)
                STA bullet_ypos_low                       ; ($458E)
                LDA V_CarPositionVertHigh                 ; ($4591)
                ADC #$00                                  ; ($4594)
                STA bullet_ypos_high                      ; ($4596)
                LDA #$C6                                  ; ($4599)
                STA bullet_sprite_ptr_1                   ; ($459B)
                LDA #$AC                                  ; ($459E)
                STA bullet_sprite_ptr_2                   ; ($45A0)
                LDA V_CarFacingDirection                  ; ($45A3) 00 N / 01 NE / 02 E / 03 SE / 04 S / 05 SW / 06 W / 07 NW
                STA bullet_direction                      ; ($45A6)
                JSR configure_sound_effects               ; ($45A9)
bullet_spawn_exit
                RTS                                       ; ($45AC)

; ==================================================
; Section: Junk (Junk)
; Range: $45AD - $45FF (83 bytes)
; ==================================================

                .byte $00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$DF,$00,$FF,$00,$00,$40,$FF  ; ($45AD)
                .byte $00,$20,$FF,$FF,$00,$FF,$00,$FF,$00,$FF,$FF,$00,$00,$FF,$00,$FF  ; ($45BD)
                .byte $00,$FF,$FF,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF  ; ($45CD)
                .byte $00,$FF,$00,$FF,$00,$FF,$FF,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF  ; ($45DD)
                .byte $00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$8F,$FF  ; ($45ED)
                .byte $00,$00,$FF                         ; ($45FD)

; ==================================================
; Section: Sub_3DCarView (Code)
; Range: $4600 - $483C (573 bytes)
; 3D dashboard view renderer. Reads map data around car position based on
; facing direction, samples terrain tiles via lookup tables, and renders
; 8-row perspective view to screen buffer ($0D09-$0E21). Handles
; horizontal/vertical scrolling offsets, performs distance-based tile
; sampling, and copies final view to screen memory when complete.
; ==================================================

render_3d_view
                LDA view_update_flag                      ; ($4600)
                BNE check_facing_direction                ; ($4603)
                RTS                                       ; ($4605)
check_facing_direction
                LDY V_CarFacingDirection                  ; ($4606) 00 N / 01 NE / 02 E / 03 SE / 04 S / 05 SW / 06 W / 07 NW
                LDA direction_horizontal_flag,Y           ; ($4609)
                BEQ view_check_vertical_movement          ; ($460C)
                LDA horizontal_scroll_delta               ; ($460E)
                BEQ no_scroll                             ; ($4611)
                BMI view_scroll_left                      ; ($4613)
                CLC                                       ; ($4615)
                LDA #$7E                                  ; ($4616)
                ADC V_MapXposition                        ; ($4618)
                STA $AE                                   ; ($461B)
                LDA V_MapYposition                        ; ($461D)
                ADC #$00                                  ; ($4620)
                STA $AF                                   ; ($4622)
                JMP calculate_map_position                ; ($4624)
view_scroll_left
                SEC                                       ; ($4627)
                LDA V_MapXposition                        ; ($4628)
                SBC #$7E                                  ; ($462B)
                STA $AE                                   ; ($462D)
                LDA V_MapYposition                        ; ($462F)
                SBC #$00                                  ; ($4632)
                STA $AF                                   ; ($4634)
                JMP calculate_map_position                ; ($4636)
view_check_vertical_movement
                LDA vertical_scroll_delta                 ; ($4639)
                BEQ no_scroll                             ; ($463C)
                BMI view_scroll_up                        ; ($463E)
                CLC                                       ; ($4640)
                LDA #$01                                  ; ($4641)
                ADC V_MapXposition                        ; ($4643)
                STA $AE                                   ; ($4646)
                LDA V_MapYposition                        ; ($4648)
                ADC #$00                                  ; ($464B)
                STA $AF                                   ; ($464D)
                JMP calculate_map_position                ; ($464F)
view_scroll_up
                SEC                                       ; ($4652)
                LDA V_MapXposition                        ; ($4653)
                SBC #$01                                  ; ($4656)
                STA $AE                                   ; ($4658)
                LDA V_MapYposition                        ; ($465A)
                SBC #$00                                  ; ($465D)
                STA $AF                                   ; ($465F)
                JMP calculate_map_position                ; ($4661)
no_scroll
                LDA V_MapXposition                        ; ($4664)
                STA $AE                                   ; ($4667)
                LDA V_MapYposition                        ; ($4669)
                STA $AF                                   ; ($466C)
calculate_map_position
                LDA $AE                                   ; ($466E)
                STA adjusted_map_x                        ; ($4670)
                LDA $AF                                   ; ($4673)
                STA adjusted_map_y                        ; ($4675)
                LDA $AE                                   ; ($4678)
                SEC                                       ; ($467A)
                SBC #$D6                                  ; ($467B)
                STA $FB                                   ; ($467D)
                LDA $AF                                   ; ($467F)
                SBC #$05                                  ; ($4681)
                STA $FC                                   ; ($4683)
                LDY V_CarFacingDirection                  ; ($4685) 00 N / 01 NE / 02 E / 03 SE / 04 S / 05 SW / 06 W / 07 NW
                LDA direction_offset_table_ptr,Y          ; ($4688)
                STA $FD                                   ; ($468B)
                LDA #$6D                                  ; ($468D)
                STA $FE                                   ; ($468F)
                LDX #$00                                  ; ($4691)
                LDY #$00                                  ; ($4693)
sample_terrain_loop
                CLC                                       ; ($4695)
                LDA ($FD),Y                               ; ($4696)
                ADC $FB                                   ; ($4698)
                STA $AE                                   ; ($469A)
                INY                                       ; ($469C)
                LDA ($FD),Y                               ; ($469D)
                ADC $FC                                   ; ($469F)
                STA $AF                                   ; ($46A1)
                INY                                       ; ($46A3)
                STY $02                                   ; ($46A4)
                LDY #$00                                  ; ($46A6)
                LDA ($AE),Y                               ; ($46A8)
                STA sampled_terrain_buffer,X              ; ($46AA)
                INX                                       ; ($46AD)
                CPX #$21                                  ; ($46AE)
                BEQ find_horizon_line                     ; ($46B0)
                LDY $02                                   ; ($46B2)
                JMP sample_terrain_loop                   ; ($46B4)
find_horizon_line
                LDY #$0B                                  ; ($46B7)
horizon_search_loop
                LDX $6B0A,Y                               ; ($46B9)
                LDA tile_type_properties,X                ; ($46BC)
                BNE render_left_side                      ; ($46BF)
                DEY                                       ; ($46C1)
                BNE horizon_search_loop                   ; ($46C2)
                LDA #$00                                  ; ($46C4)
render_left_side
                PHA                                       ; ($46C6)
                TYA                                       ; ($46C7)
                PHA                                       ; ($46C8)
                LDX #$09                                  ; ($46C9)
                LDY #$00                                  ; ($46CB)
                STY $FB                                   ; ($46CD)
                STY $FC                                   ; ($46CF)
left_column_loop
                LDY $FB                                   ; ($46D1)
                LDA $6B01,Y                               ; ($46D3)
                TAY                                       ; ($46D6)
                LDA tile_type_properties,Y                ; ($46D7)
                ASL A                                     ; ($46DA)
                BCC check_distance_fade                   ; ($46DB)
                LDA #$00                                  ; ($46DD)
                STA $FC                                   ; ($46DF)
                JMP calculate_tile_address                ; ($46E1)
check_distance_fade
                LDA $FC                                   ; ($46E4)
                BNE L46F0                                 ; ($46E6)
                STX $FC                                   ; ($46E8)
                LDA $FC                                   ; ($46EA)
                JMP L46F0                                 ; ($46EC)
calculate_tile_address
                TXA                                       ; ($46EF)
L46F0
                ASL A                                     ; ($46F0)
                ASL A                                     ; ($46F1)
                ASL A                                     ; ($46F2)
                CLC                                       ; ($46F3)
                ADC tile_graphics_ptr_lo,Y                ; ($46F4)
                STA $AE                                   ; ($46F7)
                LDA tile_graphics_ptr_hi,Y                ; ($46F9)
                ADC #$00                                  ; ($46FC)
                STA $AF                                   ; ($46FE)
                LDY #$00                                  ; ($4700)
                LDA ($AE),Y                               ; ($4702)
                STA $0D09,X                               ; ($4704)
                INY                                       ; ($4707)
                LDA ($AE),Y                               ; ($4708)
                STA $0D31,X                               ; ($470A)
                INY                                       ; ($470D)
                LDA ($AE),Y                               ; ($470E)
                STA $0D59,X                               ; ($4710)
                INY                                       ; ($4713)
                LDA ($AE),Y                               ; ($4714)
                STA $0D81,X                               ; ($4716)
                INY                                       ; ($4719)
                LDA ($AE),Y                               ; ($471A)
                STA $0DA9,X                               ; ($471C)
                INY                                       ; ($471F)
                LDA ($AE),Y                               ; ($4720)
                STA $0DD1,X                               ; ($4722)
                INY                                       ; ($4725)
                LDA ($AE),Y                               ; ($4726)
                STA $0DF9,X                               ; ($4728)
                INY                                       ; ($472B)
                LDA ($AE),Y                               ; ($472C)
                STA $0E21,X                               ; ($472E)
                INC $FB                                   ; ($4731)
                DEX                                       ; ($4733)
                BPL left_column_loop                      ; ($4734)
                LDX #$0C                                  ; ($4736)
                LDA #$00                                  ; ($4738)
                STA $FC                                   ; ($473A)
right_column_loop
                LDA $6B0B,X                               ; ($473C)
                TAY                                       ; ($473F)
                LDA tile_type_properties,Y                ; ($4740)
                ASL A                                     ; ($4743)
                BCC check_distance_fade_right             ; ($4744)
                LDA #$00                                  ; ($4746)
                STA $FC                                   ; ($4748)
                JMP calculate_tile_address_right          ; ($474A)
check_distance_fade_right
                LDA $FC                                   ; ($474D)
                BNE L4759                                 ; ($474F)
                STX $FC                                   ; ($4751)
                LDA $FC                                   ; ($4753)
                JMP L4759                                 ; ($4755)
calculate_tile_address_right
                TXA                                       ; ($4758)
L4759
                ASL A                                     ; ($4759)
                ASL A                                     ; ($475A)
                ASL A                                     ; ($475B)
                CLC                                       ; ($475C)
                ADC tile_graphics_ptr_lo,Y                ; ($475D)
                STA $AE                                   ; ($4760)
                LDA tile_graphics_ptr_hi,Y                ; ($4762)
                ADC #$00                                  ; ($4765)
                STA $AF                                   ; ($4767)
                LDY #$00                                  ; ($4769)
                LDA ($AE),Y                               ; ($476B)
                STA $0D09,X                               ; ($476D)
                INY                                       ; ($4770)
                LDA ($AE),Y                               ; ($4771)
                STA $0D31,X                               ; ($4773)
                INY                                       ; ($4776)
                LDA ($AE),Y                               ; ($4777)
                STA $0D59,X                               ; ($4779)
                INY                                       ; ($477C)
                LDA ($AE),Y                               ; ($477D)
                STA $0D81,X                               ; ($477F)
                INY                                       ; ($4782)
                LDA ($AE),Y                               ; ($4783)
                STA $0DA9,X                               ; ($4785)
                INY                                       ; ($4788)
                LDA ($AE),Y                               ; ($4789)
                STA $0DD1,X                               ; ($478B)
                INY                                       ; ($478E)
                LDA ($AE),Y                               ; ($478F)
                STA $0DF9,X                               ; ($4791)
                INY                                       ; ($4794)
                LDA ($AE),Y                               ; ($4795)
                STA $0E21,X                               ; ($4797)
                INX                                       ; ($479A)
                CPX #$16                                  ; ($479B)
                BNE right_column_loop                     ; ($479D)
                PLA                                       ; ($479F)
                STA $02                                   ; ($47A0)
                CLC                                       ; ($47A2)
                PLA                                       ; ($47A3)
                AND #$7F                                  ; ($47A4)
                ADC $02                                   ; ($47A6)
                TAY                                       ; ($47A8)
                LDA $6A80,Y                               ; ($47A9)
                TAX                                       ; ($47AC)
                LDA $6AC0,Y                               ; ($47AD)
                STA $02                                   ; ($47B0)
                LDA $6A00,Y                               ; ($47B2)
                STA $AE                                   ; ($47B5)
                LDA $6A40,Y                               ; ($47B7)
                STA $AF                                   ; ($47BA)
                LDY #$00                                  ; ($47BC)
center_column_loop
                LDA ($AE),Y                               ; ($47BE)
                STA $0D09,X                               ; ($47C0)
                INY                                       ; ($47C3)
                LDA ($AE),Y                               ; ($47C4)
                STA $0D31,X                               ; ($47C6)
                INY                                       ; ($47C9)
                LDA ($AE),Y                               ; ($47CA)
                STA $0D59,X                               ; ($47CC)
                INY                                       ; ($47CF)
                LDA ($AE),Y                               ; ($47D0)
                STA $0D81,X                               ; ($47D2)
                INY                                       ; ($47D5)
                LDA ($AE),Y                               ; ($47D6)
                STA $0DA9,X                               ; ($47D8)
                INY                                       ; ($47DB)
                LDA ($AE),Y                               ; ($47DC)
                STA $0DD1,X                               ; ($47DE)
                INY                                       ; ($47E1)
                LDA ($AE),Y                               ; ($47E2)
                STA $0DF9,X                               ; ($47E4)
                INY                                       ; ($47E7)
                LDA ($AE),Y                               ; ($47E8)
                STA $0E21,X                               ; ($47EA)
                INY                                       ; ($47ED)
                INX                                       ; ($47EE)
                CPX $02                                   ; ($47EF)
                BNE center_column_loop                    ; ($47F1)
                INC view_ready_flag                       ; ($47F3)
                LDA #$00                                  ; ($47F6)
                STA view_update_flag                      ; ($47F8)
                RTS                                       ; ($47FB)
copy_view_to_screen
                LDA view_ready_flag                       ; ($47FC)
                BNE screen_copy_start                     ; ($47FF)
                RTS                                       ; ($4801)
screen_copy_start
                LDX #$15                                  ; ($4802)
screen_copy_loop
                LDA $0D09,X                               ; ($4804)
                STA $0409,X                               ; ($4807)
                LDA $0D31,X                               ; ($480A)
                STA $0431,X                               ; ($480D)
                LDA $0D59,X                               ; ($4810)
                STA $0459,X                               ; ($4813)
                LDA $0D81,X                               ; ($4816)
                STA $0481,X                               ; ($4819)
                LDA $0DA9,X                               ; ($481C)
                STA $04A9,X                               ; ($481F)
                LDA $0DD1,X                               ; ($4822)
                STA $04D1,X                               ; ($4825)
                LDA $0DF9,X                               ; ($4828)
                STA $04F9,X                               ; ($482B)
                LDA $0E21,X                               ; ($482E)
                STA $0521,X                               ; ($4831)
                DEX                                       ; ($4834)
                BPL screen_copy_loop                      ; ($4835)
                LDA #$00                                  ; ($4837)
                STA view_ready_flag                       ; ($4839)
                RTS                                       ; ($483C)

; ==================================================
; Section: Junk (Junk)
; Range: $483D - $484F (19 bytes)
; ==================================================

                .byte $00,$00,$00,$FF,$00,$FF,$00,$FF,$FF,$FF,$FF,$FF,$00,$FF,$00,$FF  ; ($483D)
                .byte $00,$FF,$00                         ; ($484D)

; ==================================================
; Section: calculate_proximity_beep (Code)
; Range: $4850 - $48F5 (166 bytes)
; Calculates Manhattan distance between player car and Mayday (sprite 3).
; Subtracts offset ($88 horizontal, $32 vertical) from Mayday position,
; computes absolute distance in both axes, sums them, divides result by $28,
; and stores frequency value at $034D with bit 0 set. Used to vary beep rate
; based on proximity.
; ==================================================

calculate_proximity_beep
                SEC                                       ; ($4850)
                LDA V_SprPosHorizLow                      ; ($4851)
                SBC #$88                                  ; ($4854)
                STA $EA                                   ; ($4856)
                LDA V_SprPosHorizHigh                     ; ($4858)
                SBC #$00                                  ; ($485B)
                STA $EB                                   ; ($485D)
                SEC                                       ; ($485F)
                LDA V_SprPosVertLow                       ; ($4860)
                SBC #$32                                  ; ($4863)
                STA $EC                                   ; ($4865)
                LDA V_SprPosVertHigh                      ; ($4867)
                SBC #$00                                  ; ($486A)
                STA $ED                                   ; ($486C)
                NOP                                       ; ($486E)
                NOP                                       ; ($486F)
                LDA V_CarPosHorizontalHigh                ; ($4870)
                CMP $EB                                   ; ($4873)
                BEQ compare_x_low_byte                    ; ($4875)
                BCC mayday_ahead_horizontally             ; ($4877)
                JMP car_ahead_horizontally                ; ($4879)
compare_x_low_byte
                LDA V_CarPosHorizontalLow                 ; ($487C)
                CMP $EA                                   ; ($487F)
                BCC mayday_ahead_horizontally             ; ($4881)
car_ahead_horizontally
                SEC                                       ; ($4883)
                LDA V_CarPosHorizontalLow                 ; ($4884)
                SBC $EA                                   ; ($4887)
                STA $AE                                   ; ($4889)
                LDA V_CarPosHorizontalHigh                ; ($488B)
                SBC $EB                                   ; ($488E)
                STA $AF                                   ; ($4890)
                JMP calc_vertical_delta                   ; ($4892)
mayday_ahead_horizontally
                SEC                                       ; ($4895)
                LDA $EA                                   ; ($4896)
                SBC V_CarPosHorizontalLow                 ; ($4898)
                STA $AE                                   ; ($489B)
                LDA $EB                                   ; ($489D)
                SBC V_CarPosHorizontalHigh                ; ($489F)
                STA $AF                                   ; ($48A2)
calc_vertical_delta
                LDA V_CarPositionVertHigh                 ; ($48A4)
                CMP $ED                                   ; ($48A7)
                BEQ compare_y_low_byte                    ; ($48A9)
                BCC mayday_ahead_vertically               ; ($48AB)
                JMP car_ahead_vertically                  ; ($48AD)
compare_y_low_byte
                LDA V_CarPositionVertLow                  ; ($48B0)
                CMP $EC                                   ; ($48B3)
                BCC mayday_ahead_vertically               ; ($48B5)
car_ahead_vertically
                SEC                                       ; ($48B7)
                LDA V_CarPositionVertLow                  ; ($48B8)
                SBC $EC                                   ; ($48BB)
                STA $AC                                   ; ($48BD)
                LDA V_CarPositionVertHigh                 ; ($48BF)
                SBC $ED                                   ; ($48C2)
                STA $AD                                   ; ($48C4)
                JMP sum_distances                         ; ($48C6)
mayday_ahead_vertically
                SEC                                       ; ($48C9)
                LDA $EC                                   ; ($48CA)
                SBC V_CarPositionVertLow                  ; ($48CC)
                STA $AC                                   ; ($48CF)
                LDA $ED                                   ; ($48D1)
                SBC V_CarPositionVertHigh                 ; ($48D3)
                STA $AD                                   ; ($48D6)
sum_distances
                CLC                                       ; ($48D8)
                LDA $AE                                   ; ($48D9)
                ADC $AC                                   ; ($48DB)
                STA $AC                                   ; ($48DD)
                LDA $AF                                   ; ($48DF)
                ADC $AD                                   ; ($48E1)
                STA $AD                                   ; ($48E3)
                LDY $AD                                   ; ($48E5)
                LDA $AC                                   ; ($48E7)
                LDX #$28                                  ; ($48E9)
                JSR divide_16bit_by_8bit                  ; ($48EB)
                LDA $FD                                   ; ($48EE)
                ORA #$01                                  ; ($48F0)
                STA proximity_beep_frequency              ; ($48F2)
                RTS                                       ; ($48F5)

; ==================================================
; Section: Junk (Junk)
; Range: $48F6 - $48FF (10 bytes)
; ==================================================

                .byte $60,$FF,$08,$6F,$00,$0E,$0F,$FF,$2E,$FF  ; ($48F6)

; ==================================================
; Section: update_countdown_visual (Data)
; Range: $4900 - $4939 (58 bytes)
; Screen pattern writer based on countdown timer. Uses lower 5 bits of
; countdown digit 0 as index into tables at $4B00/$4B20/$4B40. Writes pattern
; character to screen memory - either fills 3 bytes when char=$48, or writes
; to 3 specific offset positions (0, $7E, $FC) otherwise. Likely updates
; visual effect tied to countdown.
; ==================================================

update_countdown_visual
                LDA countdown_digit_0                     ; ($4900)
                AND #$1F                                  ; ($4903)
                TAX                                       ; ($4905)
                LDA countdown_pattern_chars,X             ; ($4906)
                CMP #$48                                  ; ($4909)
                BNE write_offset_pattern                  ; ($490B)
                PHA                                       ; ($490D)
                LDA countdown_screen_ptr_lo,X             ; ($490E)
                STA $AC                                   ; ($4911)
                LDA countdown_screen_ptr_hi,X             ; ($4913)
                STA $AD                                   ; ($4916)
                LDY #$02                                  ; ($4918)
                PLA                                       ; ($491A)
fill_three_bytes_loop
                STA ($AC),Y                               ; ($491B)
                DEY                                       ; ($491D)
                BPL fill_three_bytes_loop                 ; ($491E)
                RTS                                       ; ($4920)
write_offset_pattern
                PHA                                       ; ($4921)
                LDA countdown_screen_ptr_lo,X             ; ($4922)
                STA $AC                                   ; ($4925)
                LDA countdown_screen_ptr_hi,X             ; ($4927)
                STA $AD                                   ; ($492A)
                LDY #$00                                  ; ($492C)
                PLA                                       ; ($492E)
                STA ($AC),Y                               ; ($492F)
                LDY #$7E                                  ; ($4931)
                STA ($AC),Y                               ; ($4933)
                LDY #$FC                                  ; ($4935)
                STA ($AC),Y                               ; ($4937)
                RTS                                       ; ($4939)

; ==================================================
; Section: Junk (Junk)
; Range: $493A - $493F (6 bytes)
; ==================================================

                .byte $FF,$00,$FF,$00,$FF,$00             ; ($493A)

; ==================================================
; Section: handle_collision_damage (Data)
; Range: $4940 - $49B6 (119 bytes)
; Character-based collision/damage handler dispatcher. Reads tile type from
; ($C9), branches to screen clearing routines based on value ($48 or $49),
; then increments damage counter. Triggers game over when damage reaches $28
; (40 decimal) or overflows. Plays collision sound effect on non-fatal
; damage.
; ==================================================

handle_collision_damage
                LDY #$00                                  ; ($4940)
                LDA ($C9),Y                               ; ($4942)
                CMP #$48                                  ; ($4944)
                BEQ handle_collision_type_48              ; ($4946)
                CMP #$49                                  ; ($4948)
                BEQ handle_collision_type_49              ; ($494A)
                RTS                                       ; ($494C)
                .byte $EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA  ; ($494D)
                .byte $EA,$EA,$EA                         ; ($495D)
handle_collision_type_48
                LDY #$00                                  ; ($4960)
                LDA #$00                                  ; ($4962)
                STA ($AE),Y                               ; ($4964)
                INY                                       ; ($4966)
                STA ($AE),Y                               ; ($4967)
                SEC                                       ; ($4969)
                LDA $AE                                   ; ($496A)
                SBC #$01                                  ; ($496C)
                STA $AE                                   ; ($496E)
                BCS clear_third_byte                      ; ($4970)
                DEC $AF                                   ; ($4972)
clear_third_byte
                LDY #$00                                  ; ($4974)
                LDA #$00                                  ; ($4976)
                STA ($AE),Y                               ; ($4978)
                JMP increment_damage                      ; ($497A)
                .byte $EA,$EA,$EA                         ; ($497D)
handle_collision_type_49
                LDY #$00                                  ; ($4980)
                LDA #$00                                  ; ($4982)
                STA ($AE),Y                               ; ($4984)
                LDY #$7E                                  ; ($4986)
                STA ($AE),Y                               ; ($4988)
                SEC                                       ; ($498A)
                LDA $AE                                   ; ($498B)
                SBC #$FC                                  ; ($498D)
                STA $AE                                   ; ($498F)
                BCS clear_offset_byte                     ; ($4991)
                DEC $AF                                   ; ($4993)
clear_offset_byte
                LDA #$00                                  ; ($4995)
                STA ($AE),Y                               ; ($4997)
                JMP increment_damage                      ; ($4999)
                .byte $A0,$49,$EA,$EA                     ; ($499C)
increment_damage
                LDA V_DamageCount                         ; ($49A0)
                CLC                                       ; ($49A3)
                ADC #$01                                  ; ($49A4)
                STA V_DamageCount                         ; ($49A6)
                BCS damage_fatal                          ; ($49A9)
                CMP #$28                                  ; ($49AB)
                BCS damage_fatal                          ; ($49AD)
                JSR configure_sound_effects_alt           ; ($49AF)
                RTS                                       ; ($49B2)
damage_fatal
                STA EndGameFlag                           ; ($49B3) #00 Continue / #80 Mayday found / Ends game #27
                RTS                                       ; ($49B6)

; ==================================================
; Section: Junk (Junk)
; Range: $49B7 - $49BF (9 bytes)
; ==================================================

                .byte $FD,$00,$FF,$00,$FF,$00,$FF,$24,$FF  ; ($49B7)

; ==================================================
; Section: init_entity (Data)
; Range: $49C0 - $49F3 (52 bytes)
; Screen pattern clearer based on entity index. Uses X as index into
; countdown pattern tables, checks if character is $48 (clears 3 consecutive
; bytes) or other (clears 3 offset bytes at 0, $7E, $FC). Inverse of L4900 -
; clears patterns instead of writing them. Used during entity initialization.
; ==================================================

init_entity
                LDA countdown_pattern_chars,X             ; ($49C0)
                CMP #$48                                  ; ($49C3)
                BNE clear_offset_pattern                  ; ($49C5)
                LDA countdown_screen_ptr_lo,X             ; ($49C7)
                STA $AC                                   ; ($49CA)
                LDA countdown_screen_ptr_hi,X             ; ($49CC)
                STA $AD                                   ; ($49CF)
                LDY #$02                                  ; ($49D1)
                LDA #$00                                  ; ($49D3)
clear_three_bytes_loop
                STA ($AC),Y                               ; ($49D5)
                DEY                                       ; ($49D7)
                BPL clear_three_bytes_loop                ; ($49D8)
                RTS                                       ; ($49DA)
clear_offset_pattern
                LDA countdown_screen_ptr_lo,X             ; ($49DB)
                STA $AC                                   ; ($49DE)
                LDA countdown_screen_ptr_hi,X             ; ($49E0)
                STA $AD                                   ; ($49E3)
                LDY #$00                                  ; ($49E5)
                LDA #$00                                  ; ($49E7)
                STA ($AC),Y                               ; ($49E9)
                LDY #$7E                                  ; ($49EB)
                STA ($AC),Y                               ; ($49ED)
                LDY #$FC                                  ; ($49EF)
                STA ($AC),Y                               ; ($49F1)
                RTS                                       ; ($49F3)

; ==================================================
; Section: Junk (Junk)
; Range: $49F4 - $49FF (12 bytes)
; ==================================================

                .byte $00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF  ; ($49F4)

; ==================================================
; Section: copy_memory_blocks (Code)
; Range: $4A00 - $4A43 (68 bytes)
; Memory block copier. Copies data from two source regions ($288B and $108F)
; to destination regions starting at $04D8 and $0000. Copies $E8 (232) bytes
; per page across 3 pages (696 bytes total per source). Likely copying game
; data or graphics from one memory area to another during initialization or
; level loading.
; ==================================================

copy_memory_blocks
                LDA #$04                                  ; ($4A00)
                STA $FE                                   ; ($4A02)
                LDA #$D8                                  ; ($4A04)
                STA $FC                                   ; ($4A06)
                LDA #$00                                  ; ($4A08)
                STA $FD                                   ; ($4A0A)
                STA $FB                                   ; ($4A0C)
                LDA #$8B                                  ; ($4A0E)
                STA $AF                                   ; ($4A10)
                LDA #$28                                  ; ($4A12)
                STA $AE                                   ; ($4A14)
                LDA #$8F                                  ; ($4A16)
                STA $AD                                   ; ($4A18)
                LDA #$10                                  ; ($4A1A)
                STA $AC                                   ; ($4A1C)
start_page_copy
                LDY #$00                                  ; ($4A1E)
byte_copy_loop
                LDA ($AE),Y                               ; ($4A20)
                STA ($FD),Y                               ; ($4A22)
                LDA ($AC),Y                               ; ($4A24)
                STA ($FB),Y                               ; ($4A26)
                INY                                       ; ($4A28)
                BEQ next_page                             ; ($4A29)
                CPY #$E8                                  ; ($4A2B)
                BNE byte_copy_loop                        ; ($4A2D)
                JMP check_complete                        ; ($4A2F)
next_page
                INC $FE                                   ; ($4A32)
                INC $FC                                   ; ($4A34)
                INC $AF                                   ; ($4A36)
                INC $AD                                   ; ($4A38)
                JMP start_page_copy                       ; ($4A3A)
check_complete
                LDA $FE                                   ; ($4A3D)
                CMP #$07                                  ; ($4A3F)
                BNE byte_copy_loop                        ; ($4A41)
                RTS                                       ; ($4A43)

; ==================================================
; Section: Junk (Junk)
; Range: $4A44 - $4A4F (12 bytes)
; ==================================================

                .byte $60,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA  ; ($4A44)

; ==================================================
; Section: update_proximity_beep (Code)
; Range: $4A50 - $4AA4 (85 bytes)
; Proximity beep generator for Mayday tracking. Uses frequency from proximity
; calculation to drive pulsed tone on SID voice 2. Counts down timers at
; $034C (beep interval) and $034E (beep duration) to create periodic beeps.
; Beep rate increases as player approaches Mayday. Silences voice 2 when beep
; completes.
; ==================================================

update_proximity_beep
                LDA SID_Voice2_Control                    ; ($4A50)
                CMP #$04                                  ; ($4A53)
                BEQ check_beep_duration                   ; ($4A55)
                LDY beep_interval_counter                 ; ($4A57)
                DEY                                       ; ($4A5A)
                BNE store_interval_counter                ; ($4A5B)
                LDY proximity_beep_frequency              ; ($4A5D)
                LDA #$02                                  ; ($4A60)
                STA beep_duration_counter                 ; ($4A62)
                LDA #$04                                  ; ($4A65)
                STA SID_Voice2_Control                    ; ($4A67)
                STY beep_interval_counter                 ; ($4A6A)
                JMP trigger_beep_sound                    ; ($4A6D)
check_beep_duration
                LDY beep_duration_counter                 ; ($4A70)
                DEY                                       ; ($4A73)
                BNE store_duration_counter                ; ($4A74)
                LDA #$02                                  ; ($4A76)
                STA SID_Voice2_Control                    ; ($4A78)
                STY beep_duration_counter                 ; ($4A7B)
                LDA #$00                                  ; ($4A7E)
                STA SID_Voice2_Freq_Lo                    ; ($4A80)
                RTS                                       ; ($4A83)
store_duration_counter
                STY beep_duration_counter                 ; ($4A84)
trigger_beep_sound
                LDA #$04                                  ; ($4A87)
                STA SID_Voice2_Attack_Decay               ; ($4A89)
                LDA #$3A                                  ; ($4A8C)
                STA SID_Voice2_Sustain_Release            ; ($4A8E)
                LDA #$98                                  ; ($4A91)
                STA SID_Voice2_Freq_Hi                    ; ($4A93)
                LDA #$DF                                  ; ($4A96)
                STA SID_Voice2_PulseWidth_Hi              ; ($4A98)
                LDA #$11                                  ; ($4A9B)
                STA SID_Voice2_Freq_Lo                    ; ($4A9D)
                RTS                                       ; ($4AA0)
store_interval_counter
                STY beep_interval_counter                 ; ($4AA1)
                RTS                                       ; ($4AA4)

; ==================================================
; Section: Junk (Junk)
; Range: $4AA5 - $4AAF (11 bytes)
; ==================================================

                .byte $00,$85,$FD,$98,$A2,$08,$38,$E5,$02,$08,$26  ; ($4AA5)

; ==================================================
; Section: divide_16bit_by_8bit (Data)
; Range: $4AB0 - $4ADA (43 bytes)
; 16-bit division routine. Divides 16-bit value (Y:A, high:low) by 8-bit
; divisor in X register. Returns quotient in $FD and remainder in $FE. Uses
; shift-and- subtract algorithm over 8 iterations. Called by
; Sub_MaydayDistanceBeep to convert distance to beep frequency.
; ==================================================

divide_16bit_by_8bit
                STA $AE                                   ; ($4AB0)
                STX $02                                   ; ($4AB2)
                LDA #$00                                  ; ($4AB4)
                STA $FD                                   ; ($4AB6)
                TYA                                       ; ($4AB8)
                LDX #$08                                  ; ($4AB9)
                SEC                                       ; ($4ABB)
                SBC $02                                   ; ($4ABC)
division_loop
                PHP                                       ; ($4ABE)
                ROL $FD                                   ; ($4ABF)
                ASL $AE                                   ; ($4AC1)
                ROL A                                     ; ($4AC3)
                PLP                                       ; ($4AC4)
                BCC add_divisor_back                      ; ($4AC5)
                SBC $02                                   ; ($4AC7)
                JMP continue_division                     ; ($4AC9)
add_divisor_back
                ADC $02                                   ; ($4ACC)
continue_division
                DEX                                       ; ($4ACE)
                BNE division_loop                         ; ($4ACF)
                BCS finalize_quotient                     ; ($4AD1)
                ADC $02                                   ; ($4AD3)
                CLC                                       ; ($4AD5)
finalize_quotient
                ROL $FD                                   ; ($4AD6)
                STA $FE                                   ; ($4AD8)
                RTS                                       ; ($4ADA)

; ==================================================
; Unsectioned Data
; ==================================================

                .byte $00,$00,$00,$00,$A8,$20,$BC,$B7,$BF,$BF,$BF,$B6,$BF,$94,$9E,$94  ; ($4ADB)
                .byte $9A,$92,$BF,$94,$BF,$D4,$FD,$DE,$FD,$D4,$FD,$F6,$FF,$FF,$FF,$FF  ; ($4AEB)
                .byte $FF,$FF,$FF,$FF,$FF                 ; ($4AFB)
countdown_pattern_chars
                .byte $48,$49,$48,$49,$49,$48,$49,$48,$49,$48,$49,$49,$48,$49,$49,$49  ; ($4B00)
                .byte $49,$49,$49,$49,$49,$48,$49,$49,$48,$49,$49,$49,$48,$48,$49,$49  ; ($4B10)
countdown_screen_ptr_lo
                .byte $D7,$A2,$96,$69,$EF,$8A,$4B,$E0,$AD,$4E,$FF,$AA,$C1,$00,$D3,$0C  ; ($4B20)
                .byte $2F,$44,$8D,$AA,$1E,$56,$93,$8C,$8F,$C0,$0D,$1C,$57,$AE,$57,$BA  ; ($4B30)
countdown_screen_ptr_hi
                .byte $9E,$98,$A0,$A1,$A5,$A9,$AD,$B0,$B4,$B8,$B8,$BA,$C0,$C2,$C4,$C8  ; ($4B40)
                .byte $CC,$CC,$98,$AB,$B0,$C2,$A4,$C3,$BC,$95,$9D,$9D,$A6,$A0,$A4,$9B  ; ($4B50)
                .byte $FF,$00,$FF,$00,$FF,$DF,$FF,$00,$FF,$B1,$FF,$FF,$FF,$00,$FF,$00  ; ($4B60)
                .byte $FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00  ; ($4B70)
                .byte $00,$FD,$00,$FF,$00,$0F,$00,$FF,$23,$FF,$00,$1F,$00,$0E,$0F,$FF  ; ($4B80)
                .byte $00,$FF,$00,$FF,$00,$0F,$00,$0F,$00,$FF,$00,$FF,$00,$FF,$0F,$FF  ; ($4B90)

; ==================================================
; Section: show_end_game_screen (Code)
; Range: $4BA0 - $4BE0 (65 bytes)
; Displays appropriate end-game screen based on EndGameFlag. Decompresses
; victory screen from $2512 if flag=$80 (Mayday found), or decompresses
; failure screens from various sources for other endings. Clears flag and
; continues to L4F7F.
; ==================================================

show_end_game_screen
                LDA EndGameFlag                           ; ($4BA0) #00 Continue / #80 Mayday found / Ends game #27
                CMP #$80                                  ; ($4BA3)
                BNE check_alternate_ending                ; ($4BA5)
                LDA #$12                                  ; ($4BA7)
                STA $1006                                 ; ($4BA9)
                LDA #$25                                  ; ($4BAC)
                STA $1002                                 ; ($4BAE)
                JSR L1000                                 ; ($4BB1)
                JMP reset_and_continue                    ; ($4BB4)
check_alternate_ending
                CMP #$40                                  ; ($4BB7)
                BNE decompress_first_screen               ; ($4BB9)
decompress_second_screen
                LDA #$19                                  ; ($4BBB)
                STA $1006                                 ; ($4BBD)
                LDA #$0A                                  ; ($4BC0)
                STA $1002                                 ; ($4BC2)
                JSR L1000                                 ; ($4BC5)
                JMP reset_and_continue                    ; ($4BC8)
decompress_first_screen
                LDA #$10                                  ; ($4BCB)
                STA $1006                                 ; ($4BCD)
                LDA #$90                                  ; ($4BD0)
                STA $1002                                 ; ($4BD2)
                JSR L1000                                 ; ($4BD5)
                JMP decompress_second_screen              ; ($4BD8)
reset_and_continue
                LDA #$00                                  ; ($4BDB)
                STA EndGameFlag                           ; ($4BDD) #00 Continue / #80 Mayday found / Ends game #27
                JMP menu_input_loop                       ; ($4BE0)

; ==================================================
; Section: Junk (Junk)
; Range: $4BE3 - $4BFF (29 bytes)
; ==================================================

                .byte $FF,$00,$2F,$00,$FF,$08,$6F,$00,$0F,$0F,$FF,$2E,$FF,$08,$FF,$00  ; ($4BE3)
                .byte $FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF  ; ($4BF3)

; ==================================================
; Section: update_all_entities (Code)
; Range: $4C00 - $4D9D (414 bytes)
; Entity AI and movement controller. Iterates through entities 1-15, checking
; visibility flags, updating positions based on map tile data ($9372 base +
; calculated offset), applying directional movement from lookup tables
; ($69B0/$69B8), handling collision animations (bit 5), and managing sprite
; destruction sequences. Main game loop for non-player sprite behavior.
; ==================================================

update_all_entities
                LDX #$0F                                  ; ($4C00)
                STX $AC                                   ; ($4C02)
                JMP get_direction_data                    ; ($4C04)
check_entity_visible
                LDX $AC                                   ; ($4C07)
                LDA V_HideShowSprite,X                    ; ($4C09)
                AND #$80                                  ; ($4C0C)
                BNE check_collision_with_bullets          ; ($4C0E)
                JMP next_entity                           ; ($4C10)
check_collision_with_bullets
                LDA V_HideShowSprite,X                    ; ($4C13)
                AND #$03                                  ; ($4C16)
                TAY                                       ; ($4C18)
                LDA sprite_enable_bitmask_table,Y         ; ($4C19)
                AND bullet_collision_flag                 ; ($4C1C)
                BEQ check_special_flag                    ; ($4C1F)
                JMP trigger_collision_effect              ; ($4C21)
check_special_flag
                LDA V_HideShowSprite,X                    ; ($4C24)
                AND #$20                                  ; ($4C27)
                BEQ check_priority_and_collisions         ; ($4C29)
                JMP animate_collision_flash               ; ($4C2B)
check_priority_and_collisions
                LDA V_HideShowSprite,X                    ; ($4C2E)
                AND #$03                                  ; ($4C31)
                TAY                                       ; ($4C33)
                LDA game_priority_flag                    ; ($4C34)
                CMP entity_priority_threshold,X           ; ($4C37)
                BCS handle_car_collision                  ; ($4C3A)
                JMP next_entity                           ; ($4C3C)
handle_car_collision
                LDA V_CarCollision                        ; ($4C3F)
                AND sprite_enable_bitmask_table,Y         ; ($4C42)
                BEQ decrement_animation_timer             ; ($4C45)
                LDA #$C0                                  ; ($4C47)
                STA entity_animation_counter,X            ; ($4C49)
                JMP next_entity                           ; ($4C4C)
decrement_animation_timer
                DEC entity_animation_counter,X            ; ($4C4F)
                LDA entity_animation_counter,X            ; ($4C52)
                BEQ sample_map_for_direction              ; ($4C55)
                JMP next_entity                           ; ($4C57)
sample_map_for_direction
                LDA entity_animation_reset_value,X        ; ($4C5A)
                STA entity_animation_counter,X            ; ($4C5D)
                LDA V_SprPosVertLow,X                     ; ($4C60)
                LDY V_SprPosVertHigh,X                    ; ($4C63)
                LDX #$08                                  ; ($4C66)
                JSR divide_16bit_by_8bit                  ; ($4C68)
                LDA $FD                                   ; ($4C6B)
                LDX #$7E                                  ; ($4C6D)
                JSR multiply_by_half                      ; ($4C6F)
                STA $FC                                   ; ($4C72)
                STX $FB                                   ; ($4C74)
                LDX $AC                                   ; ($4C76)
                LDA V_SprPosHorizLow,X                    ; ($4C78)
                LDY V_SprPosHorizHigh,X                   ; ($4C7B)
                LDX #$08                                  ; ($4C7E)
                JSR divide_16bit_by_8bit                  ; ($4C80)
                CLC                                       ; ($4C83)
                LDA $FB                                   ; ($4C84)
                ADC $FD                                   ; ($4C86)
                STA $FB                                   ; ($4C88)
                LDA $FC                                   ; ($4C8A)
                ADC #$00                                  ; ($4C8C)
                STA $FC                                   ; ($4C8E)
                CLC                                       ; ($4C90)
                LDA $FB                                   ; ($4C91)
                ADC #$72                                  ; ($4C93)
                STA $FB                                   ; ($4C95)
                LDA $FC                                   ; ($4C97)
                ADC #$93                                  ; ($4C99)
                STA $FC                                   ; ($4C9B)
                LDY #$00                                  ; ($4C9D)
                LDA ($FB),Y                               ; ($4C9F)
                CMP #$12                                  ; ($4CA1)
                BCC apply_movement                        ; ($4CA3)
                CMP #$1A                                  ; ($4CA5)
                BCS apply_movement                        ; ($4CA7)
                AND #$07                                  ; ($4CA9)
                LDX $AC                                   ; ($4CAB)
                STA sprite_data_extra,X                   ; ($4CAD)
apply_movement
                LDX $AC                                   ; ($4CB0)
get_direction_data
                LDA sprite_data_extra,X                   ; ($4CB2)
                TAY                                       ; ($4CB5)
                LDA direction_x_delta_table,Y             ; ($4CB6)
                BMI move_left                             ; ($4CB9)
                BEQ check_vertical_movement               ; ($4CBB)
                CLC                                       ; ($4CBD)
                LDA V_SprPosHorizLow,X                    ; ($4CBE)
                ADC #$01                                  ; ($4CC1)
                STA V_SprPosHorizLow,X                    ; ($4CC3)
                BCC check_vertical_movement               ; ($4CC6)
                INC V_SprPosHorizHigh,X                   ; ($4CC8)
                JMP check_vertical_movement               ; ($4CCB)
move_left
                SEC                                       ; ($4CCE)
                LDA V_SprPosHorizLow,X                    ; ($4CCF)
                SBC #$01                                  ; ($4CD2)
                STA V_SprPosHorizLow,X                    ; ($4CD4)
                BCS check_vertical_movement               ; ($4CD7)
                DEC V_SprPosHorizHigh,X                   ; ($4CD9)
check_vertical_movement
                LDA direction_y_delta_table,Y             ; ($4CDC)
                BMI move_up                               ; ($4CDF)
                BEQ update_sprite_pointer                 ; ($4CE1)
                CLC                                       ; ($4CE3)
                LDA V_SprPosVertLow,X                     ; ($4CE4)
                ADC #$01                                  ; ($4CE7)
                STA V_SprPosVertLow,X                     ; ($4CE9)
                BCC update_sprite_pointer                 ; ($4CEC)
                INC V_SprPosVertHigh,X                    ; ($4CEE)
                JMP update_sprite_pointer                 ; ($4CF1)
move_up
                SEC                                       ; ($4CF4)
                LDA V_SprPosVertLow,X                     ; ($4CF5)
                SBC #$01                                  ; ($4CF8)
                STA V_SprPosVertLow,X                     ; ($4CFA)
                BCS update_sprite_pointer                 ; ($4CFD)
                DEC V_SprPosVertHigh,X                    ; ($4CFF)
update_sprite_pointer
                CPX #$0F                                  ; ($4D02)
                BEQ next_entity                           ; ($4D04)
                LDA direction_sprite_pointer_table,Y      ; ($4D06)
                STA sprite_pointer_table,X                ; ($4D09)
next_entity
                LDX $AC                                   ; ($4D0C)
                DEX                                       ; ($4D0E)
                BEQ entity_loop_exit                      ; ($4D0F)
                STX $AC                                   ; ($4D11)
                JMP check_entity_visible                  ; ($4D13)
entity_loop_exit
                RTS                                       ; ($4D16)
multiply_by_half
                STA $FE                                   ; ($4D17)
                LDA #$00                                  ; ($4D19)
                STA $FD                                   ; ($4D1B)
                STX $02                                   ; ($4D1D)
                LDX #$08                                  ; ($4D1F)
multiply_loop
                LSR $02                                   ; ($4D21)
                BCC L4D28                                 ; ($4D23)
                CLC                                       ; ($4D25)
                ADC $FE                                   ; ($4D26)
L4D28
                ROR A                                     ; ($4D28)
                ROR $FD                                   ; ($4D29)
                DEX                                       ; ($4D2B)
                BNE multiply_loop                         ; ($4D2C)
                STA $FE                                   ; ($4D2E)
                LDX $FD                                   ; ($4D30)
                RTS                                       ; ($4D32)
animate_collision_flash
                DEC entity_flash_timer,X                  ; ($4D33)
                BEQ reset_flash_timer                     ; ($4D36)
                JMP next_entity                           ; ($4D38)
reset_flash_timer
                LDA #$18                                  ; ($4D3B)
                STA entity_flash_timer,X                  ; ($4D3D)
                DEC entity_flash_counter,X                ; ($4D40)
                BEQ destroy_entity                        ; ($4D43)
                LDA entity_flash_counter,X                ; ($4D45)
                AND #$01                                  ; ($4D48)
                CLC                                       ; ($4D4A)
                ADC #$AD                                  ; ($4D4B)
                STA sprite_pointer_table,X                ; ($4D4D)
                JMP next_entity                           ; ($4D50)
destroy_entity
                LDA V_HideShowSprite,X                    ; ($4D53)
                AND #$07                                  ; ($4D56)
                TAY                                       ; ($4D58)
                LDA sprite_disable_bitmask_table,Y        ; ($4D59)
                AND VIC_SpriteEnableRegister              ; ($4D5C)
                STA VIC_SpriteEnableRegister              ; ($4D5F)
                LDA sprite_disable_bitmask_table,Y        ; ($4D62)
                AND VIC_SpriteMulticolorRegister          ; ($4D65)
                STA VIC_SpriteMulticolorRegister          ; ($4D68)
                TYA                                       ; ($4D6B)
                ORA #$50                                  ; ($4D6C)
                STA V_HideShowSprite,X                    ; ($4D6E)
                JMP next_entity                           ; ($4D71)
trigger_collision_effect
                ORA VIC_SpriteMulticolorRegister          ; ($4D74)
                STA VIC_SpriteMulticolorRegister          ; ($4D77)
                LDA #$00                                  ; ($4D7A)
                STA bullet_collision_flag                 ; ($4D7C)
                LDA V_HideShowSprite,X                    ; ($4D7F)
                ORA #$70                                  ; ($4D82)
                STA V_HideShowSprite,X                    ; ($4D84)
                LDA #$10                                  ; ($4D87)
                STA entity_flash_counter,X                ; ($4D89)
                JSR configure_sound_effects_alt           ; ($4D8C)
                JMP next_entity                           ; ($4D8F)
update_entities_and_clear_flags
                JSR update_all_entities                   ; ($4D92)
                LDA #$00                                  ; ($4D95)
                STA V_CarCollision                        ; ($4D97)
                STA bullet_collision_flag                 ; ($4D9A)
                RTS                                       ; ($4D9D)

; ==================================================
; Section: Junk (Junk)
; Range: $4D9E - $4DFF (98 bytes)
; ==================================================

                .byte $04,$10,$1F,$FF,$00,$FF,$00,$FF,$00,$FF,$0F,$2F,$00,$FF,$0C,$FF  ; ($4D9E)
                .byte $2F,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FD,$00,$FF,$00,$FF,$00,$FF  ; ($4DAE)
                .byte $24,$FF,$00,$FF,$00,$FF,$1F,$0F,$09,$00,$20,$FF,$00,$FF,$00,$FF  ; ($4DBE)
                .byte $0C,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$0F,$FF,$00,$FF,$00,$FF  ; ($4DCE)
                .byte $A0,$FF,$00,$FF,$00,$FF,$00,$2F,$00,$FF,$00,$6F,$00,$0F,$0F,$FF  ; ($4DDE)
                .byte $2E,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF  ; ($4DEE)
                .byte $00,$FF                             ; ($4DFE)

; ==================================================
; Section: check_and_replace_map_tiles (Data)
; Range: $4E00 - $4EB7 (184 bytes)
; Map collision/tile replacement handler. Calculates adjusted map position
; based on scroll deltas, adds offset ($0308), checks against lookup table
; for specific coordinates, and replaces tiles in range $12-$19 with
; alternate values. Updates game priority counter and triggers countdown
; visual updates. Stores final position in $C9/$CA for tile checking.
; ==================================================

MapLoadTempLow
                LDA V_MapXposition                        ; ($4E00)
                STA $AE                                   ; ($4E03)
                LDA V_MapYposition                        ; ($4E05)
                STA $AF                                   ; ($4E08)
                LDA horizontal_scroll_delta               ; ($4E0A)
                BEQ check_vertical_scroll                 ; ($4E0D)
                BMI map_scroll_left                       ; ($4E0F)
                CLC                                       ; ($4E11)
                LDA #$7E                                  ; ($4E12)
                ADC $AE                                   ; ($4E14)
                STA $AE                                   ; ($4E16)
                LDA $AF                                   ; ($4E18)
                ADC #$00                                  ; ($4E1A)
                STA $AF                                   ; ($4E1C)
                JMP check_vertical_scroll                 ; ($4E1E)
map_scroll_left
                SEC                                       ; ($4E21)
                LDA $AE                                   ; ($4E22)
                SBC #$7E                                  ; ($4E24)
                STA $AE                                   ; ($4E26)
                LDA $AF                                   ; ($4E28)
                SBC #$00                                  ; ($4E2A)
                STA $AF                                   ; ($4E2C)
check_vertical_scroll
                LDA vertical_scroll_delta                 ; ($4E2E)
                BEQ add_offset_and_compare                ; ($4E31)
                BMI map_scroll_up                         ; ($4E33)
                CLC                                       ; ($4E35)
                LDA #$01                                  ; ($4E36)
                ADC $AE                                   ; ($4E38)
                STA $AE                                   ; ($4E3A)
                LDA $AF                                   ; ($4E3C)
                ADC #$00                                  ; ($4E3E)
                STA $AF                                   ; ($4E40)
                JMP add_offset_and_compare                ; ($4E42)
map_scroll_up
                SEC                                       ; ($4E45)
                LDA $AE                                   ; ($4E46)
                SBC #$01                                  ; ($4E48)
                STA $AE                                   ; ($4E4A)
                LDA $AF                                   ; ($4E4C)
                SBC #$00                                  ; ($4E4E)
                STA $AF                                   ; ($4E50)
add_offset_and_compare
                CLC                                       ; ($4E52)
                LDA $AE                                   ; ($4E53)
                ADC #$08                                  ; ($4E55)
                STA $AE                                   ; ($4E57)
                LDA $AF                                   ; ($4E59)
                ADC #$03                                  ; ($4E5B)
                STA $AF                                   ; ($4E5D)
                SEC                                       ; ($4E5F)
                LDA $AE                                   ; ($4E60)
                SBC $C9                                   ; ($4E62)
                TAX                                       ; ($4E64)
                LDA $AF                                   ; ($4E65)
                SBC $CA                                   ; ($4E67)
                STA $FE                                   ; ($4E69)
                LDY #$03                                  ; ($4E6B)
coordinate_check_loop
                LDA $FE                                   ; ($4E6D)
                CMP target_coords_high_table,Y            ; ($4E6F)
                BNE next_coordinate                       ; ($4E72)
                TXA                                       ; ($4E74)
                CMP target_coords_low_table,Y             ; ($4E75)
                BEQ coordinate_match_found                ; ($4E78)
next_coordinate
                DEY                                       ; ($4E7A)
                BPL coordinate_check_loop                 ; ($4E7B)
                JMP store_position_and_exit               ; ($4E7D)
coordinate_match_found
                STY $02                                   ; ($4E80)
                LDY #$00                                  ; ($4E82)
                LDA ($C9),Y                               ; ($4E84)
                CMP #$12                                  ; ($4E86)
                BCC check_tile_value                      ; ($4E88)
                CMP #$1A                                  ; ($4E8A)
                BCS check_tile_value                      ; ($4E8C)
                LDY $02                                   ; ($4E8E)
                LDA replacement_tile_table,Y              ; ($4E90)
                LDY #$00                                  ; ($4E93)
                STA ($C9),Y                               ; ($4E95)
store_position_and_exit
                LDA $AE                                   ; ($4E97)
                STA $C9                                   ; ($4E99)
                LDA $AF                                   ; ($4E9B)
                STA $CA                                   ; ($4E9D)
                RTS                                       ; ($4E9F)
check_tile_value
                LDY $02                                   ; ($4EA0)
                CMP tile_skip_table,Y                     ; ($4EA2)
                BEQ store_position_and_exit               ; ($4EA5)
                LDX game_priority_flag                    ; ($4EA7)
                INX                                       ; ($4EAA)
                CPX #$14                                  ; ($4EAB)
                BNE update_priority_counter               ; ($4EAD)
                JSR update_countdown_visual               ; ($4EAF)
                LDX #$12                                  ; ($4EB2)
update_priority_counter
                STX game_priority_flag                    ; ($4EB4)
                JMP store_position_and_exit               ; ($4EB7)

; ==================================================
; Unsectioned Data
; ==================================================

                .byte $EA,$EA,$EA,$EA,$EA,$EA             ; ($4EBA)
target_coords_low_table
                .byte $86,$03,$7A,$FD                     ; ($4EC0)
target_coords_high_table
                .byte $FE,$00,$01,$FF                     ; ($4EC4)
replacement_tile_table
                .byte $18,$12,$14,$16                     ; ($4EC8)
tile_skip_table
                .byte $1F,$1C,$1D,$1E,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ; ($4ECC)
                .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ; ($4EDC)
                .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ; ($4EEC)
                .byte $FF,$FF,$FF,$FF                     ; ($4EFC)

; ==================================================
; Section: randomize_game_state (Code)
; Range: $4F00 - $4F25 (38 bytes)
; Random initialization routine. Calls random number generator (L4FEF), uses
; lower 3 bits as index into lookup tables, and stores 5 values into memory
; locations $69FC-$69FF and $D3. Likely initializes random starting
; positions, directions, or states for game entities.
; ==================================================

randomize_game_state
                JSR generate_random_number                ; ($4F00)
                AND #$07                                  ; ($4F03)
                TAY                                       ; ($4F05)
                LDA random_init_table_1,Y                 ; ($4F06)
                STA random_value_1                        ; ($4F09)
                LDA random_init_table_2,Y                 ; ($4F0C)
                STA random_value_2                        ; ($4F0F)
                NOP                                       ; ($4F12)
                NOP                                       ; ($4F13)
                LDA random_init_table_3,Y                 ; ($4F14)
                STA random_value_3                        ; ($4F17)
                LDA random_init_table_4,Y                 ; ($4F1A)
                STA random_value_4                        ; ($4F1D)
                LDA random_init_table_5,Y                 ; ($4F20)
                STA $D3                                   ; ($4F23)
                RTS                                       ; ($4F25)

; ==================================================
; Unsectioned Data
; ==================================================

                .byte $60,$60,$40,$18,$E8,$40,$E8,$40,$18,$E8  ; ($4F26)

; ==================================================
; Section: menu_system_init (Data)
; Range: $4F30 - $4FBB (140 bytes)
; Main menu initialization and loop. Sets up IRQ handler at $518A, configures
; VIC for menu display (screen at $3000, charset at $3000), disables sprites
; and CIA timers, sets raster line to $8B, and enters menu loop checking
; joystick input to cycle through menu options (1-3). Waits for fire button
; press to start game or shows end screen if EndGameFlag set.
; ==================================================

menu_system_init
                SEI                                       ; ($4F30)
                LDA #$8A                                  ; ($4F31)
                STA IRQ_vector_low                        ; ($4F33)
                LDA #$51                                  ; ($4F36)
                STA IRQ_vector_high                       ; ($4F38)
                CLI                                       ; ($4F3B)
                LDA #$98                                  ; ($4F3C)
                STA VIC_ScreenControlRegister1            ; ($4F3E)
                LDA #$08                                  ; ($4F41)
                STA VIC_ScreenControlRegister2            ; ($4F43)
                LDA #$00                                  ; ($4F46)
                STA VIC_BackgroundColor                   ; ($4F48)
                STA VIC_BackgroundColor1                  ; ($4F4B)
                LDA VIC_MemorySetupRegister               ; ($4F4E)
                AND #$F0                                  ; ($4F51)
                ORA #$0C                                  ; ($4F53)
                STA VIC_MemorySetupRegister               ; ($4F55)
                LDA #$00                                  ; ($4F58)
                STA VIC_SpriteEnableRegister              ; ($4F5A)
                LDA CIA1_ControlRegisterA                 ; ($4F5D)
                AND #$FE                                  ; ($4F60)
                STA CIA1_ControlRegisterA                 ; ($4F62)
                LDA CIA1_ControlRegisterA                 ; ($4F65)
                AND #$FE                                  ; ($4F68)
                STA CIA1_ControlRegisterA                 ; ($4F6A)
                LDA #$8B                                  ; ($4F6D)
                STA VIC_RasterLine                        ; ($4F6F)
                LDA #$00                                  ; ($4F72)
                STA SID_VolumeFilter                      ; ($4F74)
                LDA #$00                                  ; ($4F77)
                STA V_RegisterCollision                   ; ($4F79)
                JSR L54F0                                 ; ($4F7C)
menu_input_loop
                JSR sub_Joystick                          ; ($4F7F)
                LDA $02                                   ; ($4F82)
                BNE start_game                            ; ($4F84)
                LDA $FD                                   ; ($4F86)
                BEQ delay_loop_outer                      ; ($4F88)
                BMI menu_option_decrease                  ; ($4F8A)
                LDY V_MenuSelection                       ; ($4F8C) 1=Theme, 2=Effects, 3=Both
                INY                                       ; ($4F8F)
                CPY #$04                                  ; ($4F90)
                BNE store_menu_selection                  ; ($4F92)
                LDY #$03                                  ; ($4F94)
                JMP store_menu_selection                  ; ($4F96)
menu_option_decrease
                LDY V_MenuSelection                       ; ($4F99) 1=Theme, 2=Effects, 3=Both
                DEY                                       ; ($4F9C)
                BNE store_menu_selection                  ; ($4F9D)
                LDY #$01                                  ; ($4F9F)
store_menu_selection
                STY V_MenuSelection                       ; ($4FA1) 1=Theme, 2=Effects, 3=Both
delay_loop_outer
                LDY #$50                                  ; ($4FA4)
delay_loop_middle
                LDX #$FF                                  ; ($4FA6)
delay_loop_inner
                DEX                                       ; ($4FA8)
                BNE delay_loop_inner                      ; ($4FA9)
                DEY                                       ; ($4FAB)
                BNE delay_loop_middle                     ; ($4FAC)
                INC $D9                                   ; ($4FAE)
                JSR L542D                                 ; ($4FB0)
                LDA EndGameFlag                           ; ($4FB3) #00 Continue / #80 Mayday found / Ends game #27
                BEQ menu_input_loop                       ; ($4FB6)
                JMP show_end_game_screen                  ; ($4FB8)
start_game
                JMP game_start_entry                      ; ($4FBB)

; ==================================================
; Unsectioned Data
; ==================================================

                .byte $EA,$EA                             ; ($4FBE)
random_init_table_1
                .byte $40,$18,$E8,$40,$E8,$40,$18,$E8     ; ($4FC0)
random_init_table_2
                .byte $00,$02,$03,$00,$03,$00,$02,$03     ; ($4FC8)
random_init_table_3
                .byte $28,$28,$28,$D8,$D8,$A7,$A7,$A7     ; ($4FD0)
random_init_table_4
                .byte $00,$00,$00,$01,$01,$03,$03,$03     ; ($4FD8)
random_init_table_5
                .byte $F4,$F4,$F0,$F8,$F0,$F8,$FC,$FC,$D4,$A9,$80,$8D,$12,$D4,$AD  ; ($4FE0)

; ==================================================
; Section: generate_random_number (Code)
; Range: $4FEF - $4FFF (17 bytes)
; Random number generator using SID voice 3. Sets voice 3 frequency to
; maximum ($FFFF), enables noise waveform ($80), and reads random value from
; voice 3 output register ($D41B). Returns 8-bit random number in
; accumulator.
; ==================================================

generate_random_number
                LDA #$FF                                  ; ($4FEF)
                STA SID_Voice3_Freq_Lo                    ; ($4FF1)
                STA SID_Voice3_Freq_Hi                    ; ($4FF4)
                LDA #$80                                  ; ($4FF7)
                STA SID_Voice3_Control                    ; ($4FF9)
                LDA SID_Voice3_Oscillator                 ; ($4FFC)
                RTS                                       ; ($4FFF)

; ==================================================
; Section: setup_game_irq (Code)
; Range: $5000 - $5021 (34 bytes)
; IRQ system reconfiguration. Sets IRQ vector to $5026, configures raster
; interrupt at line $8B (139), clears high bit of screen control register,
; and enables raster interrupts. Likely switches from menu to game interrupt
; handler.
; ==================================================

setup_game_irq
                SEI                                       ; ($5000)
                LDA #$26                                  ; ($5001)
                STA IRQ_vector_low                        ; ($5003)
                LDA #$50                                  ; ($5006)
                STA IRQ_vector_high                       ; ($5008)
                CLI                                       ; ($500B)
                LDA #$8B                                  ; ($500C)
                STA VIC_RasterLine                        ; ($500E)
                LDA VIC_ScreenControlRegister1            ; ($5011)
                AND #$7F                                  ; ($5014)
                STA VIC_ScreenControlRegister1            ; ($5016)
                LDA VIC_InterruptMaskRegister             ; ($5019)
                ORA #$01                                  ; ($501C)
                STA VIC_InterruptMaskRegister             ; ($501E)
                RTS                                       ; ($5021)

; ==================================================
; Section: Junk (Junk)
; Range: $5022 - $5025 (4 bytes)
; ==================================================

                .byte $60,$60,$60,$60                     ; ($5022)

; ==================================================
; Section: irq_main_dispatcher (Code)
; Range: $5026 - $504B (38 bytes)
; Main IRQ dispatcher. Checks interrupt source register ($D019) and routes to
; appropriate handlers: raster interrupts (L504C), sprite-background
; collisions (sprite_background_collision_handler), or sprite-sprite
; collisions (sprite_sprite_collision_handler). Falls through to irq_exit if
; no recognized interrupt or if $02FF flag is set.
; ==================================================

irq_main_dispatcher
                LDA VIC_InterruptStatusRegister           ; ($5026)
                TAX                                       ; ($5029)
                AND #$01                                  ; ($502A)
                BNE raster_interrupt_handler              ; ($502C)
                LDA $02FF                                 ; ($502E)
                BEQ check_sprite_bg_collision             ; ($5031)
                JMP irq_exit                              ; ($5033)
check_sprite_bg_collision
                TXA                                       ; ($5036)
                AND #$02                                  ; ($5037)
                BEQ check_sprite_sprite_collision         ; ($5039)
                JMP sprite_background_collision_handler   ; ($503B)
check_sprite_sprite_collision
                TXA                                       ; ($503E)
                AND #$04                                  ; ($503F)
                BEQ irq_exit_jump                         ; ($5041)
                JMP sprite_sprite_collision_handler       ; ($5043)
irq_exit_jump
                JMP irq_exit                              ; ($5046)
                .byte $4C,$8A,$51                         ; ($5049)

; ==================================================
; Section: raster_interrupt_handler (Code)
; Range: $504C - $5134 (233 bytes)
; Raster interrupt handler for split-screen display. Changes VIC settings at
; different raster lines to create game area (lines $8F-$9B) and dashboard
; view (line $9C+). Configures screen memory, colors, scroll registers, and
; calls view update, clock, and sound routines. Creates visual separation
; between top-down map and 3D forward view.
; ==================================================

raster_interrupt_handler
                STA VIC_InterruptStatusRegister           ; ($504C)
                LDA VIC_RasterLine                        ; ($504F)
                CMP #$8F                                  ; ($5052)
                BCC setup_game_area_display               ; ($5054)
                CMP #$9C                                  ; ($5056)
                BCS setup_dashboard_display               ; ($5058)
                JMP setup_middle_display                  ; ($505A)
setup_dashboard_display
                LDA VIC_InterruptMaskRegister             ; ($505D)
                AND #$F9                                  ; ($5060)
                STA VIC_InterruptMaskRegister             ; ($5062)
                LDA #$8D                                  ; ($5065)
                STA VIC_RasterLine                        ; ($5067)
                LDA VIC_ScreenControlRegister1            ; ($506A)
                AND #$F8                                  ; ($506D)
                ORA #$0B                                  ; ($506F)
                STA VIC_ScreenControlRegister1            ; ($5071)
                LDA VIC_ScreenControlRegister2            ; ($5074)
                AND #$F8                                  ; ($5077)
                ORA #$08                                  ; ($5079)
                STA VIC_ScreenControlRegister2            ; ($507B)
                LDA #$0F                                  ; ($507E)
                STA VIC_BackgroundColor                   ; ($5080)
                LDY #$08                                  ; ($5083)
                STY VIC_BackgroundColor1                  ; ($5085)
                INY                                       ; ($5088)
                STY VIC_BackgroundColor2                  ; ($5089)
                LDA VIC_MemorySetupRegister               ; ($508C)
                AND #$F0                                  ; ($508F)
                ORA #$0C                                  ; ($5091)
                STA VIC_MemorySetupRegister               ; ($5093)
                JSR copy_view_to_screen                   ; ($5096)
                JSR L5DA0                                 ; ($5099)
                JSR Sub_DashClock                         ; ($509C)
                JMP update_audio_systems                  ; ($509F)
                .byte $4C,$E0,$51,$4C,$E0,$51,$4C,$E0,$51,$4C,$E0,$51,$EA  ; ($50A2)
setup_game_area_display
                LDA #$06                                  ; ($50AF)
                STA VIC_BackgroundColor                   ; ($50B1)
                STA VIC_BackgroundColor1                  ; ($50B4)
                STA VIC_BackgroundColor2                  ; ($50B7)
                STA VIC_SpriteExtraColor1                 ; ($50BA)
                STA VIC_SpriteExtraColor2                 ; ($50BD)
                LDA #$9A                                  ; ($50C0)
                STA VIC_RasterLine                        ; ($50C2)
                LDA VIC_MemorySetupRegister               ; ($50C5)
                AND #$F0                                  ; ($50C8)
                ORA #$0E                                  ; ($50CA)
                STA VIC_MemorySetupRegister               ; ($50CC)
                LDA VIC_ScreenControlRegister1            ; ($50CF)
                AND #$F0                                  ; ($50D2)
                ORA $033F                                 ; ($50D4)
                STA VIC_ScreenControlRegister1            ; ($50D7)
                LDA VIC_ScreenControlRegister2            ; ($50DA)
                AND #$F0                                  ; ($50DD)
                ORA V_HorzRasterScrollLoop                ; ($50DF)
                STA VIC_ScreenControlRegister2            ; ($50E2)
                LDA #$06                                  ; ($50E5)
                STA VIC_Sprite0_Color                     ; ($50E7)
                STA VIC_Sprite1_Color                     ; ($50EA)
                STA VIC_Sprite2_Color                     ; ($50ED)
                STA VIC_Sprite3_Color                     ; ($50F0)
                STA VIC_Sprite6_Color                     ; ($50F3)
                JMP irq_exit                              ; ($50F6)
setup_middle_display
                LDA #$0B                                  ; ($50F9)
                STA VIC_BackgroundColor                   ; ($50FB)
                LDA #$07                                  ; ($50FE)
                STA VIC_BackgroundColor1                  ; ($5100)
                STA VIC_SpriteExtraColor2                 ; ($5103)
                LDA #$05                                  ; ($5106)
                STA VIC_BackgroundColor2                  ; ($5108)
                LDA #$FB                                  ; ($510B)
                STA VIC_RasterLine                        ; ($510D)
                LDA #$02                                  ; ($5110)
                STA VIC_SpriteExtraColor1                 ; ($5112)
                LDA #$0A                                  ; ($5115)
                STA VIC_Sprite0_Color                     ; ($5117)
                LDA #$0F                                  ; ($511A)
                STA VIC_Sprite1_Color                     ; ($511C)
                LDA #$01                                  ; ($511F)
                STA VIC_Sprite2_Color                     ; ($5121)
                LDA #$00                                  ; ($5124)
                STA VIC_Sprite6_Color                     ; ($5126)
                STA VIC_Sprite3_Color                     ; ($5129)
                LDA VIC_InterruptMaskRegister             ; ($512C)
                ORA #$07                                  ; ($512F)
                STA VIC_InterruptMaskRegister             ; ($5131)
                JMP irq_exit                              ; ($5134)

; ==================================================
; Section: sprite_sprite_collision_handler (Code)
; Range: $5137 - $516F (57 bytes)
; Sprite-sprite collision handler. Checks collision register ($D01E) to
; detect: player/Mayday collision (sets EndGameFlag=$80 for victory),
; player/enemy collisions (sets V_CarCollision), and bullet/sprite collisions
; (destroys bullet). Filters out steering wheel sprites (4-5) from collision
; detection.
; ==================================================

sprite_sprite_collision_handler
                STA VIC_InterruptStatusRegister           ; ($5137)
                LDA VIC_SpriteSpriteCollisionRegister     ; ($513A)
                TAX                                       ; ($513D)
                AND #$30                                  ; ($513E)
                BNE irq_exit                              ; ($5140)
                TXA                                       ; ($5142)
                AND #$08                                  ; ($5143)
                BEQ check_car_collisions                  ; ($5145)
                TXA                                       ; ($5147)
                BPL irq_exit                              ; ($5148)
                LDA mayday_ready_flag                     ; ($514A)
                BEQ irq_exit                              ; ($514D)
                LDA #$80                                  ; ($514F)
                STA EndGameFlag                           ; ($5151) #00 Continue / #80 Mayday found / Ends game #27
                JMP irq_exit                              ; ($5154)
check_car_collisions
                TXA                                       ; ($5157)
                BMI handle_multicolor_collision           ; ($5158)
                AND #$40                                  ; ($515A)
                BNE handle_bullet_collision               ; ($515C)
                TXA                                       ; ($515E)
                AND #$07                                  ; ($515F)
                STA V_CarCollision                        ; ($5161)
                JMP irq_exit                              ; ($5164)
handle_bullet_collision
                TXA                                       ; ($5167)
                AND #$07                                  ; ($5168)
                STA bullet_collision_flag                 ; ($516A)
                JMP destroy_bullet                        ; ($516D)

; ==================================================
; Section: sprite_background_collision_handler (Code)
; Range: $5170 - $519F (48 bytes)
; Sprite-background collision handler. Detects when sprites hit background
; tiles. Includes shared irq_exit routine ($518A) used by all IRQ handlers to
; restore registers and return from interrupt.
; ==================================================

sprite_background_collision_handler
                STA VIC_InterruptStatusRegister           ; ($5170)
                LDA VIC_SpriteBackgroundCollisionReg      ; ($5173)
                TAX                                       ; ($5176)
                BMI handle_collision_damage_response      ; ($5177)
                AND #$40                                  ; ($5179)
                BEQ irq_exit                              ; ($517B)
destroy_bullet
                LDA #$FF                                  ; ($517D)
                STA bullet_xpos_high                      ; ($517F)
                STA bullet_ypos_high                      ; ($5182)
                NOP                                       ; ($5185)
                NOP                                       ; ($5186)
                NOP                                       ; ($5187)
                NOP                                       ; ($5188)
                NOP                                       ; ($5189)
irq_exit
                PLA                                       ; ($518A)
                TAY                                       ; ($518B)
                PLA                                       ; ($518C)
                TAX                                       ; ($518D)
                PLA                                       ; ($518E)
                RTI                                       ; ($518F)
handle_multicolor_collision
                TXA                                       ; ($5190)
                AND #$07                                  ; ($5191)
                BEQ irq_exit                              ; ($5193)
                TAY                                       ; ($5195)
                AND VIC_SpriteMulticolorRegister          ; ($5196)
                BNE irq_exit                              ; ($5199)
                TYA                                       ; ($519B)
                STA V_CarCollision                        ; ($519C)
                JMP handle_collision_damage_response      ; ($519F)

; ==================================================
; Section: handle_collision_damage_response (Code)
; Range: $51A2 - $51DF (62 bytes)
; Collision damage response. Reverses player direction, adds velocity,
; increments damage counter, triggers game over at 40 damage, locks controls,
; and creates bounce-back effect when hitting obstacles or enemies.
; ==================================================

handle_collision_damage_response
                LDA V_RegisterCollision                   ; ($51A2)
                BNE irq_exit                              ; ($51A5)
                LDA V_ForwardReverse                      ; ($51A7) #00 Forward / #08 Reverse
                EOR #$08                                  ; ($51AA)
                STA V_ForwardReverse                      ; ($51AC) #00 Forward / #08 Reverse
                CLC                                       ; ($51AF)
                LDA V_CarSpeed                            ; ($51B0)
                ADC #$03                                  ; ($51B3)
                CMP #$40                                  ; ($51B5)
                BCC clamp_speed_to_max                    ; ($51B7)
                LDA #$3F                                  ; ($51B9)
clamp_speed_to_max
                STA V_CarSpeed                            ; ($51BB)
                LDY V_DamageCount                         ; ($51BE)
                INY                                       ; ($51C1)
                CPY #$28                                  ; ($51C2)
                BCC update_damage_and_check_gameover      ; ($51C4)
                LDY #$27                                  ; ($51C6)
                STY EndGameFlag                           ; ($51C8) #00 Continue / #80 Mayday found / Ends game #27
update_damage_and_check_gameover
                STY V_DamageCount                         ; ($51CB)
                INC V_RegisterCollision                   ; ($51CE)
                LDA V_CarFacingDirectionTemp              ; ($51D1)
                STA V_CarFacingDirection                  ; ($51D4) 00 N / 01 NE / 02 E / 03 SE / 04 S / 05 SW / 06 W / 07 NW
                JMP irq_exit                              ; ($51D7)
                .byte $FA,$E2,$FE,$E3,$00,$F3             ; ($51DA)

; ==================================================
; Section: update_audio_systems (Code)
; Range: $51E0 - $51F2 (19 bytes)
; Sound and music update caller. Checks V_MenuSelection to determine which
; audio to play: music or sound effects. Runs every frame as part of IRQ
; routine.
; ==================================================

update_audio_systems
                LDA V_MenuSelection                       ; ($51E0) 1=Theme, 2=Effects, 3=Both
                LSR A                                     ; ($51E3)
                BCC L51E9                                 ; ($51E4)
                JSR L7AAB                                 ; ($51E6)
L51E9
                LDA V_MenuSelection                       ; ($51E9) 1=Theme, 2=Effects, 3=Both
                LSR A                                     ; ($51EC)
                BEQ L51F2                                 ; ($51ED)
                JSR update_proximity_beep                 ; ($51EF)
L51F2
                JMP irq_exit                              ; ($51F2)

; ==================================================
; Section: Junk (Junk)
; Range: $51F5 - $51FF (11 bytes)
; ==================================================

                .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ; ($51F5)

; ==================================================
; Unsectioned Data
; ==================================================

update_mayday_ai
                LDA EndGameFlag                           ; ($5200) #00 Continue / #80 Mayday found / Ends game #27
                BNE L5216                                 ; ($5203)
                LDY V_MaydayLoopCounter                   ; ($5205)
                DEY                                       ; ($5208)
                STY V_MaydayLoopCounter                   ; ($5209)
                BNE L5216                                 ; ($520C)
                LDA V_MaydayLanded                        ; ($520E) #00 continue circling / #01 Landed
                BEQ mayday_circling_behavior              ; ($5211)
                JMP mayday_landing_behavior               ; ($5213)
L5216
                RTS                                       ; ($5216)
                .byte $60                                 ; ($5217)
mayday_circling_behavior
                LDY #$07                                  ; ($5218)
                STY V_MaydayLoopCounter                   ; ($521A)
                LDA sprite_data_extra                     ; ($521D)
                TAY                                       ; ($5220)
                LDA direction_x_delta_table,Y             ; ($5221)
                BMI move_mayday_left                      ; ($5224)
                BEQ L5247                                 ; ($5226)
                CLC                                       ; ($5228)
                LDA V_SprPosHorizLow                      ; ($5229)
                ADC #$01                                  ; ($522C)
                STA V_SprPosHorizLow                      ; ($522E)
                BCC L5247                                 ; ($5231)
                INC V_SprPosHorizHigh                     ; ($5233)
                JMP L5247                                 ; ($5236)
move_mayday_left
                SEC                                       ; ($5239)
                LDA V_SprPosHorizLow                      ; ($523A)
                SBC #$01                                  ; ($523D)
                STA V_SprPosHorizLow                      ; ($523F)
                BCS L5247                                 ; ($5242)
                DEC V_SprPosHorizHigh                     ; ($5244)
L5247
                LDA direction_y_delta_table,Y             ; ($5247)
                BMI L525F                                 ; ($524A)
                BEQ update_mayday_sprite_and_direction    ; ($524C)
                CLC                                       ; ($524E)
                LDA V_SprPosVertLow                       ; ($524F)
                ADC #$01                                  ; ($5252)
                STA V_SprPosVertLow                       ; ($5254)
                BCC update_mayday_sprite_and_direction    ; ($5257)
                INC V_SprPosVertHigh                      ; ($5259)
                JMP update_mayday_sprite_and_direction    ; ($525C)
L525F
                SEC                                       ; ($525F)
                LDA V_SprPosVertLow                       ; ($5260)
                SBC #$01                                  ; ($5263)
                STA V_SprPosVertLow                       ; ($5265)
                BCS update_mayday_sprite_and_direction    ; ($5268)
                DEC V_SprPosVertHigh                      ; ($526A)
update_mayday_sprite_and_direction
                LDA mayday_sprite_pointer_table,Y         ; ($526D)
                STA sprite_pointer_table                  ; ($5270)
                LDY mayday_turn_timer                     ; ($5273)
                DEY                                       ; ($5276)
                STY mayday_turn_timer                     ; ($5277)
                BNE L52A1                                 ; ($527A)
                CLC                                       ; ($527C)
                LDA mayday_direction_index                ; ($527D)
                ADC #$02                                  ; ($5280)
                STA mayday_direction_index                ; ($5282)
                NOP                                       ; ($5285)
                CMP $D3                                   ; ($5286)
                BNE L5290                                 ; ($5288)
                INC V_MaydayLanded                        ; ($528A) #00 continue circling / #01 Landed
                JMP L5296                                 ; ($528D)
L5290
                LDY mayday_direction_index                ; ($5290)
                STY mayday_turn_timer                     ; ($5293)
L5296
                LDY sprite_data_extra                     ; ($5296)
                DEY                                       ; ($5299)
                BPL L529E                                 ; ($529A)
                LDY #$07                                  ; ($529C)
L529E
                STY sprite_data_extra                     ; ($529E)
L52A1
                JMP update_countdown_display              ; ($52A1)
mayday_landing_behavior
                LDY #$08                                  ; ($52A4)
                STY V_MaydayLoopCounter                   ; ($52A6)
                LDA V_SprPosHorizHigh                     ; ($52A9)
                CMP random_value_2                        ; ($52AC)
                BCC L52D1                                 ; ($52AF)
                BEQ L52B6                                 ; ($52B1)
                JMP move_toward_target_horizontal         ; ($52B3)
L52B6
                LDA V_SprPosHorizLow                      ; ($52B6)
                CMP random_value_1                        ; ($52B9)
                BCC L52D1                                 ; ($52BC)
                BEQ L52DF                                 ; ($52BE)
move_toward_target_horizontal
                SEC                                       ; ($52C0)
                LDA V_SprPosHorizLow                      ; ($52C1)
                SBC #$01                                  ; ($52C4)
                STA V_SprPosHorizLow                      ; ($52C6)
                BCS L52DF                                 ; ($52C9)
                DEC V_SprPosHorizHigh                     ; ($52CB)
                JMP L52DF                                 ; ($52CE)
L52D1
                CLC                                       ; ($52D1)
                LDA V_SprPosHorizLow                      ; ($52D2)
                ADC #$01                                  ; ($52D5)
                STA V_SprPosHorizLow                      ; ($52D7)
                BCC L52DF                                 ; ($52DA)
                INC V_SprPosHorizHigh                     ; ($52DC)
L52DF
                LDA V_SprPosVertHigh                      ; ($52DF)
                CMP random_value_4                        ; ($52E2)
                BCC L5307                                 ; ($52E5)
                BEQ L52EC                                 ; ($52E7)
                JMP move_toward_target_vertical           ; ($52E9)
L52EC
                LDA V_SprPosVertLow                       ; ($52EC)
                CMP random_value_3                        ; ($52EF)
                BCC L5307                                 ; ($52F2)
                BEQ update_countdown_display              ; ($52F4)
move_toward_target_vertical
                SEC                                       ; ($52F6)
                LDA V_SprPosVertLow                       ; ($52F7)
                SBC #$01                                  ; ($52FA)
                STA V_SprPosVertLow                       ; ($52FC)
                BCS update_countdown_display              ; ($52FF)
                DEC V_SprPosVertHigh                      ; ($5301)
                JMP update_countdown_display              ; ($5304)
L5307
                CLC                                       ; ($5307)
                LDA V_SprPosVertLow                       ; ($5308)
                ADC #$01                                  ; ($530B)
                STA V_SprPosVertLow                       ; ($530D)
                BCC update_countdown_display              ; ($5310)
                INC V_SprPosVertHigh                      ; ($5312)
update_countdown_display
                LDX countdown_update_timer                ; ($5315)
                DEX                                       ; ($5318)
                STX countdown_update_timer                ; ($5319)
                BNE L534D                                 ; ($531C)
                LDX #$14                                  ; ($531E)
                STX countdown_update_timer                ; ($5320)
                NOP                                       ; ($5323)
                LDX #$02                                  ; ($5324)
decrement_counter_digits
                DEC ScreenCounterDigit100,X               ; ($5326)
                LDA ScreenCounterDigit100,X               ; ($5329)
                CMP #$63                                  ; ($532C)
                BNE check_countdown_zero                  ; ($532E)
                LDA #$6D                                  ; ($5330)
                STA ScreenCounterDigit100,X               ; ($5332)
                DEX                                       ; ($5335)
                BPL decrement_counter_digits              ; ($5336)
check_countdown_zero
                LDA ScreenCounterDigit100                 ; ($5338)
                CMP #$64                                  ; ($533B)
                BNE L534D                                 ; ($533D)
                LDA ScreenCounterDigit10                  ; ($533F)
                CMP #$64                                  ; ($5342)
                BNE set_mayday_ready_flag                 ; ($5344)
                LDA ScreenCounterDigit1                   ; ($5346)
                CMP #$64                                  ; ($5349)
                BEQ trigger_timeout_gameover              ; ($534B)
L534D
                RTS                                       ; ($534D)
set_mayday_ready_flag
                CMP #$6A                                  ; ($534E)
                BCS L5355                                 ; ($5350)
                INC mayday_ready_flag                     ; ($5352)
L5355
                RTS                                       ; ($5355)
trigger_timeout_gameover
                LDA #$40                                  ; ($5356)
                STA EndGameFlag                           ; ($5358) #00 Continue / #80 Mayday found / Ends game #27
                RTS                                       ; ($535B)
countdown_update_timer
                .byte $03,$17,$FF,$00,$FF,$00,$5F,$00,$FF,$08,$FF,$00,$FF,$DF,$FF,$00  ; ($535C)
                .byte $FF,$B1,$FF,$FF,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00  ; ($536C)
                .byte $FF,$00,$FF,$00,$FF,$00,$FF,$00,$00,$0F,$00,$FF,$23,$FF,$00,$1F  ; ($537C)
                .byte $00,$0E,$0F,$FF,$02,$FF,$00,$FF,$00,$0F,$00,$0F,$00,$FF,$00,$FF  ; ($538C)
                .byte $00,$FF,$0F,$FF,$1F,$FF,$00,$FF,$00,$FF,$00,$FF,$0F,$2F,$00,$FF  ; ($539C)
                .byte $0C,$FF,$2F,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FD,$00,$FF,$00,$FF  ; ($53AC)
                .byte $00,$FF,$24,$FF,$00,$FF,$00,$FF,$1F,$0F,$09,$00,$20,$FF,$00,$FF  ; ($53BC)
                .byte $00,$FF,$0C,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$0F,$FF,$00,$FF  ; ($53CC)
                .byte $00,$FF,$A0,$FF                     ; ($53DC)
L53E0
                LDA #$05                                  ; ($53E0)
                LDY #$02                                  ; ($53E2)
L53E4
                STA $53FD,Y                               ; ($53E4)
                DEY                                       ; ($53E7)
                BPL L53E4                                 ; ($53E8)
                LDX V_MenuSelection                       ; ($53EA) 1=Theme, 2=Effects, 3=Both
                LDA #$0D                                  ; ($53ED)
                STA $53FC,X                               ; ($53EF)
                JMP L5430                                 ; ($53F2)
                .byte $EA,$EA,$EA,$EA,$EA,$EA,$EA,$0D,$05,$05,$0D  ; ($53F5)
L5400
                LDA #$03                                  ; ($5400)
                STA $AF                                   ; ($5402)
                LDA #$E8                                  ; ($5404)
                STA $AE                                   ; ($5406)
                LDA #$D7                                  ; ($5408)
                STA $AD                                   ; ($540A)
                LDA #$E8                                  ; ($540C)
                STA $AC                                   ; ($540E)
                LDX #$04                                  ; ($5410)
                LDY #$18                                  ; ($5412)
                JMP L5419                                 ; ($5414)
L5417
                LDY #$00                                  ; ($5417)
L5419
                LDA #$15                                  ; ($5419)
                STA ($AE),Y                               ; ($541B)
                LDA #$0E                                  ; ($541D)
                STA ($AC),Y                               ; ($541F)
                INY                                       ; ($5421)
                BNE L5419                                 ; ($5422)
                INC $AF                                   ; ($5424)
                INC $AD                                   ; ($5426)
                DEX                                       ; ($5428)
                BNE L5417                                 ; ($5429)
                RTS                                       ; ($542B)
                .byte $EA                                 ; ($542C)
L542D
                JMP L53E0                                 ; ($542D)
L5430
                LDY #$00                                  ; ($5430)
DrawMenuScreen
                LDA $5500,Y                               ; ($5432)
                STA $0428,Y                               ; ($5435)
                LDA $D9                                   ; ($5438)
                STA $D828,Y                               ; ($543A)
                LDA $5528,Y                               ; ($543D)
                STA $04A0,Y                               ; ($5440)
                LDA #$02                                  ; ($5443)
                STA $D8A0,Y                               ; ($5445)
                LDA $5550,Y                               ; ($5448)
                STA $04C8,Y                               ; ($544B)
                LDA #$02                                  ; ($544E)
                STA $D8C8,Y                               ; ($5450)
                LDA $5578,Y                               ; ($5453)
                STA $04F0,Y                               ; ($5456)
                LDA #$02                                  ; ($5459)
                STA $D8F0,Y                               ; ($545B)
                LDA $55A0,Y                               ; ($545E)
                STA $0518,Y                               ; ($5461)
                LDA #$02                                  ; ($5464)
                STA $D918,Y                               ; ($5466)
                LDA $55C8,Y                               ; ($5469)
                STA $0540,Y                               ; ($546C)
                LDA #$02                                  ; ($546F)
                STA $D940,Y                               ; ($5471)
                LDA $55F0,Y                               ; ($5474)
                STA $05E0,Y                               ; ($5477)
                LDA #$07                                  ; ($547A)
                STA $D9E0,Y                               ; ($547C)
                LDA $5618,Y                               ; ($547F)
                STA $0630,Y                               ; ($5482)
                LDA #$0E                                  ; ($5485)
                STA $DA30,Y                               ; ($5487)
                LDA $5640,Y                               ; ($548A)
                STA $0658,Y                               ; ($548D)
                LDA #$0E                                  ; ($5490)
                STA $DA58,Y                               ; ($5492)
                LDA $5668,Y                               ; ($5495)
                STA $0680,Y                               ; ($5498)
                LDA #$0E                                  ; ($549B)
                STA $DA80,Y                               ; ($549D)
                LDA $5690,Y                               ; ($54A0)
                STA $06A8,Y                               ; ($54A3)
                LDA #$0E                                  ; ($54A6)
                STA $DAA8,Y                               ; ($54A8)
                LDA $56B8,Y                               ; ($54AB)
                STA $06D0,Y                               ; ($54AE)
                LDA #$0E                                  ; ($54B1)
                STA $DAD0,Y                               ; ($54B3)
                LDA $56E0,Y                               ; ($54B6)
                STA $06F8,Y                               ; ($54B9)
                LDA #$0E                                  ; ($54BC)
                STA $DAF8,Y                               ; ($54BE)
                LDA $5708,Y                               ; ($54C1)
                STA $0748,Y                               ; ($54C4)
                LDA $53FD                                 ; ($54C7)
                STA $DB48,Y                               ; ($54CA)
                LDA $5730,Y                               ; ($54CD)
                STA $0770,Y                               ; ($54D0)
                LDA $53FE                                 ; ($54D3)
                STA $DB70,Y                               ; ($54D6)
                LDA $5758,Y                               ; ($54D9)
                STA $0798,Y                               ; ($54DC)
                LDA $53FF                                 ; ($54DF)
                STA $DB98,Y                               ; ($54E2)
                INY                                       ; ($54E5)
                CPY #$28                                  ; ($54E6)
                BEQ L54ED                                 ; ($54E8)
                JMP DrawMenuScreen                        ; ($54EA)
L54ED
                RTS                                       ; ($54ED)
                .byte $A9,$0D                             ; ($54EE)
L54F0
                JSR L5400                                 ; ($54F0)
                JMP L53E0                                 ; ($54F3)
                .byte $54,$4C,$E0,$53,$0D,$0D,$0D,$05,$05,$05,$15,$15,$15,$15,$15,$15  ; ($54F6)
                .byte $15,$15,$15,$15,$8F,$91,$84,$92,$92,$15,$85,$88,$91,$84,$15,$93  ; ($5506)
                .byte $8E,$15,$92,$93,$80,$91,$93,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($5516)
                .byte $15,$15,$15,$15,$15,$15,$8C,$80,$98,$83,$80,$98,$15,$87,$80,$92  ; ($5526)
                .byte $15,$89,$94,$8C,$8F,$84,$83,$15,$85,$91,$8E,$8C,$15,$93,$87,$84  ; ($5536)
                .byte $15,$84,$88,$85,$85,$84,$8B,$15,$15,$15,$15,$15,$15,$15,$93,$8E  ; ($5546)
                .byte $96,$84,$91,$15,$80,$8D,$83,$15,$88,$92,$15,$8D,$8E,$96,$15,$8F  ; ($5556)
                .byte $80,$91,$80,$82,$87,$94,$93,$88,$8D,$86,$15,$93,$8E,$15,$15,$15  ; ($5566)
                .byte $15,$15,$15,$15,$15,$15,$87,$84,$91,$15,$83,$91,$8E,$8F,$15,$8F  ; ($5576)
                .byte $8E,$88,$8D,$93,$9A,$15,$85,$8E,$8B,$8B,$8E,$96,$15,$87,$84,$91  ; ($5586)
                .byte $15,$80,$8D,$83,$15,$86,$84,$93,$15,$15,$15,$15,$15,$15,$93,$87  ; ($5596)
                .byte $84,$91,$84,$15,$85,$88,$91,$92,$93,$9D,$15,$96,$80,$93,$82,$87  ; ($55A6)
                .byte $15,$8E,$94,$93,$15,$85,$8E,$91,$15,$93,$87,$84,$15,$15,$15,$15  ; ($55B6)
                .byte $15,$15,$15,$15,$15,$15,$8F,$8E,$8B,$88,$82,$84,$15,$80,$8D,$83  ; ($55C6)
                .byte $15,$91,$8E,$80,$83,$15,$81,$8B,$8E,$82,$8A,$92,$9A,$15,$15,$15  ; ($55D6)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$89,$8E  ; ($55E6)
                .byte $98,$92,$93,$88,$82,$8A,$15,$82,$8E,$8D,$93,$91,$8E,$8B,$92,$15  ; ($55F6)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($5606)
                .byte $15,$15,$15,$15,$15,$15,$85,$8E,$91,$96,$80,$91,$83,$15,$15,$15  ; ($5616)
                .byte $15,$15,$15,$80,$82,$82,$84,$8B,$84,$91,$80,$93,$84,$15,$15,$15  ; ($5626)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$81,$80  ; ($5636)
                .byte $82,$8A,$96,$80,$91,$83,$15,$15,$15,$15,$15,$91,$84,$95,$84,$91  ; ($5646)
                .byte $92,$84,$15,$81,$91,$80,$8A,$84,$15,$15,$15,$15,$15,$15,$15,$15  ; ($5656)
                .byte $15,$15,$15,$15,$15,$15,$8B,$84,$85,$93,$15,$15,$15,$15,$15,$15  ; ($5666)
                .byte $15,$15,$15,$92,$93,$84,$84,$91,$15,$8B,$84,$85,$93,$15,$15,$15  ; ($5676)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$91,$88  ; ($5686)
                .byte $86,$87,$93,$15,$15,$15,$15,$15,$15,$15,$15,$92,$93,$84,$84,$91  ; ($5696)
                .byte $15,$91,$88,$86,$87,$93,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($56A6)
                .byte $15,$15,$15,$15,$15,$15,$85,$88,$91,$84,$15,$15,$15,$15,$15,$15  ; ($56B6)
                .byte $15,$15,$15,$92,$87,$8E,$8E,$93,$15,$15,$15,$15,$15,$15,$15,$15  ; ($56C6)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$91,$84  ; ($56D6)
                .byte $94,$84,$91,$92,$84,$A1,$85,$88,$91,$84,$15,$87,$80,$8D,$83,$81  ; ($56E6)
                .byte $91,$80,$8A,$84,$15,$93,$94,$91,$8D,$15,$15,$15,$15,$15,$15,$15  ; ($56F6)
                .byte $15,$15,$15,$15,$15,$15,$93,$87,$84,$8C,$84,$15,$93,$94,$8D,$84  ; ($5706)
                .byte $15,$8E,$8D,$8B,$98,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($5716)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$92,$8E  ; ($5726)
                .byte $94,$8D,$83,$15,$84,$85,$85,$84,$82,$93,$92,$15,$8E,$8D,$8B,$98  ; ($5736)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($5746)
                .byte $15,$15,$15,$15,$15,$15,$81,$8E,$93,$87,$15,$15,$15,$15,$15,$15  ; ($5756)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($5766)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($5776)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($5786)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$FF,$00,$FF,$00,$FF  ; ($5796)
                .byte $00,$FF,$0F,$2F,$00,$FF,$0C,$FF,$2F,$FF,$00,$FF,$00,$FF,$00,$FF  ; ($57A6)
                .byte $00,$FD,$00,$FF,$00,$FF,$00,$FF,$24,$FF,$00,$FF,$00,$FF,$1F,$0F  ; ($57B6)
                .byte $09,$00,$20,$FF,$00,$FF,$00,$FF,$0C,$FF,$00,$FF,$00,$FF,$00,$FF  ; ($57C6)
                .byte $00,$FF,$0F,$FF,$00,$FF,$00,$FF,$A0,$FF,$00,$FF,$00,$FF,$00,$2F  ; ($57D6)
                .byte $00,$FF,$08,$6F,$00,$0F,$0F,$FF,$2E,$FF,$08,$FF,$00,$FF,$00,$FF  ; ($57E6)
                .byte $00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF  ; ($57F6)
L5800
                SEI                                       ; ($5800)
                LDA #$8A                                  ; ($5801)
                STA IRQ_vector_low                        ; ($5803)
                LDA #$51                                  ; ($5806)
                STA IRQ_vector_high                       ; ($5808)
                LDA #$98                                  ; ($580B)
                STA VIC_ScreenControlRegister1            ; ($580D)
                LDA #$08                                  ; ($5810)
                STA VIC_ScreenControlRegister2            ; ($5812)
                LDA #$00                                  ; ($5815)
                STA VIC_BackgroundColor                   ; ($5817)
                STA VIC_BackgroundColor1                  ; ($581A)
                LDA VIC_MemorySetupRegister               ; ($581D)
                AND #$F0                                  ; ($5820)
                ORA #$0C                                  ; ($5822)
                STA VIC_MemorySetupRegister               ; ($5824)
                LDA #$00                                  ; ($5827)
                STA VIC_SpriteEnableRegister              ; ($5829)
                NOP                                       ; ($582C)
                NOP                                       ; ($582D)
                NOP                                       ; ($582E)
                NOP                                       ; ($582F)
                NOP                                       ; ($5830)
                NOP                                       ; ($5831)
                NOP                                       ; ($5832)
                NOP                                       ; ($5833)
                NOP                                       ; ($5834)
                NOP                                       ; ($5835)
                NOP                                       ; ($5836)
                NOP                                       ; ($5837)
                NOP                                       ; ($5838)
                NOP                                       ; ($5839)
                NOP                                       ; ($583A)
                NOP                                       ; ($583B)
                NOP                                       ; ($583C)
                JSR L5400                                 ; ($583D)
                LDA #$12                                  ; ($5840)
                STA $1006                                 ; ($5842)
                LDA #$25                                  ; ($5845)
                STA $1002                                 ; ($5847)
                JSR L1000                                 ; ($584A)
                NOP                                       ; ($584D)
                NOP                                       ; ($584E)
                NOP                                       ; ($584F)
                LDA #$80                                  ; ($5850)
                STA $FC                                   ; ($5852)
                LDA #$00                                  ; ($5854)
                STA $FB                                   ; ($5856)
                LDX #$00                                  ; ($5858)
L585A
                LDA $5880,X                               ; ($585A)
                STA $FE                                   ; ($585D)
                LDA $5890,X                               ; ($585F)
                STA $FD                                   ; ($5862)
                CLC                                       ; ($5864)
                LDA $FB                                   ; ($5865)
                ADC #$28                                  ; ($5867)
                STA $FB                                   ; ($5869)
                LDA $FC                                   ; ($586B)
                ADC #$00                                  ; ($586D)
                STA $FC                                   ; ($586F)
                JSR L58C0                                 ; ($5871)
                INX                                       ; ($5874)
                CPX #$0A                                  ; ($5875)
                BNE L585A                                 ; ($5877)
L5879
                JMP L5879                                 ; ($5879)
                .byte $FF,$00,$FF,$00,$04,$04,$05,$05,$05,$06,$06,$06,$06,$06,$04,$04  ; ($587C)
                .byte $04,$04,$04,$04,$78,$F0,$40,$90,$B8,$08,$30,$58,$A8,$F8,$04,$04  ; ($588C)
                .byte $04,$04,$04,$04,$A2,$04,$A0,$18,$4C,$B9,$54,$A0,$00,$A9,$15,$91  ; ($589C)
                .byte $AE,$A9,$00,$91,$AC,$C8,$D0,$F5,$E6,$AF,$E6,$AD,$CA,$D0,$EC,$EA  ; ($58AC)
                .byte $A0,$00,$B9,$00                     ; ($58BC)
L58C0
                LDY #$00                                  ; ($58C0)
L58C2
                LDA ($FB),Y                               ; ($58C2)
                STA ($FD),Y                               ; ($58C4)
                CMP #$15                                  ; ($58C6)
                BEQ L58D0                                 ; ($58C8)
                JSR init_sid_voice1_sustained             ; ($58CA)
                JMP L58E8                                 ; ($58CD)
L58D0
                LDA #$00                                  ; ($58D0)
                STA SID_Voice1_Control                    ; ($58D2)
                JMP L58E8                                 ; ($58D5)
                .byte $4C,$E8,$58,$4C,$E8,$58,$4C,$E8,$58,$4C,$E8,$58,$4C,$E8,$58,$EA  ; ($58D8)
L58E8
                TYA                                       ; ($58E8)
                PHA                                       ; ($58E9)
                TXA                                       ; ($58EA)
                PHA                                       ; ($58EB)
                LDY #$3F                                  ; ($58EC)
L58EE
                LDX #$FF                                  ; ($58EE)
L58F0
                DEX                                       ; ($58F0)
                BNE L58F0                                 ; ($58F1)
                DEY                                       ; ($58F3)
                BNE L58EE                                 ; ($58F4)
                PLA                                       ; ($58F6)
                TAX                                       ; ($58F7)
                PLA                                       ; ($58F8)
                TAY                                       ; ($58F9)
                INY                                       ; ($58FA)
                CPY #$28                                  ; ($58FB)
                BNE L58C2                                 ; ($58FD)
                RTS                                       ; ($58FF)
                .byte $DF,$02,$FF,$00,$FF,$FF,$FF,$00,$FF,$08,$FF,$FF,$FF,$FF,$FF,$00  ; ($5900)
                .byte $FF,$00,$FF,$00,$FF,$FF,$FF,$FF,$FF,$02,$FF,$00,$FF,$00,$FF,$00  ; ($5910)
                .byte $FF,$08,$FF,$00,$FF,$20,$FF,$00,$FF,$F3,$FF,$00,$FF,$00,$FF,$00  ; ($5920)
                .byte $FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00  ; ($5930)
                .byte $FF,$00,$FF,$00,$FF,$FF,$FF,$FF,$FF,$00,$FF,$00,$FF,$00,$FF,$00  ; ($5940)
                .byte $FF,$00,$FF,$00,$FF,$20,$FF,$00,$FF,$17,$FF,$00,$FF,$00,$5F,$00  ; ($5950)
                .byte $FF,$08,$FF,$00,$FF,$DF,$FF,$00,$FF,$B1,$FF,$FF,$FF,$00,$FF,$00  ; ($5960)
                .byte $FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00  ; ($5970)
                .byte $00,$FD,$00,$FF,$00,$0F,$00,$FF,$23,$FF,$00,$1F,$00,$0E,$0F,$FF  ; ($5980)
                .byte $00,$FF,$00,$FF,$00,$0F,$00,$0F,$00,$FF,$00,$FF,$00,$FF,$0F,$FF  ; ($5990)
                .byte $1F,$FF,$00,$FF,$00,$FF,$00,$FF,$0F,$2F,$00,$FF,$0C,$FF,$2F,$FF  ; ($59A0)
                .byte $00,$FF,$00,$FF,$00,$FF,$00,$FD,$00,$FF,$00,$FF,$00,$FF,$24,$FF  ; ($59B0)
                .byte $00,$FF,$00,$FF,$1F,$0F,$09,$00,$20,$FF,$00,$FF,$00,$FF,$0C,$FF  ; ($59C0)
                .byte $00,$FF,$00,$FF,$00,$FF,$00,$FF,$0F,$FF,$00,$FF,$00,$FF,$A0,$FF  ; ($59D0)
                .byte $00,$FF,$00,$FF,$00,$2F,$00,$FF,$00,$6F,$00,$0F,$0F,$FF,$2E,$FF  ; ($59E0)
                .byte $00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF  ; ($59F0)
L5A00
                JSR init_game_systems                     ; ($5A00)
                JSR L7A40                                 ; ($5A03)
                JSR copy_memory_blocks                    ; ($5A06)
                JSR setup_game_irq                        ; ($5A09)
                JSR randomize_game_state                  ; ($5A0C)
                JSR L5B25                                 ; ($5A0F)
                NOP                                       ; ($5A12)
                NOP                                       ; ($5A13)
                NOP                                       ; ($5A14)
                NOP                                       ; ($5A15)
                NOP                                       ; ($5A16)
                NOP                                       ; ($5A17)
                NOP                                       ; ($5A18)
                NOP                                       ; ($5A19)
                NOP                                       ; ($5A1A)
                NOP                                       ; ($5A1B)
                NOP                                       ; ($5A1C)
                NOP                                       ; ($5A1D)
                NOP                                       ; ($5A1E)
                NOP                                       ; ($5A1F)
                NOP                                       ; ($5A20)
                NOP                                       ; ($5A21)
                NOP                                       ; ($5A22)
                NOP                                       ; ($5A23)
                NOP                                       ; ($5A24)
                NOP                                       ; ($5A25)
                NOP                                       ; ($5A26)
                NOP                                       ; ($5A27)
                NOP                                       ; ($5A28)
                NOP                                       ; ($5A29)
                NOP                                       ; ($5A2A)
                NOP                                       ; ($5A2B)
                NOP                                       ; ($5A2C)
                NOP                                       ; ($5A2D)
                NOP                                       ; ($5A2E)
                NOP                                       ; ($5A2F)
L5A30
                LDX $0344                                 ; ($5A30)
                DEX                                       ; ($5A33)
                BNE L5A4C                                 ; ($5A34)
                LDX #$10                                  ; ($5A36)
                LDY $0345                                 ; ($5A38)
                DEY                                       ; ($5A3B)
                BNE L5A52                                 ; ($5A3C)
                LDY #$02                                  ; ($5A3E)
                STY $0345                                 ; ($5A40)
                STX $0344                                 ; ($5A43)
                JMP L5A60                                 ; ($5A46)
                .byte $8C,$45,$03                         ; ($5A49)
L5A4C
                STX $0344                                 ; ($5A4C)
                JMP Sub_MainGameLoop                      ; ($5A4F)
L5A52
                STY $0345                                 ; ($5A52)
                JMP Sub_SteeringWheel                     ; ($5A55)
                .byte $EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA     ; ($5A58)
L5A60
                JSR sub_Joystick                          ; ($5A60)
                JMP Sub_CarControlRoutine                 ; ($5A63)
Sub_MainGameLoop
                JSR Sub_ShowHideSprites                   ; ($5A66)
                JSR Sub_CarDamage                         ; ($5A69)
                JSR render_3d_view                        ; ($5A6C)
                JSR calculate_proximity_beep              ; ($5A6F)
                JSR update_mayday_ai                      ; ($5A72)
                JSR update_entities_and_clear_flags       ; ($5A75)
                JSR MapLoadTempLow                        ; ($5A78)
                JSR handle_collision_damage               ; ($5A7B)
                LDA EndGameFlag                           ; ($5A7E) #00 Continue / #80 Mayday found / Ends game #27
                BEQ L5A8D                                 ; ($5A81)
                CMP #$80                                  ; ($5A83)
                BEQ L5A8A                                 ; ($5A85)
                JMP reset_stack_and_init                  ; ($5A87)
L5A8A
                JMP reset_to_alternate_init               ; ($5A8A)
L5A8D
                JMP L5A30                                 ; ($5A8D)
                .byte $30,$5A,$EA,$EA,$EA,$30,$5A,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA  ; ($5A90)
V_LeftRightInput
                .byte $00                                 ; ($5AA0)
V_Direction90Deg
                .byte $01                                 ; ($5AA1)
V_HandbrakeTurnFlag
                .byte $00                                 ; ($5AA2)
V_PostHandbrakeDirection
                .byte $02,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA  ; ($5AA3)
Sub_CarControlRoutine
                LDX V_HandbrakeTurnFlag                   ; ($5AB0)
                BEQ L5AE0                                 ; ($5AB3)
                LDY V_PostHandbrakeDirection              ; ($5AB5)
                DEY                                       ; ($5AB8)
                BPL L5ABD                                 ; ($5AB9)
                LDY #$07                                  ; ($5ABB)
L5ABD
                DEX                                       ; ($5ABD)
                BNE L5AC6                                 ; ($5ABE)
                STX V_ForwardReverse                      ; ($5AC0) #00 Forward / #08 Reverse
                STY V_CarFacingDirection                  ; ($5AC3) 00 N / 01 NE / 02 E / 03 SE / 04 S / 05 SW / 06 W / 07 NW
L5AC6
                STX V_HandbrakeTurnFlag                   ; ($5AC6)
                STY V_PostHandbrakeDirection              ; ($5AC9)
                LDA $03A8,Y                               ; ($5ACC)
                STA $AE                                   ; ($5ACF)
                CLC                                       ; ($5AD1)
                LDY #$BD                                  ; ($5AD2)
                LDX #$AB                                  ; ($5AD4)
                LDA #$08                                  ; ($5AD6)
                JSR Sub_UpdateSpritePosition              ; ($5AD8)
                JMP configure_effects_and_start           ; ($5ADB)
                .byte $EA,$EA                             ; ($5ADE)
L5AE0
                LDA $FE                                   ; ($5AE0)
                BNE Sub_LeftRightInput                    ; ($5AE2)
                STA V_LeftRightInput                      ; ($5AE4)
                LDA V_CarFacingDirection                  ; ($5AE7) 00 N / 01 NE / 02 E / 03 SE / 04 S / 05 SW / 06 W / 07 NW
                AND #$01                                  ; ($5AEA)
                EOR #$01                                  ; ($5AEC)
                STA V_Direction90Deg                      ; ($5AEE)
                JMP L5B2A                                 ; ($5AF1)
Sub_LeftRightInput
                CMP V_LeftRightInput                      ; ($5AF4)
                BNE L5B04                                 ; ($5AF7)
                DEC V_Direction90Deg                      ; ($5AF9)
                LDA V_Direction90Deg                      ; ($5AFC)
                BMI Sub_SteeringWheel                     ; ($5AFF)
                NOP                                       ; ($5B01)
                LDA $FE                                   ; ($5B02)
L5B04
                BPL L5B16                                 ; ($5B04)
                LDX V_CarFacingDirection                  ; ($5B06) 00 N / 01 NE / 02 E / 03 SE / 04 S / 05 SW / 06 W / 07 NW
                DEX                                       ; ($5B09)
                CPX #$FF                                  ; ($5B0A)
                BNE Sub_Update_V_CarFacingDirection       ; ($5B0C)
                LDX #$07                                  ; ($5B0E)
Sub_Update_V_CarFacingDirection
                STX V_CarFacingDirection                  ; ($5B10) 00 N / 01 NE / 02 E / 03 SE / 04 S / 05 SW / 06 W / 07 NW
                JMP L5B25                                 ; ($5B13)
L5B16
                LDX V_CarFacingDirection                  ; ($5B16) 00 N / 01 NE / 02 E / 03 SE / 04 S / 05 SW / 06 W / 07 NW
                INX                                       ; ($5B19)
                CPX #$08                                  ; ($5B1A)
                BNE Sub_Update_V_CarFacingDirection       ; ($5B1C)
                LDX #$00                                  ; ($5B1E)
                JMP Sub_Update_V_CarFacingDirection       ; ($5B20)
                .byte $EA,$EA                             ; ($5B23)
L5B25
                LDA $FE                                   ; ($5B25)
                STA V_LeftRightInput                      ; ($5B27)
L5B2A
                LDX V_CarFacingDirection                  ; ($5B2A) 00 N / 01 NE / 02 E / 03 SE / 04 S / 05 SW / 06 W / 07 NW
                LDA $03A8,X                               ; ($5B2D)
                STA $AE                                   ; ($5B30)
                CLC                                       ; ($5B32)
                LDY #$BD                                  ; ($5B33)
                LDX #$AB                                  ; ($5B35)
                LDA #$08                                  ; ($5B37)
                JSR Sub_UpdateSpritePosition              ; ($5B39)
                NOP                                       ; ($5B3C)
                NOP                                       ; ($5B3D)
                NOP                                       ; ($5B3E)
                NOP                                       ; ($5B3F)
Sub_SteeringWheel
                LDA $FE                                   ; ($5B40)
                BEQ L5B51                                 ; ($5B42)
                LDA VIC_SpritePointer5                    ; ($5B44)
                EOR #$02                                  ; ($5B47)
                STA VIC_SpritePointer5                    ; ($5B49)
                TAY                                       ; ($5B4C)
                DEY                                       ; ($5B4D)
                STY VIC_SpritePointer4                    ; ($5B4E)
L5B51
                JSR sub_Joystick                          ; ($5B51)
                LDA V_ForwardReverse                      ; ($5B54) #00 Forward / #08 Reverse
                BNE L5B89                                 ; ($5B57)
                LDA $FD                                   ; ($5B59)
                BEQ L5B86                                 ; ($5B5B)
                BPL L5B6F                                 ; ($5B5D)
L5B5F
                DEC V_CarSpeed                            ; ($5B5F)
                LDA V_CarSpeed                            ; ($5B62)
                BNE L5B86                                 ; ($5B65)
                LDA #$01                                  ; ($5B67)
                STA V_CarSpeed                            ; ($5B69)
                JMP L5B86                                 ; ($5B6C)
L5B6F
                INC V_CarSpeed                            ; ($5B6F)
                LDA V_CarSpeed                            ; ($5B72)
                CMP #$40                                  ; ($5B75)
                BNE L5B86                                 ; ($5B77)
                LDA V_ForwardReverse                      ; ($5B79) #00 Forward / #08 Reverse
                EOR #$08                                  ; ($5B7C)
                STA V_ForwardReverse                      ; ($5B7E) #00 Forward / #08 Reverse
                LDA #$3F                                  ; ($5B81)
                STA V_CarSpeed                            ; ($5B83)
L5B86
                JMP L5B92                                 ; ($5B86)
L5B89
                LDA $FD                                   ; ($5B89)
                BEQ L5B86                                 ; ($5B8B)
                BMI L5B6F                                 ; ($5B8D)
                JMP L5B5F                                 ; ($5B8F)
L5B92
                LDA $02                                   ; ($5B92)
                BEQ L5BB8                                 ; ($5B94)
                LDA V_HandbrakeTurnFlag                   ; ($5B96)
                BNE L5BB8                                 ; ($5B99)
                LDA V_ForwardReverse                      ; ($5B9B) #00 Forward / #08 Reverse
                BEQ L5BB5                                 ; ($5B9E)
                LDA V_CarSpeed                            ; ($5BA0)
                CMP #$15                                  ; ($5BA3)
                BCS L5BB5                                 ; ($5BA5)
                LDA #$04                                  ; ($5BA7)
                STA V_HandbrakeTurnFlag                   ; ($5BA9)
                LDA V_CarFacingDirection                  ; ($5BAC) 00 N / 01 NE / 02 E / 03 SE / 04 S / 05 SW / 06 W / 07 NW
                STA V_PostHandbrakeDirection              ; ($5BAF)
                JMP Sub_MainGameLoop                      ; ($5BB2)
L5BB5
                JSR fire_player_bullet                    ; ($5BB5)
L5BB8
                JMP Sub_MainGameLoop                      ; ($5BB8)
                .byte $EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA  ; ($5BBB)
                .byte $EA,$EA,$EA,$84,$AE,$18,$A0,$BD,$A2,$AB,$A9,$08,$20,$00,$42,$4C  ; ($5BCB)
                .byte $66,$5A,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA  ; ($5BDB)
                .byte $EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA  ; ($5BEB)
                .byte $EA,$EA,$EA,$EA,$EA                 ; ($5BFB)
L5C00
                LDA V_CarFacingDirection                  ; ($5C00) 00 N / 01 NE / 02 E / 03 SE / 04 S / 05 SW / 06 W / 07 NW
                ORA V_ForwardReverse                      ; ($5C03) #00 Forward / #08 Reverse
                TAX                                       ; ($5C06)
                LDA $0370,X                               ; ($5C07)
                BEQ L5C53                                 ; ($5C0A)
                BMI L5C32                                 ; ($5C0C)
                LDY V_HorzRasterScrollLoop                ; ($5C0E)
                INY                                       ; ($5C11)
                INY                                       ; ($5C12)
                CPY #$08                                  ; ($5C13)
                BNE L5C1E                                 ; ($5C15)
                LDA #$01                                  ; ($5C17)
                STA V_ScrollCounter                       ; ($5C19)
                LDY #$00                                  ; ($5C1C)
L5C1E
                STY V_HorzRasterScrollLoop                ; ($5C1E)
                SEC                                       ; ($5C21)
                LDA V_CarPosHorizontalLow                 ; ($5C22)
                SBC #$02                                  ; ($5C25)
                STA V_CarPosHorizontalLow                 ; ($5C27)
                BCS L5C2F                                 ; ($5C2A)
                DEC V_CarPosHorizontalHigh                ; ($5C2C)
L5C2F
                JMP L5C53                                 ; ($5C2F)
L5C32
                LDY V_HorzRasterScrollLoop                ; ($5C32)
                DEY                                       ; ($5C35)
                DEY                                       ; ($5C36)
                CPY #$FE                                  ; ($5C37)
                BNE L5C42                                 ; ($5C39)
                LDA #$01                                  ; ($5C3B)
                STA V_ScrollCounter                       ; ($5C3D)
                LDY #$06                                  ; ($5C40)
L5C42
                STY V_HorzRasterScrollLoop                ; ($5C42)
                CLC                                       ; ($5C45)
                LDA V_CarPosHorizontalLow                 ; ($5C46)
                ADC #$02                                  ; ($5C49)
                STA V_CarPosHorizontalLow                 ; ($5C4B)
                BCC L5C53                                 ; ($5C4E)
                INC V_CarPosHorizontalHigh                ; ($5C50)
L5C53
                LDA $0380,X                               ; ($5C53)
                BEQ L5CAD                                 ; ($5C56)
                BMI L5C85                                 ; ($5C58)
                LDY $033F                                 ; ($5C5A)
                INY                                       ; ($5C5D)
                INY                                       ; ($5C5E)
                CPY #$03                                  ; ($5C5F)
                BNE L5C6B                                 ; ($5C61)
                LDA V_ScrollCounter                       ; ($5C63)
                ORA #$02                                  ; ($5C66)
                STA V_ScrollCounter                       ; ($5C68)
L5C6B
                CPY #$09                                  ; ($5C6B)
                BNE L5C71                                 ; ($5C6D)
                LDY #$01                                  ; ($5C6F)
L5C71
                STY $033F                                 ; ($5C71)
                SEC                                       ; ($5C74)
                LDA V_CarPositionVertLow                  ; ($5C75)
                SBC #$02                                  ; ($5C78)
                STA V_CarPositionVertLow                  ; ($5C7A)
                BCS L5C82                                 ; ($5C7D)
                DEC V_CarPositionVertHigh                 ; ($5C7F)
L5C82
                JMP L5CAD                                 ; ($5C82)
L5C85
                LDY $033F                                 ; ($5C85)
                DEY                                       ; ($5C88)
                DEY                                       ; ($5C89)
                CPY #$01                                  ; ($5C8A)
                BNE L5C96                                 ; ($5C8C)
                LDA V_ScrollCounter                       ; ($5C8E)
                ORA #$02                                  ; ($5C91)
                STA V_ScrollCounter                       ; ($5C93)
L5C96
                CPY #$FF                                  ; ($5C96)
                BNE L5C9C                                 ; ($5C98)
                LDY #$07                                  ; ($5C9A)
L5C9C
                STY $033F                                 ; ($5C9C)
                CLC                                       ; ($5C9F)
                LDA V_CarPositionVertLow                  ; ($5CA0)
                ADC #$02                                  ; ($5CA3)
                STA V_CarPositionVertLow                  ; ($5CA5)
                BCC L5CAD                                 ; ($5CA8)
                INC V_CarPositionVertHigh                 ; ($5CAA)
L5CAD
                LDA #$00                                  ; ($5CAD)
                STA $0341                                 ; ($5CAF)
                STA V_RegisterCollision                   ; ($5CB2)
                LDA V_ScrollCounter                       ; ($5CB5)
                BNE Sub_LoadNewMapRow                     ; ($5CB8)
                RTS                                       ; ($5CBA)
                .byte $60,$60,$EA                         ; ($5CBB)
Sub_LoadNewMapRow
                LDA V_ScrollCounter                       ; ($5CBE)
                AND #$01                                  ; ($5CC1)
                BEQ L5D08                                 ; ($5CC3)
                LDA V_CarFacingDirection                  ; ($5CC5) 00 N / 01 NE / 02 E / 03 SE / 04 S / 05 SW / 06 W / 07 NW
                ORA V_ForwardReverse                      ; ($5CC8) #00 Forward / #08 Reverse
                TAX                                       ; ($5CCB)
                LDA $0350,X                               ; ($5CCC)
                BMI L5CED                                 ; ($5CCF)
                CLC                                       ; ($5CD1)
                ADC V_MapXposition                        ; ($5CD2)
                STA V_MapXposition                        ; ($5CD5)
                BCC L5CDD                                 ; ($5CD8)
                INC V_MapYposition                        ; ($5CDA)
L5CDD
                LDY vertical_scroll_delta                 ; ($5CDD)
                DEY                                       ; ($5CE0)
                CPY #$FE                                  ; ($5CE1)
                BNE L5CE7                                 ; ($5CE3)
                LDY #$01                                  ; ($5CE5)
L5CE7
                STY vertical_scroll_delta                 ; ($5CE7)
                JMP L5D08                                 ; ($5CEA)
L5CED
                SEC                                       ; ($5CED)
                LDA V_MapXposition                        ; ($5CEE)
                SBC #$01                                  ; ($5CF1)
                STA V_MapXposition                        ; ($5CF3)
                BCS L5CFB                                 ; ($5CF6)
                DEC V_MapYposition                        ; ($5CF8)
L5CFB
                LDY vertical_scroll_delta                 ; ($5CFB)
                INY                                       ; ($5CFE)
                CPY #$02                                  ; ($5CFF)
                BNE L5D05                                 ; ($5D01)
                LDY #$FF                                  ; ($5D03)
L5D05
                STY vertical_scroll_delta                 ; ($5D05)
L5D08
                LDA V_ScrollCounter                       ; ($5D08)
                AND #$02                                  ; ($5D0B)
                BEQ L5D52                                 ; ($5D0D)
                LDA V_CarFacingDirection                  ; ($5D0F) 00 N / 01 NE / 02 E / 03 SE / 04 S / 05 SW / 06 W / 07 NW
                ORA V_ForwardReverse                      ; ($5D12) #00 Forward / #08 Reverse
                TAX                                       ; ($5D15)
                LDA $0360,X                               ; ($5D16)
                BMI L5D37                                 ; ($5D19)
                CLC                                       ; ($5D1B)
                ADC V_MapXposition                        ; ($5D1C)
                STA V_MapXposition                        ; ($5D1F)
                BCC L5D27                                 ; ($5D22)
                INC V_MapYposition                        ; ($5D24)
L5D27
                LDY horizontal_scroll_delta               ; ($5D27)
                DEY                                       ; ($5D2A)
                CPY #$FE                                  ; ($5D2B)
                BNE L5D31                                 ; ($5D2D)
                LDY #$01                                  ; ($5D2F)
L5D31
                STY horizontal_scroll_delta               ; ($5D31)
                JMP L5D52                                 ; ($5D34)
L5D37
                SEC                                       ; ($5D37)
                LDA V_MapXposition                        ; ($5D38)
                SBC #$7E                                  ; ($5D3B)
                STA V_MapXposition                        ; ($5D3D)
                BCS L5D45                                 ; ($5D40)
                DEC V_MapYposition                        ; ($5D42)
L5D45
                LDY horizontal_scroll_delta               ; ($5D45)
                INY                                       ; ($5D48)
                CPY #$02                                  ; ($5D49)
                BNE L5D4F                                 ; ($5D4B)
                LDY #$FF                                  ; ($5D4D)
L5D4F
                STY horizontal_scroll_delta               ; ($5D4F)
L5D52
                LDX #$0D                                  ; ($5D52)
                LDA #$DF                                  ; ($5D54)
                STA $5D70                                 ; ($5D56)
                LDA #$05                                  ; ($5D59)
                STA $5D71                                 ; ($5D5B)
                LDA V_MapXposition                        ; ($5D5E)
                STA $5D6D                                 ; ($5D61)
                LDA V_MapYposition                        ; ($5D64)
                STA $5D6E                                 ; ($5D67)
L5D6A
                LDY #$28                                  ; ($5D6A)
Loop_MapScreenUpdate
                LDA $A3D1,Y                               ; ($5D6C)
                STA V_MapScreen,Y                         ; ($5D6F)
                DEY                                       ; ($5D72)
                BNE Loop_MapScreenUpdate                  ; ($5D73)
                CLC                                       ; ($5D75)
                LDA $5D6D                                 ; ($5D76)
                ADC #$7E                                  ; ($5D79)
                STA $5D6D                                 ; ($5D7B)
                BCC L5D83                                 ; ($5D7E)
                INC $5D6E                                 ; ($5D80)
L5D83
                CLC                                       ; ($5D83)
                LDA $5D70                                 ; ($5D84)
                ADC #$28                                  ; ($5D87)
                STA $5D70                                 ; ($5D89)
                BCC L5D91                                 ; ($5D8C)
                INC $5D71                                 ; ($5D8E)
L5D91
                DEX                                       ; ($5D91)
                BNE L5D6A                                 ; ($5D92)
                LDA #$00                                  ; ($5D94)
                STA V_ScrollCounter                       ; ($5D96)
                INC view_update_flag                      ; ($5D99)
                RTS                                       ; ($5D9C)
                .byte $60,$60,$60                         ; ($5D9D)
L5DA0
                LDA $02FF                                 ; ($5DA0)
                BNE L5DB9                                 ; ($5DA3)
                LDX V_MapDrawSpeed                        ; ($5DA5)
                DEX                                       ; ($5DA8)
                BPL L5DB6                                 ; ($5DA9)
                LDA V_CarSpeed                            ; ($5DAB)
                LSR A                                     ; ($5DAE)
                LSR A                                     ; ($5DAF)
                STA V_MapDrawSpeed                        ; ($5DB0)
                JMP L5DBA                                 ; ($5DB3)
L5DB6
                STX V_MapDrawSpeed                        ; ($5DB6)
L5DB9
                RTS                                       ; ($5DB9)
L5DBA
                LDA V_CarFacingDirection                  ; ($5DBA) 00 N / 01 NE / 02 E / 03 SE / 04 S / 05 SW / 06 W / 07 NW
                STA V_CarFacingDirectionTemp              ; ($5DBD)
                JSR L5C00                                 ; ($5DC0)
                RTS                                       ; ($5DC3)
                .byte $60,$D2,$5D,$D0,$08,$A0,$08,$8C,$D2,$5D,$20,$00,$4C,$60,$02,$FF  ; ($5DC4)
                .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF  ; ($5DD4)
                .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$48,$A9,$00,$90  ; ($5DE4)
                .byte $02,$69,$00,$85,$02,$86,$AF,$84,$AC,$68,$AA,$48,$4C,$50,$4F,$38  ; ($5DF4)
                .byte $2A,$C8,$C8,$CA,$D0,$FA,$85,$FB,$84,$FC,$68,$48,$AA,$A5,$AE,$9D  ; ($5E04)
                .byte $F7,$07,$A4,$FC,$A5,$AF,$99,$FE,$CF,$C8,$A5,$AC,$99,$FE,$CF,$A5  ; ($5E14)
                .byte $02,$F0,$08,$AD,$10,$D0,$05,$FB,$4C,$36,$5E,$A9,$FF,$45,$FB,$2D  ; ($5E24)
                .byte $10,$D0,$8D,$10,$D0,$A5,$FB,$0D,$15,$D0,$8D,$15,$D0,$68,$60,$01  ; ($5E34)
                .byte $01,$FF,$FF,$FF,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$A9,$04,$85,$FE  ; ($5E44)
                .byte $A9,$D8,$85,$FC,$A9,$00,$85,$FD,$85,$FB,$A9,$8D,$85,$AF,$A9,$20  ; ($5E54)
                .byte $85,$AE,$A9,$91,$85,$AD,$A9,$08,$85,$AC,$A0,$00,$B1,$AE,$91,$FD  ; ($5E64)
                .byte $B1,$AC,$91,$FB,$C8,$F0,$07,$C0,$E8,$D0,$F1,$4C,$4C,$50,$4F,$FE  ; ($5E74)
                .byte $E6,$FC,$E6,$AF,$E6,$AD,$4C,$6E,$5E,$A5,$FE,$C9,$07,$D0,$DD,$60  ; ($5E84)
                .byte $60,$0F,$00,$0F,$00,$FF,$00,$FF,$00,$FF,$0E,$FF,$1F,$FF,$00,$FF  ; ($5E94)
                .byte $00,$FF,$00,$FF,$0F,$2F,$00,$FF,$0C,$FF,$27,$FF,$00,$FF,$00,$FF  ; ($5EA4)
                .byte $00,$FF,$00,$FD,$00,$FF,$00,$FF,$00,$FF,$24,$FF,$4C,$50,$4F,$FF  ; ($5EB4)
                .byte $1F,$0D,$09,$00,$20,$FF,$00,$FF,$00,$FF,$0C,$FF,$00,$FF,$00,$FF  ; ($5EC4)
                .byte $00,$FF,$00,$FF,$0F,$FF,$00,$FF,$00,$FF,$A0,$FF,$00,$FF,$00,$FF  ; ($5ED4)
                .byte $00,$2F,$00,$FF,$00,$6F,$00,$0F,$0F,$FF,$2E,$FF,$00,$FF,$00,$FF  ; ($5EE4)
                .byte $00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$FF,$02,$FF,$00  ; ($5EF4)
                .byte $FF,$FF,$FF,$00,$FF,$00,$FF,$FF,$FF,$FF,$FF,$00,$FF,$00,$FF,$00  ; ($5F04)
                .byte $FF,$FF,$FF,$FF,$FF,$02,$FF,$00,$FF,$00,$FF,$60,$FF,$00,$FF,$00  ; ($5F14)
                .byte $FF,$20,$FF,$00,$F7,$F3,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00  ; ($5F24)
                .byte $FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00  ; ($5F34)
                .byte $FF,$FF,$FF,$FF,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00  ; ($5F44)
                .byte $FF,$20,$FF,$00,$FF,$17,$FF,$00,$FF,$00,$5F,$00,$FF,$00,$FF,$00  ; ($5F54)
                .byte $FF,$DF,$FF,$00,$FF,$B1,$FF,$FF,$FF,$00,$FF,$00,$FF,$00,$FF,$00  ; ($5F64)
                .byte $FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$20,$FF,$02,$FF  ; ($5F74)
                .byte $00,$0F,$00,$FF,$03,$FF,$00,$1F,$00,$0E,$0F,$FF,$02,$FF,$00,$FF  ; ($5F84)
                .byte $00,$0F,$00,$0F,$00,$FF,$00,$FF,$00,$FF,$0E,$FF,$1F,$FF,$00,$FF  ; ($5F94)
                .byte $00,$FF,$00,$FF,$0F,$2F,$00,$FF,$0C,$FF,$2F,$FF,$00,$FF,$00,$FF  ; ($5FA4)
                .byte $00,$FF,$00,$FC,$00,$FF,$00,$FF,$00,$FF,$24,$FF,$00,$FF,$00,$FF  ; ($5FB4)
                .byte $1F,$0F,$09,$00,$20,$FF,$00,$FF,$00,$FF,$0C,$FF,$00,$FF,$00,$FF  ; ($5FC4)
                .byte $00,$FF,$00,$FF,$0F,$FF,$00,$FF,$00,$FF,$A0,$FF,$00,$FF,$00,$FF  ; ($5FD4)
                .byte $00,$2F,$00,$FF,$00,$6F,$00,$0F,$0F,$FF,$2E,$FF,$00,$FF,$00,$FF  ; ($5FE4)
                .byte $00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$DC,$DC,$DC,$DC  ; ($5FF4)
                .byte $DC,$DC,$DC,$D2,$DC,$DC,$DC,$DC,$DC,$DC,$DC,$D4,$DC,$DC,$DC,$DC  ; ($6004)
                .byte $DC,$DC,$D2,$15,$DC,$DC,$DC,$DC,$DC,$DC,$D4,$15,$DC,$DC,$DC,$DC  ; ($6014)
                .byte $DC,$D2,$15,$15,$DC,$DC,$DC,$DC,$DC,$D4,$15,$15,$DC,$DC,$DC,$DC  ; ($6024)
                .byte $D2,$15,$15,$15,$DC,$DC,$DC,$DC,$D4,$15,$15,$15,$D0,$DC,$DC,$D2  ; ($6034)
                .byte $15,$15,$15,$15,$0C,$D0,$DC,$D4,$15,$15,$15,$15,$0C,$0C,$15,$15  ; ($6044)
                .byte $15,$15,$15,$15,$0C,$0C,$15,$15,$15,$15,$15,$15,$0C,$D1,$DC,$D5  ; ($6054)
                .byte $15,$15,$15,$15,$D1,$DC,$DC,$D3,$15,$15,$15,$15,$DC,$DC,$DC,$DC  ; ($6064)
                .byte $D5,$15,$15,$15,$DC,$DC,$DC,$DC,$D3,$15,$15,$15,$DC,$DC,$DC,$DC  ; ($6074)
                .byte $DC,$D5,$15,$15,$DC,$DC,$DC,$DC,$DC,$D3,$15,$15,$DC,$DC,$DC,$DC  ; ($6084)
                .byte $DC,$DC,$D5,$15,$DC,$DC,$DC,$DC,$DC,$DC,$D3,$15,$DC,$DC,$DC,$DC  ; ($6094)
                .byte $DC,$DC,$DC,$D5,$DC,$DC,$DC,$DC,$DC,$DC,$DC,$D3,$E8,$E8,$E8,$E8  ; ($60A4)
                .byte $E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8  ; ($60B4)
                .byte $E8,$E8,$ED,$15,$E5,$E6,$E7,$E5,$E6,$E7,$DE,$15,$E5,$E6,$E7,$E5  ; ($60C4)
                .byte $E6,$EC,$15,$15,$E5,$E6,$E7,$E5,$E6,$DE,$15,$15,$E4,$E4,$E4,$E4  ; ($60D4)
                .byte $EA,$15,$15,$15,$E4,$E4,$E4,$E4,$DE,$15,$15,$15,$DF,$E4,$E4,$EA  ; ($60E4)
                .byte $15,$15,$15,$15,$0C,$DF,$E4,$DE,$15,$15,$15,$15,$0C,$0C,$15,$15  ; ($60F4)
                .byte $15,$15,$15,$15,$0C,$0C,$15,$15,$15,$15,$15,$15,$0C,$DF,$E4,$DE  ; ($6104)
                .byte $15,$15,$15,$15,$DF,$E4,$E4,$EA,$15,$15,$15,$15,$E4,$E4,$E4,$E4  ; ($6114)
                .byte $DE,$15,$15,$15,$E4,$E4,$E4,$E4,$EA,$15,$15,$15,$E5,$E6,$E7,$E5  ; ($6124)
                .byte $E6,$DE,$15,$15,$E5,$E6,$E7,$E5,$E6,$EC,$15,$15,$E5,$E6,$E7,$E5  ; ($6134)
                .byte $E6,$E7,$DE,$15,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$15,$E8,$E8,$E8,$E8  ; ($6144)
                .byte $E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$DD,$DD,$DD,$DD  ; ($6154)
                .byte $DD,$DD,$DD,$D8,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DA,$DD,$DD,$DD,$DD  ; ($6164)
                .byte $DD,$DD,$D8,$15,$DD,$DD,$DD,$DD,$DD,$DD,$DA,$15,$DD,$DD,$DD,$DD  ; ($6174)
                .byte $DD,$D8,$15,$15,$DD,$DD,$DD,$DD,$DD,$DA,$15,$15,$DD,$DD,$DD,$DD  ; ($6184)
                .byte $D8,$15,$15,$15,$DD,$DD,$DD,$DD,$DA,$15,$15,$15,$D6,$DD,$DD,$D8  ; ($6194)
                .byte $15,$15,$15,$15,$0C,$D6,$DD,$DA,$15,$15,$15,$15,$0C,$0C,$15,$15  ; ($61A4)
                .byte $15,$15,$15,$15,$0C,$0C,$15,$15,$15,$15,$15,$15,$0C,$D7,$DD,$DB  ; ($61B4)
                .byte $15,$15,$15,$15,$D7,$DD,$DD,$D9,$15,$15,$15,$15,$DD,$DD,$DD,$DD  ; ($61C4)
                .byte $DB,$15,$15,$15,$DD,$DD,$DD,$DD,$D9,$15,$15,$15,$DD,$DD,$DD,$DD  ; ($61D4)
                .byte $DD,$DB,$15,$15,$DD,$DD,$DD,$DD,$DD,$D9,$15,$15,$DD,$DD,$DD,$DD  ; ($61E4)
                .byte $DD,$DD,$DB,$15,$DD,$DD,$DD,$DD,$DD,$DD,$D9,$15,$DD,$DD,$DD,$DD  ; ($61F4)
                .byte $DD,$DD,$DD,$DB,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$D9,$0C,$DF,$E4,$DE  ; ($6204)
                .byte $15,$15,$15,$15,$0C,$DF,$E4,$DE,$15,$15,$15,$15,$DF,$E4,$E4,$EA  ; ($6214)
                .byte $15,$15,$15,$15,$DF,$E4,$E4,$EA,$15,$15,$15,$15,$DF,$E4,$E4,$EA  ; ($6224)
                .byte $15,$15,$15,$15,$DF,$E4,$E4,$EA,$15,$15,$15,$15,$E4,$E4,$E4,$E4  ; ($6234)
                .byte $DE,$15,$15,$15,$E4,$E4,$E4,$E4,$DE,$15,$15,$15,$E4,$E4,$E4,$E4  ; ($6244)
                .byte $DE,$15,$15,$15,$E4,$E4,$E4,$E4,$DE,$15,$15,$15,$E4,$E4,$E4,$E4  ; ($6254)
                .byte $DE,$15,$15,$15,$E4,$E4,$E4,$E4,$DE,$15,$15,$15,$E4,$E4,$E4,$E4  ; ($6264)
                .byte $EA,$15,$15,$15,$E4,$E4,$E4,$E4,$EA,$15,$15,$15,$E4,$E4,$E4,$E4  ; ($6274)
                .byte $EA,$15,$15,$15,$E4,$E4,$E4,$E4,$EA,$15,$15,$15,$E4,$E4,$E4,$E4  ; ($6284)
                .byte $EA,$15,$15,$15,$E4,$E4,$E4,$E4,$EA,$15,$15,$15,$E4,$E4,$E4,$E4  ; ($6294)
                .byte $EA,$15,$15,$15,$E4,$E4,$E4,$E4,$EA,$15,$15,$15,$E5,$E6,$E7,$E5  ; ($62A4)
                .byte $E6,$DE,$15,$15,$E5,$E6,$E7,$E5,$E6,$DE,$15,$15,$E5,$E6,$E7,$E5  ; ($62B4)
                .byte $E6,$DE,$15,$15,$E5,$E6,$E7,$E5,$E6,$DE,$15,$15,$E5,$E6,$E7,$E5  ; ($62C4)
                .byte $E6,$DE,$15,$15,$E5,$E6,$E7,$E5,$E6,$DE,$15,$15,$E5,$E6,$E7,$E5  ; ($62D4)
                .byte $E6,$DE,$15,$15,$E5,$E6,$E7,$E5,$E6,$DE,$15,$15,$E5,$E6,$E7,$E5  ; ($62E4)
                .byte $E6,$DE,$15,$15,$E5,$E6,$E7,$E5,$E6,$DE,$15,$15,$E5,$E6,$E7,$E5  ; ($62F4)
                .byte $E6,$EC,$15,$15,$E5,$E6,$E7,$E5,$E6,$EC,$15,$15,$E5,$E6,$E7,$E5  ; ($6304)
                .byte $E6,$EC,$15,$15,$E5,$E6,$E7,$E5,$E6,$EC,$15,$15,$E5,$E6,$E7,$E5  ; ($6314)
                .byte $E6,$EC,$15,$15,$E5,$E6,$E7,$E5,$E6,$EC,$15,$15,$E5,$E6,$E7,$E5  ; ($6324)
                .byte $E6,$EC,$15,$15,$E5,$E6,$E7,$E5,$E6,$EC,$15,$15,$E5,$E6,$E7,$E5  ; ($6334)
                .byte $E6,$EC,$15,$15,$E5,$E6,$E7,$E5,$E6,$EC,$15,$15,$E5,$E6,$E7,$E5  ; ($6344)
                .byte $E6,$EC,$15,$15,$E5,$E6,$E7,$E5,$E6,$EC,$15,$15,$E5,$E6,$E7,$E5  ; ($6354)
                .byte $E6,$E7,$DE,$15,$E5,$E6,$E7,$E5,$E6,$E7,$DE,$15,$E5,$E6,$E7,$E5  ; ($6364)
                .byte $E6,$E7,$DE,$15,$E5,$E6,$E7,$E5,$E6,$E7,$DE,$15,$E5,$E6,$E7,$E5  ; ($6374)
                .byte $E6,$E7,$DE,$15,$E5,$E6,$E7,$E5,$E6,$E7,$DE,$15,$E5,$E6,$E7,$E5  ; ($6384)
                .byte $E6,$E7,$DE,$15,$E5,$E6,$E7,$E5,$E6,$E7,$DE,$15,$E5,$E6,$E7,$E5  ; ($6394)
                .byte $E6,$E7,$DE,$15,$E5,$E6,$E7,$E5,$E6,$E7,$DE,$15,$E5,$E6,$E7,$E5  ; ($63A4)
                .byte $E6,$E7,$DE,$15,$E5,$E6,$E7,$E5,$E6,$E7,$DE,$15,$E5,$E6,$E7,$E5  ; ($63B4)
                .byte $E6,$E7,$DE,$15,$E5,$E6,$E7,$E5,$E6,$E7,$DE,$15,$E8,$E8,$E8,$E8  ; ($63C4)
                .byte $E8,$E8,$ED,$15,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$15,$E8,$E8,$E8,$E8  ; ($63D4)
                .byte $E8,$E8,$ED,$15,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$15,$E8,$E8,$E8,$E8  ; ($63E4)
                .byte $E8,$E8,$ED,$15,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$15,$E8,$E8,$E8,$E8  ; ($63F4)
                .byte $E8,$E8,$ED,$15,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$15,$E8,$E8,$E8,$E8  ; ($6404)
                .byte $E8,$E8,$ED,$15,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$15,$E8,$E8,$E8,$E8  ; ($6414)
                .byte $E8,$E8,$ED,$15,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$15,$E8,$E8,$E8,$E8  ; ($6424)
                .byte $E8,$E8,$ED,$15,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$15,$E8,$E8,$E8,$E8  ; ($6434)
                .byte $E8,$E8,$ED,$15,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$15,$E8,$E8,$E8,$E8  ; ($6444)
                .byte $E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8  ; ($6454)
                .byte $E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8  ; ($6464)
                .byte $E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8  ; ($6474)
                .byte $E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8  ; ($6484)
                .byte $E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8  ; ($6494)
                .byte $E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$DE,$E9,$E8,$E8,$E8  ; ($64A4)
                .byte $E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8  ; ($64B4)
                .byte $E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8  ; ($64C4)
                .byte $E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$DE,$E8,$E8,$E8,$E8  ; ($64D4)
                .byte $E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8  ; ($64E4)
                .byte $E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8  ; ($64F4)
                .byte $E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8  ; ($6504)
                .byte $E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8  ; ($6514)
                .byte $E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8  ; ($6524)
                .byte $E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8  ; ($6534)
                .byte $E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8  ; ($6544)
                .byte $E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8  ; ($6554)
                .byte $E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8  ; ($6564)
                .byte $E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$ED,$E8,$E8,$E8,$E8  ; ($6574)
                .byte $E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8  ; ($6584)
                .byte $E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8  ; ($6594)
                .byte $E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8  ; ($65A4)
                .byte $E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8  ; ($65B4)
                .byte $E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8  ; ($65C4)
                .byte $E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8  ; ($65D4)
                .byte $E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8  ; ($65E4)
                .byte $E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8  ; ($65F4)
                .byte $E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8  ; ($6604)
                .byte $E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8  ; ($6614)
                .byte $E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$E8,$F4,$F4,$F4,$F4  ; ($6624)
                .byte $F4,$F4,$F4,$F0,$F4,$F4,$F4,$F4,$F4,$F4,$F4,$F2,$F4,$F4,$F4,$F4  ; ($6634)
                .byte $F4,$F4,$F0,$15,$F4,$F4,$F4,$F4,$F4,$F4,$F2,$15,$F4,$F4,$F4,$F4  ; ($6644)
                .byte $F4,$F0,$15,$15,$F4,$F4,$F4,$F4,$F4,$F2,$15,$15,$F4,$F4,$F4,$F4  ; ($6654)
                .byte $F0,$15,$15,$15,$F4,$F4,$F4,$F4,$F2,$15,$15,$15,$EE,$F4,$F4,$F0  ; ($6664)
                .byte $15,$15,$15,$15,$0C,$EE,$F4,$F2,$15,$15,$15,$15,$0C,$0C,$15,$15  ; ($6674)
                .byte $15,$15,$15,$15,$0C,$0C,$15,$15,$15,$15,$15,$15,$0C,$EF,$F4,$F3  ; ($6684)
                .byte $15,$15,$15,$15,$EF,$F4,$F4,$F1,$15,$15,$15,$15,$F4,$F4,$F4,$F4  ; ($6694)
                .byte $F3,$15,$15,$15,$F4,$F4,$F4,$F4,$F1,$15,$15,$15,$F4,$F4,$F4,$F4  ; ($66A4)
                .byte $F4,$F3,$15,$15,$F4,$F4,$F4,$F4,$F4,$F1,$15,$15,$F4,$F4,$F4,$F4  ; ($66B4)
                .byte $F4,$F4,$F3,$15,$F4,$F4,$F4,$F4,$F4,$F4,$F1,$15,$F4,$F4,$F4,$F4  ; ($66C4)
                .byte $F4,$F4,$F4,$F3,$F4,$F4,$F4,$F4,$F4,$F4,$F4,$F1,$15,$15,$15,$15  ; ($66D4)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($66E4)
                .byte $15,$15,$15,$15,$D8,$D8,$D8,$D8,$D8,$D8,$DE,$15,$D8,$D8,$D8,$D8  ; ($66F4)
                .byte $D8,$D8,$DE,$15,$D8,$D8,$D8,$D8,$D8,$D8,$DE,$15,$D8,$D8,$D8,$D8  ; ($6704)
                .byte $D8,$D8,$DE,$15,$D8,$D8,$D8,$D8,$D8,$D8,$DE,$15,$D8,$D8,$D8,$D8  ; ($6714)
                .byte $D8,$D8,$DE,$15,$D8,$D8,$D8,$D8,$D8,$D8,$DE,$15,$D8,$D8,$D8,$D8  ; ($6724)
                .byte $D8,$D8,$DE,$15,$D8,$D8,$D8,$D8,$D8,$D8,$DE,$15,$D8,$D8,$D8,$D8  ; ($6734)
                .byte $D8,$D8,$DE,$15,$D8,$D8,$D8,$D8,$D8,$D8,$DE,$15,$D8,$D8,$D8,$D8  ; ($6744)
                .byte $D8,$D8,$DE,$15,$D8,$D8,$D8,$D8,$D8,$D8,$DE,$15,$D8,$D8,$D8,$D8  ; ($6754)
                .byte $D8,$D8,$DE,$15,$D8,$D8,$D8,$D8,$D8,$D8,$DE,$15,$D8,$D8,$D8,$D8  ; ($6764)
                .byte $D8,$D8,$DE,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($6774)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($6784)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$D8,$D8,$D8,$D8  ; ($6794)
                .byte $D8,$D8,$D8,$15,$D8,$D8,$D8,$D8,$D8,$D8,$D8,$15,$D8,$D8,$D8,$D8  ; ($67A4)
                .byte $D8,$D8,$D8,$15,$D8,$D8,$D8,$D8,$D8,$D8,$D8,$15,$D8,$D8,$D8,$D8  ; ($67B4)
                .byte $D8,$D8,$D8,$15,$D8,$D8,$D8,$D8,$D8,$D8,$D8,$15,$D8,$D8,$D8,$D8  ; ($67C4)
                .byte $D8,$D8,$D8,$15,$D8,$D8,$D8,$D8,$D8,$D8,$D8,$15,$D8,$D8,$D8,$D8  ; ($67D4)
                .byte $D8,$D8,$D8,$15,$D8,$D8,$D8,$D8,$D8,$D8,$D8,$15,$D8,$D8,$D8,$D8  ; ($67E4)
                .byte $D8,$D8,$D8,$15,$D8,$D8,$D8,$D8,$D8,$D8,$D8,$15  ; ($67F4)
sprite_init_xpos_low
                .byte $FA,$68,$E6,$F2,$CB,$8C,$40,$C5,$0A,$56,$C4,$A0,$8C,$8C,$68,$FF  ; ($6800)
                .byte $03,$00,$02,$01,$01,$02,$00,$01,$02,$00,$01,$00,$00,$01,$02,$06  ; ($6810)
sprite_init_pointers
                .byte $90,$8E,$8A,$8C,$8C,$8C,$8A,$8C,$8C,$8A,$8C,$8E,$8C,$8A,$8C,$AC  ; ($6820)
sprite_init_data_extra
                .byte $00,$06,$02,$04,$04,$04,$02,$04,$04,$02,$04,$06,$04,$02,$04,$00  ; ($6830)
sprite_init_xpos_high
                .byte $01,$02,$00,$01,$02,$03,$03,$01,$02,$01,$01,$02,$03,$01,$02,$FF  ; ($6840)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($6850)
                .byte $00,$04,$05,$04,$05,$06,$03,$04,$04,$05,$07,$05,$04,$05,$04,$00  ; ($6860)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6870)
sprite_init_ypos_low
                .byte $FA,$28,$70,$6A,$C0,$18,$38,$6D,$B5,$FD,$23,$80,$23,$70,$18,$FF  ; ($6880)
                .byte $0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A  ; ($6890)
                .byte $88,$89,$8A,$8B,$8C,$8D,$8E,$8F,$88,$89,$8A,$8B,$8C,$8D,$8E,$00  ; ($68A0)
                .byte $00,$01,$01,$01,$00,$81,$81,$81,$81,$81,$00,$01,$01,$01,$00,$81  ; ($68B0)
sprite_init_ypos_high
                .byte $01,$00,$00,$00,$00,$02,$02,$02,$02,$02,$03,$02,$03,$00,$02,$FF  ; ($68C0)
                .byte $42,$40,$40,$00,$00,$00,$00,$00,$00,$40,$02,$A2,$A0,$B5,$40,$90  ; ($68D0)
                .byte $00,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$00  ; ($68E0)
                .byte $F6,$FD,$40,$41,$E5,$FF,$40,$ED,$01,$00,$FD,$FF,$20,$00,$20,$00  ; ($68F0)
V_SprPosHorizLow
                .byte $03,$68,$E6,$42,$CB,$8C,$40,$C5,$0A,$56,$C4,$A0,$8C,$8C,$57  ; ($6900)
bullet_xpos_low
                .byte $02                                 ; ($690F)
V_HideShowSprite
                .byte $03,$00,$02,$01,$01,$02,$00,$01,$02,$00,$01,$00,$00,$01,$02  ; ($6910)
bullet_sprite_ptr_1
                .byte $06                                 ; ($691F)
sprite_pointer_table
                .byte $92,$8E,$8A,$8A,$8C,$8C,$8A,$8C,$8C,$8A,$8C,$8E,$8C,$8C,$88  ; ($6920)
bullet_sprite_ptr_2
                .byte $AC                                 ; ($692F)
sprite_data_extra
                .byte $02,$06,$02,$02,$04,$04,$02,$04,$04,$02,$04,$06,$04,$04,$00  ; ($6930)
bullet_direction
                .byte $00                                 ; ($693F)
V_SprPosHorizHigh
                .byte $02,$02,$00,$02,$02,$03,$03,$01,$02,$01,$01,$02,$03,$01,$02  ; ($6940)
bullet_xpos_high
                .byte $FF                                 ; ($694F)
entity_animation_counter
                .byte $01,$01,$05,$04,$01,$01,$01,$01,$01,$01,$01,$01,$01,$05,$04,$01  ; ($6950)
entity_animation_reset_value
                .byte $00,$04,$05,$04,$05,$06,$03,$04,$04,$05,$07,$05,$04,$05,$04,$00  ; ($6960)
entity_flash_counter
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6970)
V_SprPosVertLow
                .byte $6F,$28,$70,$A0,$C0,$18,$38,$6D,$B5,$FD,$23,$80,$23,$0E,$79  ; ($6980)
bullet_ypos_low
                .byte $DD                                 ; ($698F)
entity_flash_timer
                .byte $0A,$0A,$18,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A  ; ($6990)
direction_sprite_pointer_table
                .byte $88,$89,$8A,$8B,$8C,$8D,$8E,$8F,$88,$89,$8A,$8B,$8C,$8D,$8E,$00  ; ($69A0)
direction_x_delta_table
                .byte $00,$01,$01,$01,$00,$81,$81,$81     ; ($69B0)
direction_y_delta_table
                .byte $81,$81,$00,$01,$01,$01,$00,$81     ; ($69B8)
V_SprPosVertHigh
                .byte $02,$00,$00,$00,$00,$02,$02,$02,$02,$02,$03,$02,$03,$01,$01  ; ($69C0)
bullet_ypos_high
                .byte $F0,$42,$40,$40,$00,$00,$00,$00,$00,$00,$40,$02,$A2,$A0,$B5,$40  ; ($69CF)
                .byte $90                                 ; ($69DF)
entity_priority_threshold
                .byte $00,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$00  ; ($69E0)
                .byte $F6,$FD,$40,$41,$E5,$FF,$40,$ED     ; ($69F0)
mayday_turn_timer
                .byte $21                                 ; ($69F8)
mayday_direction_index
                .byte $4C,$FD,$FF                         ; ($69F9)
random_value_1
                .byte $18                                 ; ($69FC)
random_value_2
                .byte $02                                 ; ($69FD)
random_value_3
                .byte $20                                 ; ($69FE)
random_value_4
                .byte $00,$00,$10,$20,$40,$70,$B0,$00,$60,$D0,$50,$E0,$80,$00,$00,$00  ; ($69FF)
                .byte $00,$00,$00,$10,$30,$60,$A0,$F0,$50,$C0,$40,$D0,$70,$00,$00,$00  ; ($6A0F)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6A1F)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6A2F)
                .byte $00,$61,$62,$62,$62,$62,$62,$63,$63,$63,$64,$64,$65,$00,$00,$00  ; ($6A3F)
                .byte $00,$61,$70,$70,$70,$70,$70,$70,$71,$71,$72,$72,$73,$00,$00,$00  ; ($6A4F)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6A5F)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6A6F)
                .byte $00,$0A,$0A,$09,$08,$07,$06,$05,$04,$03,$02,$01,$00,$00,$00,$00  ; ($6A7F)
                .byte $00,$0A,$0A,$09,$08,$07,$06,$05,$04,$03,$02,$01,$00,$00,$00,$00  ; ($6A8F)
                .byte $00,$0A,$0A,$09,$08,$07,$06,$05,$04,$03,$02,$01,$00,$00,$00,$00  ; ($6A9F)
                .byte $00,$0A,$0A,$09,$08,$07,$06,$05,$04,$03,$02,$01,$00,$00,$00,$00  ; ($6AAF)
                .byte $00,$0C,$0C,$0D,$0E,$0F,$10,$11,$12,$13,$14,$15,$16,$00,$00,$00  ; ($6ABF)
                .byte $00,$0C,$0C,$0D,$0E,$0F,$10,$11,$12,$13,$14,$15,$16,$00,$00,$00  ; ($6ACF)
                .byte $00,$0C,$0C,$0D,$0E,$0F,$10,$11,$12,$13,$14,$15,$16,$00,$00,$00  ; ($6ADF)
                .byte $00,$0C,$0C,$0D,$0E,$0F,$10,$11,$12,$13,$14,$15,$16,$00,$00,$00  ; ($6AEF)
                .byte $00                                 ; ($6AFF)
sampled_terrain_buffer
                .byte $04,$00,$00,$1B,$1B,$00,$00,$00,$04,$04,$04,$18,$01,$14,$00,$00  ; ($6B00)
                .byte $00,$14,$00,$00,$14,$00,$00,$02,$00,$01,$01,$02,$02,$02,$00,$00  ; ($6B10)
                .byte $00,$00,$08,$00,$08,$00,$00,$00,$09,$08,$00,$0D,$5D,$09,$49,$50  ; ($6B20)
direction_offset_table_ptr
                .byte $00,$00,$42,$42,$84,$84,$C6,$C6,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6B30)
                .byte $00,$10,$20,$40,$70,$B0,$00,$60,$D0,$50,$E0,$80,$00,$00,$00,$00  ; ($6B40)
                .byte $61,$62,$62,$62,$62,$62,$63,$63,$63,$64,$64,$65,$00,$00,$00,$00  ; ($6B50)
                .byte $00,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($6B60)
                .byte $01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$00,$00  ; ($6B70)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($6B80)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($6B90)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($6BA0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6BB0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6BC0)
direction_horizontal_flag
                .byte $00,$00,$01,$01,$00,$00,$01,$01,$00,$00,$00,$00,$00,$00,$00,$0A  ; ($6BD0)
                .byte $0A,$0A,$09,$08,$07,$06,$05,$04,$03,$02,$01,$00,$00,$00,$00,$00  ; ($6BE0)
                .byte $0C,$0C,$0D,$0E,$0F,$10,$11,$12,$13,$14,$15,$16,$00,$00,$00,$00  ; ($6BF0)
tile_graphics_ptr_lo
                .byte $B0,$30,$60,$30,$00,$30,$00,$30,$00,$60,$60,$60,$60,$60,$00,$00  ; ($6C00)
                .byte $00,$00,$B0,$B0,$B0,$B0,$B0,$B0,$B0,$B0,$B0,$00,$B0,$B0,$B0,$B0  ; ($6C10)
                .byte $60,$60,$60,$60,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6C20)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6C30)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6C40)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6C50)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6C60)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6C70)
tile_graphics_ptr_hi
                .byte $60,$66,$61,$66,$60,$66,$60,$66,$60,$61,$61,$61,$61,$61,$60,$60  ; ($6C80)
                .byte $60,$60,$60,$60,$60,$60,$60,$60,$60,$60,$60,$60,$60,$60,$60,$60  ; ($6C90)
                .byte $61,$61,$61,$61,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6CA0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6CB0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6CC0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6CD0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6CE0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6CF0)
                .byte $00,$00,$7A,$01,$F4,$02,$F0,$03,$6E,$04,$6A,$05,$E8,$05,$66,$06  ; ($6D00)
                .byte $E4,$06,$62,$07,$E0,$07,$02,$00,$7C,$01,$F6,$02,$F2,$03,$71,$04  ; ($6D10)
                .byte $6C,$05,$EA,$05,$68,$06,$E6,$06,$64,$07,$E2,$07,$04,$00,$7E,$01  ; ($6D20)
                .byte $F8,$02,$F4,$03,$73,$04,$6E,$05,$EC,$05,$6A,$06,$E8,$06,$66,$07  ; ($6D30)
                .byte $E4,$07,$F4,$07,$F1,$07,$EE,$07,$EC,$07,$EB,$07,$E9,$07,$E8,$07  ; ($6D40)
                .byte $E7,$07,$E6,$07,$E5,$07,$E4,$07,$F0,$08,$ED,$08,$EA,$08,$E8,$08  ; ($6D50)
                .byte $E7,$08,$E5,$08,$E4,$08,$E3,$08,$E2,$08,$E1,$08,$E0,$08,$EC,$09  ; ($6D60)
                .byte $E9,$09,$E6,$09,$E4,$09,$E3,$09,$E1,$09,$E0,$09,$DF,$09,$DE,$09  ; ($6D70)
                .byte $DD,$09,$DC,$09,$BC,$11,$42,$10,$C8,$0E,$CC,$0D,$4E,$0D,$52,$0C  ; ($6D80)
                .byte $D4,$0B,$56,$0B,$D8,$0A,$5A,$0A,$DC,$09,$BA,$11,$40,$10,$C6,$0E  ; ($6D90)
                .byte $CA,$0D,$4C,$0D,$50,$0C,$D2,$0B,$54,$0B,$D6,$0A,$58,$0A,$DA,$09  ; ($6DA0)
                .byte $B8,$11,$3E,$10,$C4,$0E,$C8,$0D,$4A,$0D,$4E,$0C,$D0,$0B,$52,$0B  ; ($6DB0)
                .byte $D4,$0A,$56,$0A,$D8,$09,$C8,$09,$CB,$09,$CE,$09,$D0,$09,$D1,$09  ; ($6DC0)
                .byte $D3,$09,$D4,$09,$D5,$09,$D6,$09,$D7,$09,$D8,$09,$CC,$08,$CF,$08  ; ($6DD0)
                .byte $D2,$08,$D4,$08,$D5,$08,$D7,$08,$D8,$08,$D9,$08,$DA,$08,$DB,$08  ; ($6DE0)
                .byte $DC,$08,$D0,$07,$D3,$07,$D6,$07,$D8,$07,$D9,$07,$DB,$07,$DC,$07  ; ($6DF0)
                .byte $DD,$07,$DE,$07,$DF,$07,$E0,$07,$E4,$06,$00,$00,$00,$00,$00,$00  ; ($6E00)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6E10)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6E20)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6E30)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6E40)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6E50)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6E60)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6E70)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6E80)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6E90)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6EA0)
                .byte $84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84  ; ($6EB0)
                .byte $84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84  ; ($6EC0)
                .byte $84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84  ; ($6ED0)
                .byte $84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84  ; ($6EE0)
                .byte $84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84,$84  ; ($6EF0)
tile_type_properties
                .byte $00,$80,$90,$80,$90,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80  ; ($6F00)
                .byte $80,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$80,$00,$00,$00,$00  ; ($6F10)
                .byte $80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80  ; ($6F20)
                .byte $80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80  ; ($6F30)
                .byte $80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80  ; ($6F40)
                .byte $80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80  ; ($6F50)
                .byte $80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80  ; ($6F60)
                .byte $80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80  ; ($6F70)
                .byte $80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80  ; ($6F80)
                .byte $80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80  ; ($6F90)
                .byte $80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80  ; ($6FA0)
                .byte $80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80  ; ($6FB0)
                .byte $80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80  ; ($6FC0)
                .byte $80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80  ; ($6FD0)
                .byte $80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80,$80  ; ($6FE0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($6FF0)
                .byte $0C,$DF,$DD,$DE,$15,$15,$15,$15,$0C,$DF,$DD,$DE,$15,$15,$15,$15  ; ($7000)
                .byte $DF,$DD,$DD,$E0,$15,$15,$15,$15,$DF,$DD,$DD,$E0,$15,$15,$15,$15  ; ($7010)
                .byte $DF,$DD,$DD,$E0,$15,$15,$15,$15,$DF,$DD,$DD,$E0,$15,$15,$15,$15  ; ($7020)
                .byte $DD,$DD,$DD,$DD,$DE,$15,$15,$15,$DD,$A8,$DD,$DD,$DE,$15,$15,$15  ; ($7030)
                .byte $DD,$DD,$DD,$DD,$DE,$15,$15,$15,$DD,$DD,$DD,$DD,$DE,$15,$15,$15  ; ($7040)
                .byte $DD,$A8,$DD,$DD,$DE,$15,$15,$15,$DD,$DD,$DD,$DD,$DE,$15,$15,$15  ; ($7050)
                .byte $DD,$DD,$DD,$DD,$E0,$15,$15,$15,$DD,$A8,$DD,$DD,$E0,$15,$15,$15  ; ($7060)
                .byte $DD,$DD,$DD,$DD,$E0,$15,$15,$15,$DD,$DD,$DD,$DD,$E0,$15,$15,$15  ; ($7070)
                .byte $DD,$DD,$DD,$DD,$E0,$15,$15,$15,$DD,$A8,$DD,$DD,$E0,$15,$15,$15  ; ($7080)
                .byte $DD,$DD,$DD,$DD,$E0,$15,$15,$15,$DD,$DD,$DD,$DD,$E0,$15,$15,$15  ; ($7090)
                .byte $DD,$DD,$DD,$DD,$DD,$DE,$15,$15,$DD,$DD,$DD,$DD,$DD,$DE,$15,$15  ; ($70A0)
                .byte $DD,$DD,$A9,$DD,$DD,$DE,$15,$15,$DD,$DD,$DD,$DD,$DD,$DE,$15,$15  ; ($70B0)
                .byte $DD,$DD,$DD,$DD,$DD,$DE,$15,$15,$DD,$DD,$DD,$DD,$DD,$DE,$15,$15  ; ($70C0)
                .byte $DD,$DD,$DD,$DD,$DD,$DE,$15,$15,$DD,$DD,$A9,$DD,$DD,$DE,$15,$15  ; ($70D0)
                .byte $DD,$DD,$DD,$DD,$DD,$DE,$15,$15,$DD,$DD,$DD,$DD,$DD,$DE,$15,$15  ; ($70E0)
                .byte $DD,$DD,$DD,$DD,$DD,$E0,$15,$15,$DD,$DD,$DD,$DD,$DD,$E0,$15,$15  ; ($70F0)
                .byte $DD,$DD,$AA,$DD,$DD,$E0,$15,$15,$DD,$DD,$DD,$DD,$DD,$E0,$15,$15  ; ($7100)
                .byte $DD,$DD,$DD,$DD,$DD,$E0,$15,$15,$DD,$DD,$DD,$DD,$DD,$E0,$15,$15  ; ($7110)
                .byte $DD,$DD,$DD,$DD,$DD,$E0,$15,$15,$DD,$DD,$DD,$DD,$DD,$E0,$15,$15  ; ($7120)
                .byte $DD,$DD,$DD,$DD,$DD,$E0,$15,$15,$DD,$DD,$AA,$DD,$DD,$E0,$15,$15  ; ($7130)
                .byte $DD,$DD,$DD,$DD,$DD,$E0,$15,$15,$DD,$DD,$DD,$DD,$DD,$E0,$15,$15  ; ($7140)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DE,$15,$DD,$DD,$DD,$DD,$DD,$DD,$DE,$15  ; ($7150)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DE,$15,$DD,$DD,$AB,$DD,$DD,$DD,$DE,$15  ; ($7160)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DE,$15,$DD,$DD,$DD,$DD,$DD,$DD,$DE,$15  ; ($7170)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DE,$15,$DD,$DD,$DD,$DD,$DD,$DD,$DE,$15  ; ($7180)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DE,$15,$DD,$DD,$DD,$DD,$DD,$DD,$DE,$15  ; ($7190)
                .byte $DD,$DD,$AB,$DD,$DD,$DD,$DE,$15,$DD,$DD,$DD,$DD,$DD,$DD,$DE,$15  ; ($71A0)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DE,$15,$DD,$DD,$DD,$DD,$DD,$DD,$DE,$15  ; ($71B0)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$E0,$15,$DD,$DD,$DD,$DD,$DD,$DD,$E0,$15  ; ($71C0)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$E0,$15,$DD,$AE,$AD,$B1,$DD,$DD,$E0,$15  ; ($71D0)
                .byte $DD,$AF,$AB,$B2,$DD,$DD,$E0,$15,$DD,$B0,$AC,$B3,$DD,$DD,$E0,$15  ; ($71E0)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$E0,$15,$DD,$DD,$DD,$DD,$DD,$DD,$E0,$15  ; ($71F0)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$E0,$15,$DD,$DD,$DD,$DD,$DD,$DD,$E0,$15  ; ($7200)
                .byte $DD,$AE,$AD,$B1,$DD,$DD,$E0,$15,$DD,$AF,$AB,$B2,$DD,$DD,$E0,$15  ; ($7210)
                .byte $DD,$B0,$AC,$B3,$DD,$DD,$E0,$15,$DD,$DD,$DD,$DD,$DD,$DD,$E0,$15  ; ($7220)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$E0,$15,$DD,$DD,$DD,$DD,$DD,$DD,$E0,$15  ; ($7230)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$DE,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DE  ; ($7240)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$DE,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DE  ; ($7250)
                .byte $DD,$B6,$B4,$B9,$DD,$DD,$DD,$DE,$DD,$B7,$AB,$BA,$DD,$DD,$DD,$DE  ; ($7260)
                .byte $DD,$B8,$B5,$BB,$DD,$DD,$DD,$DE,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DE  ; ($7270)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$DE,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DE  ; ($7280)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$DE,$DD,$B6,$B4,$B9,$DD,$DD,$DD,$DE  ; ($7290)
                .byte $DD,$B7,$AB,$BA,$DD,$DD,$DD,$DE,$DD,$B8,$B5,$BB,$DD,$DD,$DD,$DE  ; ($72A0)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$DE,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DE  ; ($72B0)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$DE,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DE  ; ($72C0)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$E0,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$E0  ; ($72D0)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$E0,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$E0  ; ($72E0)
                .byte $DD,$AB,$AB,$AB,$DD,$DD,$DD,$E0,$DD,$AB,$AB,$AB,$DD,$DD,$DD,$E0  ; ($72F0)
                .byte $DD,$AB,$AB,$AB,$DD,$DD,$DD,$E0,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$E0  ; ($7300)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$E0,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$E0  ; ($7310)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$E0,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$E0  ; ($7320)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$E0,$DD,$AB,$AB,$AB,$DD,$DD,$DD,$E0  ; ($7330)
                .byte $DD,$AB,$AB,$AB,$DD,$DD,$DD,$E0,$DD,$AB,$AB,$AB,$DD,$DD,$DD,$E0  ; ($7340)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$E0,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$E0  ; ($7350)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$E0,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$E0  ; ($7360)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD  ; ($7370)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD  ; ($7380)
                .byte $DD,$AB,$AB,$AB,$DD,$DD,$DD,$DD,$DD,$AB,$AB,$AB,$DD,$DD,$DD,$DD  ; ($7390)
                .byte $DD,$AB,$AB,$AB,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD  ; ($73A0)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD  ; ($73B0)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD  ; ($73C0)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD  ; ($73D0)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$AB,$AB,$AB,$DD,$DD,$DD,$DD  ; ($73E0)
                .byte $DD,$AB,$AB,$AB,$DD,$DD,$DD,$DD,$DD,$AB,$AB,$AB,$DD,$DD,$DD,$DD  ; ($73F0)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD  ; ($7400)
                .byte $DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD,$DD  ; ($7410)
                .byte $FF,$68,$EE,$DF,$35,$5F,$FF,$E8,$FD,$EE,$FF,$FF,$FF,$EA,$FF,$16  ; ($7420)
                .byte $FF,$15,$FF,$00,$DE,$5F,$A1,$5D,$FE,$EA,$FE,$5F,$FF,$FD,$FF,$FF  ; ($7430)
                .byte $FD,$FE,$FD,$90,$FF,$DF,$FC,$00,$00,$EA,$FF,$DF,$FD,$EA,$FF,$FF  ; ($7440)
                .byte $FF,$FF,$FF,$00,$FF,$00,$FF,$15,$FD,$95,$FF,$4C,$FF,$00,$5F,$FD  ; ($7450)
                .byte $FD,$FF,$7A,$DF,$FD,$00,$DE,$E8,$FD,$A0,$FF,$FF,$FF,$E8,$FF,$00  ; ($7460)
                .byte $DF,$15,$5F,$00,$FB,$5F,$00,$F8,$31,$DF,$22,$5D,$FF,$FD,$58,$48  ; ($7470)
                .byte $AC,$A0,$04,$A0,$9F,$A2,$00,$3F,$00,$A0,$00,$FF,$DF,$B5,$00,$A0  ; ($7480)
                .byte $0C,$AD,$00,$FF,$15,$FF,$00,$FF,$00,$A0,$00,$BF,$00,$FF,$20,$B5  ; ($7490)
                .byte $00,$BF,$7F,$20,$DF,$A0,$A0,$3F,$3B,$BF,$80,$A0,$88,$BE,$E8,$B5  ; ($74A0)
                .byte $00,$FF,$00,$FF,$BD,$A0,$FE,$BA,$80,$37,$15,$A0,$AA,$BF,$38,$00  ; ($74B0)
                .byte $C8,$FD,$00,$FD,$95,$A0,$FB,$FF,$FD,$37,$00,$A0,$FD,$BD,$00,$A0  ; ($74C0)
                .byte $00,$A8,$80,$FF,$15,$FF,$00,$FF,$00,$FF,$00,$BF,$00,$FF,$A0,$B6  ; ($74D0)
                .byte $80,$E8,$85,$A0,$00,$FF,$A5,$3F,$00,$FF,$00,$A0,$1D,$BF,$00,$FF  ; ($74E0)
                .byte $A0,$FF,$A0,$FF,$24,$A4,$FF,$BF,$DE,$A0,$DD,$FF,$3F,$BF,$FF,$FF  ; ($74F0)
                .byte $FB,$FF,$FF,$FF,$FD,$FD,$FF,$FD,$FF,$5F,$FF,$04,$20,$FE,$FF,$FF  ; ($7500)
                .byte $FF,$FA,$FF,$00,$FF,$00,$FF,$01,$FF,$DF,$FF,$4C,$FF,$00,$DF,$FE  ; ($7510)
                .byte $FF,$68,$EE,$DF,$35,$5F,$FF,$E8,$FD,$EE,$FF,$FF,$FF,$EA,$FF,$1E  ; ($7520)
                .byte $FF,$15,$FF,$00,$FE,$5F,$A1,$5D,$FF,$EA,$FA,$5F,$FF,$FD,$FF,$FF  ; ($7530)
                .byte $FD,$F7,$FD,$B0,$FF,$DF,$FC,$00,$19,$EA,$FF,$DF,$FC,$EA,$FF,$FF  ; ($7540)
                .byte $FF,$FF,$FF,$00,$FF,$00,$FF,$15,$FD,$95,$FF,$4C,$FF,$00,$5F,$FD  ; ($7550)
                .byte $FD,$FF,$7A,$DF,$FD,$00,$FE,$E8,$FD,$A0,$FF,$FF,$FF,$E8,$FF,$00  ; ($7560)
                .byte $DF,$15,$5F,$00,$FB,$5F,$00,$FC,$7F,$DF,$22,$55,$FF,$FD,$48,$40  ; ($7570)
                .byte $AC,$A0,$04,$A0,$9F,$A2,$00,$3F,$00,$A0,$00,$FF,$DF,$BD,$00,$A0  ; ($7580)
                .byte $0C,$AD,$00,$FF,$15,$FF,$00,$FF,$00,$A0,$00,$BF,$00,$FF,$20,$B5  ; ($7590)
                .byte $00,$BF,$7F,$20,$DF,$A0,$A0,$3F,$3B,$BF,$80,$A0,$88,$BF,$E8,$B5  ; ($75A0)
                .byte $00,$FF,$00,$FF,$FD,$A0,$FE,$BB,$80,$37,$15,$A0,$EA,$BF,$B9,$28  ; ($75B0)
                .byte $C8,$FD,$00,$FD,$95,$A0,$FB,$FF,$BC,$37,$00,$A0,$FD,$FD,$00,$A2  ; ($75C0)
                .byte $00,$A8,$80,$FF,$15,$FF,$00,$FF,$00,$FF,$00,$BF,$00,$FF,$A0,$B6  ; ($75D0)
                .byte $80,$E8,$85,$A0,$00,$FF,$A5,$3F,$00,$FF,$00,$A0,$1D,$BF,$00,$FF  ; ($75E0)
                .byte $A0,$FF,$A0,$FF,$24,$A4,$FF,$BB,$96,$A0,$DD,$FF,$3F,$BF,$FF,$FF  ; ($75F0)
                .byte $FB,$FF,$FF,$DF,$ED,$FD,$FF,$FD,$FF,$5F,$FF,$04,$00,$DE,$FF,$DF  ; ($7600)
                .byte $FF,$FA,$FF,$00,$FF,$00,$FF,$00,$FF,$DF,$FF,$4C,$FF,$00,$DF,$FE  ; ($7610)
                .byte $FF,$68,$6E,$DF,$35,$5F,$FF,$E8,$FD,$EE,$FF,$FF,$FF,$EA,$FF,$16  ; ($7620)
                .byte $FF,$15,$FF,$00,$CE,$5F,$A1,$5D,$FE,$EA,$FE,$5F,$FF,$FD,$FF,$FF  ; ($7630)
                .byte $FF,$FF,$FF,$92,$FF,$DF,$FC,$00,$00,$EA,$FF,$DF,$FF,$EA,$FF,$FF  ; ($7640)
                .byte $FF,$FF,$FF,$00,$FF,$00,$FF,$15,$FF,$95,$FF,$4C,$FF,$00,$5F,$FD  ; ($7650)
                .byte $FF,$FF,$7A,$DF,$FF,$00,$DE,$E8,$FF,$A0,$FF,$FF,$FF,$E8,$FF,$00  ; ($7660)
                .byte $DF,$15,$5F,$00,$DB,$5F,$00,$FC,$35,$DF,$22,$55,$FF,$FC,$58,$48  ; ($7670)
                .byte $AC,$A0,$04,$A0,$9F,$A2,$00,$3F,$00,$A0,$00,$FF,$DF,$B1,$00,$A0  ; ($7680)
                .byte $4C,$AD,$00,$FF,$15,$FF,$00,$FF,$00,$A0,$00,$BF,$00,$FF,$20,$B5  ; ($7690)
                .byte $00,$BF,$7F,$20,$DF,$A0,$A0,$3F,$3B,$BF,$80,$A0,$88,$BE,$E8,$B5  ; ($76A0)
                .byte $00,$FF,$00,$FF,$FD,$A0,$FE,$BA,$80,$37,$15,$A0,$EA,$BF,$78,$20  ; ($76B0)
                .byte $C8,$FD,$00,$FD,$95,$A0,$FB,$FF,$FF,$37,$00,$A0,$FD,$FD,$00,$A2  ; ($76C0)
                .byte $40,$E8,$80,$FF,$15,$FF,$04,$FF,$00,$FF,$00,$BF,$00,$FF,$A0,$B2  ; ($76D0)
                .byte $80,$E8,$85,$A0,$00,$FF,$A5,$3F,$00,$FF,$00,$A0,$1D,$BF,$00,$FF  ; ($76E0)
                .byte $A0,$FF,$A0,$FF,$24,$A4,$FF,$FF,$DE,$A0,$DD,$FF,$3F,$BF,$FF,$FF  ; ($76F0)
                .byte $FB,$FF,$FF,$DF,$FF,$FD,$FF,$FD,$FF,$5F,$FF,$04,$20,$DE,$FF,$DF  ; ($7700)
                .byte $FF,$FA,$FF,$00,$FF,$00,$FF,$01,$FF,$DF,$FF,$4C,$FF,$00,$DF,$FE  ; ($7710)
                .byte $FF,$68,$6E,$DF,$37,$5F,$FF,$E8,$FF,$EE,$FF,$FF,$FF,$EA,$FF,$16  ; ($7720)
                .byte $FF,$15,$FF,$00,$DE,$5F,$A1,$5D,$FF,$EA,$FE,$5F,$FF,$FD,$FF,$FF  ; ($7730)
                .byte $FF,$F7,$FF,$92,$FF,$DF,$FF,$00,$5B,$EA,$FF,$DF,$FF,$EA,$FF,$FF  ; ($7740)
                .byte $FF,$FF,$FF,$00,$FF,$00,$FF,$15,$FF,$95,$FF,$4C,$FF,$00,$5F,$FD  ; ($7750)
                .byte $FF,$FF,$7A,$DF,$FF,$00,$FE,$E8,$FF,$A4,$FF,$FF,$FF,$E8,$FF,$00  ; ($7760)
                .byte $DF,$15,$5F,$00,$FF,$5F,$00,$FC,$7F,$DF,$22,$55,$FF,$FD,$40,$40  ; ($7770)
                .byte $AC,$A0,$04,$A0,$9F,$A2,$00,$3F,$00,$A0,$00,$FF,$DF,$BD,$00,$A0  ; ($7780)
                .byte $0C,$AD,$00,$FF,$15,$FF,$00,$FF,$00,$A0,$00,$FF,$00,$FF,$20,$B5  ; ($7790)
                .byte $00,$BF,$7F,$20,$DF,$A0,$A0,$3F,$2B,$BF,$80,$A0,$88,$BF,$E8,$B5  ; ($77A0)
                .byte $00,$FF,$00,$FF,$FD,$A0,$FE,$FB,$80,$37,$15,$A0,$EA,$BF,$F9,$20  ; ($77B0)
                .byte $CA,$FD,$02,$FF,$95,$A0,$FB,$FF,$BE,$37,$02,$A0,$FF,$FD,$00,$A2  ; ($77C0)
                .byte $00,$E8,$80,$FF,$15,$FF,$00,$FF,$02,$FF,$00,$FF,$00,$FF,$A0,$B6  ; ($77D0)
                .byte $82,$E8,$87,$A0,$02,$FF,$A5,$3F,$00,$FF,$00,$A0,$1D,$BF,$02,$FF  ; ($77E0)
                .byte $A0,$FF,$A0,$FF,$24,$A4,$FF,$FF,$96,$A0,$DD,$FF,$3F,$BF,$FF,$FF  ; ($77F0)
                .byte $FB,$FF,$FF,$FF,$ED,$FD,$FF,$FD,$FF,$5F,$FF,$04,$20,$DE,$FF,$DF  ; ($7800)
                .byte $FF,$FA,$FF,$00,$FF,$00,$FF,$00,$FF,$DF,$FF,$4C,$FF,$00,$DF,$FE  ; ($7810)
                .byte $FF,$68,$EE,$DF,$35,$5F,$FF,$E8,$FD,$EE,$FF,$FF,$FF,$EA,$FF,$16  ; ($7820)
                .byte $FF,$15,$FF,$00,$CE,$5F,$A1,$5D,$FE,$EA,$FE,$5F,$FF,$FD,$FF,$FF  ; ($7830)
                .byte $FD,$FE,$FD,$B0,$FF,$DF,$FC,$00,$00,$EA,$FF,$DF,$FD,$EA,$FF,$FF  ; ($7840)
                .byte $FF,$FF,$FF,$00,$FF,$00,$FF,$15,$FD,$95,$FF,$4C,$FF,$00,$5F,$FD  ; ($7850)
                .byte $FD,$FF,$78,$DF,$FD,$00,$FE,$E8,$FD,$A4,$FF,$FF,$FF,$E8,$FF,$00  ; ($7860)
                .byte $DF,$15,$5F,$00,$FF,$5F,$00,$FC,$35,$DF,$22,$55,$FF,$FD,$5C,$48  ; ($7870)
                .byte $AC,$A0,$04,$A0,$9F,$A2,$00,$3F,$00,$A0,$00,$FF,$DF,$B1,$00,$A0  ; ($7880)
                .byte $4C,$AC,$00,$FF,$15,$FF,$00,$FF,$00,$A0,$00,$BF,$00,$FF,$20,$B5  ; ($7890)
                .byte $00,$BF,$7F,$20,$DF,$A0,$A0,$3F,$3B,$BF,$80,$A0,$88,$BE,$E8,$B5  ; ($78A0)
                .byte $00,$FF,$00,$FF,$FD,$A0,$FE,$BA,$80,$37,$15,$A0,$AA,$BF,$38,$20  ; ($78B0)
                .byte $CA,$FD,$02,$FF,$95,$A0,$FB,$FF,$FF,$37,$02,$A0,$FF,$B5,$00,$A2  ; ($78C0)
                .byte $40,$A8,$80,$FF,$15,$FF,$04,$FF,$02,$FF,$00,$BF,$00,$FF,$A0,$B6  ; ($78D0)
                .byte $82,$E8,$87,$A0,$02,$FF,$A5,$3F,$02,$FF,$00,$A0,$1D,$BF,$00,$FF  ; ($78E0)
                .byte $A0,$FF,$A0,$FF,$24,$A4,$FF,$FF,$DE,$A0,$DD,$FF,$3F,$BF,$FF,$FF  ; ($78F0)
                .byte $FB,$FF,$FF,$DF,$FF,$FD,$FF,$FD,$FF,$5F,$FF,$04,$20,$DE,$FF,$DF  ; ($7900)
                .byte $FF,$FA,$FF,$00,$FF,$00,$FF,$00,$FF,$DF,$FF,$4C,$FF,$00,$DF,$FE  ; ($7910)
                .byte $FF,$68,$6E,$DF,$37,$5F,$FF,$E8,$FF,$EE,$FF,$FF,$FF,$E8,$FF,$1E  ; ($7920)
                .byte $FF,$15,$FF,$00,$DE,$5F,$A1,$5D,$FE,$EA,$FA,$5F,$FF,$FD,$FF,$FF  ; ($7930)
                .byte $FD,$FF,$FD,$90,$FF,$DF,$FD,$00,$5B,$EA,$FF,$DF,$FC,$EA,$FF,$FF  ; ($7940)
                .byte $FF,$FF,$FF,$00,$FF,$00,$FF,$15,$FD,$95,$FF,$4C,$FF,$00,$5F,$FD  ; ($7950)
                .byte $FD,$FF,$7A,$DF,$FD,$00,$FE,$E8,$FD,$A0,$FF,$FF,$FF,$E8,$FF,$00  ; ($7960)
                .byte $DF,$15,$5F,$00,$FB,$5F,$00,$F8,$7F,$DF,$22,$55,$FF,$FC,$48,$40  ; ($7970)
                .byte $AC,$A0,$04,$A0,$9D,$A2,$00,$BF,$00,$A0,$00,$FF,$DF,$BD,$00,$A0  ; ($7980)
                .byte $0C,$AD,$00,$FF,$15,$FF,$00,$FF,$00,$A0,$00,$FF,$00,$FF,$20,$B5  ; ($7990)
                .byte $00,$BF,$7F,$20,$DF,$A0,$A0,$BF,$3B,$BF,$80,$A0,$88,$BF,$E8,$F5  ; ($79A0)
                .byte $00,$FF,$00,$FF,$FD,$A0,$FE,$FB,$00,$37,$15,$A0,$EA,$BF,$F9,$20  ; ($79B0)
                .byte $C8,$FD,$00,$FD,$95,$A0,$FB,$FF,$BC,$37,$00,$A0,$FD,$FD,$00,$AE  ; ($79C0)
                .byte $00,$E8,$80,$FF,$15,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$A0,$B6  ; ($79D0)
                .byte $80,$E8,$85,$A0,$00,$FF,$A5,$BF,$00,$FF,$00,$A0,$1D,$BF,$00,$FF  ; ($79E0)
                .byte $A0,$FF,$A0,$FF,$24,$A4,$FF,$FF,$94,$A0,$DD,$FF,$3F,$BF,$FF,$FF  ; ($79F0)
                .byte $FB,$FF,$FF,$FF,$ED,$FD,$FF,$FD,$FF,$5F,$FF,$04,$20,$DE,$FF,$FF  ; ($7A00)
                .byte $FF,$FA,$FF,$00,$FF,$00,$FF,$00,$09,$19,$1A,$81,$21,$41,$00,$0E  ; ($7A10)
                .byte $06,$00,$00,$70,$B6,$4E,$E2,$ED,$F8,$03,$04,$03,$E4,$6C,$00,$6C  ; ($7A20)
                .byte $06,$41,$1A,$03,$36,$02,$A1,$0D,$0F,$EA,$FE,$5F,$FF,$FD,$FF,$FF  ; ($7A30)
L7A40
                LDA #$09                                  ; ($7A40)
                STA $7A18                                 ; ($7A42)
                LDA #$19                                  ; ($7A45)
                STA $7A19                                 ; ($7A47)
                LDA #$1A                                  ; ($7A4A)
                STA $7A1A                                 ; ($7A4C)
                LDA #$81                                  ; ($7A4F)
                STA $7A1B                                 ; ($7A51)
                LDA #$21                                  ; ($7A54)
                STA $7A1C                                 ; ($7A56)
                LDA #$41                                  ; ($7A59)
                STA $7A1D                                 ; ($7A5B)
                LDA #$00                                  ; ($7A5E)
                STA $7A1E                                 ; ($7A60)
                LDA #$0E                                  ; ($7A63)
                STA $7A1F                                 ; ($7A65)
                LDA #$06                                  ; ($7A68)
                STA $7A20                                 ; ($7A6A)
                LDA #$09                                  ; ($7A6D)
                STA $D415                                 ; ($7A6F)
                LDA #$73                                  ; ($7A72)
                STA $D416                                 ; ($7A74)
                LDA #$05                                  ; ($7A77)
                STA SID_FilterResonance                   ; ($7A79)
                LDA #$3F                                  ; ($7A7C)
                STA SID_VolumeFilter                      ; ($7A7E)
L7A81
                LDA #$00                                  ; ($7A81)
                STA $7A23                                 ; ($7A83)
                LDA #$E0                                  ; ($7A86)
                STA $7A26                                 ; ($7A88)
                LDA #$D1                                  ; ($7A8B)
                STA $7A24                                 ; ($7A8D)
                LDA #$EA                                  ; ($7A90)
                STA $7A27                                 ; ($7A92)
                LDA #$55                                  ; ($7A95)
                STA $7A25                                 ; ($7A97)
                LDA #$F7                                  ; ($7A9A)
                STA $7A28                                 ; ($7A9C)
                LDA #$08                                  ; ($7A9F)
                STA $7A29                                 ; ($7AA1)
                STA $7A2A                                 ; ($7AA4)
                STA $7A2B                                 ; ($7AA7)
                RTS                                       ; ($7AAA)
L7AAB
                JSR L7B98                                 ; ($7AAB)
                LDA $7A21                                 ; ($7AAE)
                BEQ L7AD3                                 ; ($7AB1)
                INC $7A22                                 ; ($7AB3)
                LDA $7A22                                 ; ($7AB6)
                CMP #$02                                  ; ($7AB9)
                BCC L7AD0                                 ; ($7ABB)
L7ABD
                LDA #$00                                  ; ($7ABD)
                STA $7A22                                 ; ($7ABF)
                LDA $7A21                                 ; ($7AC2)
                CLC                                       ; ($7AC5)
                ADC #$01                                  ; ($7AC6)
                AND #$01                                  ; ($7AC8)
                STA $7A21                                 ; ($7ACA)
                JSR L7AE0                                 ; ($7ACD)
L7AD0
                JMP L7B86                                 ; ($7AD0)
L7AD3
                INC $7A22                                 ; ($7AD3)
                LDA $7A22                                 ; ($7AD6)
                CMP #$03                                  ; ($7AD9)
                BCC L7AD0                                 ; ($7ADB)
                JMP L7ABD                                 ; ($7ADD)
L7AE0
                LDX #$00                                  ; ($7AE0)
L7AE2
                LDA $7A23,X                               ; ($7AE2)
                STA $D9                                   ; ($7AE5)
                LDA $7A26,X                               ; ($7AE7)
                STA $DA                                   ; ($7AEA)
                LDA $7A18,X                               ; ($7AEC)
                STA $7A32                                 ; ($7AEF)
                LDA $7A1B,X                               ; ($7AF2)
                STA $7A31                                 ; ($7AF5)
                LDA $7A1E,X                               ; ($7AF8)
                STA $7A30                                 ; ($7AFB)
                LDA $7A29,X                               ; ($7AFE)
                STA $7A33                                 ; ($7B01)
                STX $7A35                                 ; ($7B04)
                JSR L7B23                                 ; ($7B07)
                LDX $7A35                                 ; ($7B0A)
                LDA $7A33                                 ; ($7B0D)
                STA $7A29,X                               ; ($7B10)
                LDA $D9                                   ; ($7B13)
                STA $7A23,X                               ; ($7B15)
                LDA $DA                                   ; ($7B18)
                STA $7A26,X                               ; ($7B1A)
                INX                                       ; ($7B1D)
                CPX #$03                                  ; ($7B1E)
                BNE L7AE2                                 ; ($7B20)
L7B22
                RTS                                       ; ($7B22)
L7B23
                DEC $7A33                                 ; ($7B23)
                LDA $7A33                                 ; ($7B26)
                BNE L7B22                                 ; ($7B29)
                LDA $7BC8,X                               ; ($7B2B)
                TAX                                       ; ($7B2E)
                LDY #$00                                  ; ($7B2F)
                TYA                                       ; ($7B31)
                STA SID_Voice1_Control,X                  ; ($7B32)
                LDA $7A32                                 ; ($7B35)
                STA SID_Voice1_Attack_Decay,X             ; ($7B38)
                JSR L7B73                                 ; ($7B3B)
                STA SID_Voice1_Freq_Hi,X                  ; ($7B3E)
                INY                                       ; ($7B41)
                JSR L7B73                                 ; ($7B42)
                STA SID_Voice1_Freq_Lo,X                  ; ($7B45)
                STA $7A2F                                 ; ($7B48)
                LDA $7A30                                 ; ($7B4B)
                STA $D403,X                               ; ($7B4E)
                LDA $7A31                                 ; ($7B51)
                STA SID_Voice1_Control,X                  ; ($7B54)
                INY                                       ; ($7B57)
                JSR L7B73                                 ; ($7B58)
                STA $7A33                                 ; ($7B5B)
                LDA $D9                                   ; ($7B5E)
                CLC                                       ; ($7B60)
                ADC #$03                                  ; ($7B61)
                STA $D9                                   ; ($7B63)
                BCC L7B69                                 ; ($7B65)
                INC $DA                                   ; ($7B67)
L7B69
                LDX $7A35                                 ; ($7B69)
                LDA $7A2F                                 ; ($7B6C)
                STA $7A2C,X                               ; ($7B6F)
                RTS                                       ; ($7B72)
L7B73
                LDA $01                                   ; ($7B73)
                STA $7A34                                 ; ($7B75)
                LDA #$00                                  ; ($7B78)
                STA $01                                   ; ($7B7A)
                LDA ($D9),Y                               ; ($7B7C)
                PHA                                       ; ($7B7E)
                LDA $7A34                                 ; ($7B7F)
                STA $01                                   ; ($7B82)
                PLA                                       ; ($7B84)
                RTS                                       ; ($7B85)
L7B86
                LDA $7A23                                 ; ($7B86)
                CMP #$D1                                  ; ($7B89)
                BNE L7B97                                 ; ($7B8B)
                LDA $7A26                                 ; ($7B8D)
                CMP #$EA                                  ; ($7B90)
                BNE L7B97                                 ; ($7B92)
                JMP L7A81                                 ; ($7B94)
L7B97
                RTS                                       ; ($7B97)
L7B98
                LDX #$00                                  ; ($7B98)
                JMP L7BB6                                 ; ($7B9A)
L7B9D
                LDA $7BC8,X                               ; ($7B9D)
                TAY                                       ; ($7BA0)
                LDA $7A36,X                               ; ($7BA1)
                CLC                                       ; ($7BA4)
                ADC #$04                                  ; ($7BA5)
                AND #$0F                                  ; ($7BA7)
                STA $7A36,X                               ; ($7BA9)
                CLC                                       ; ($7BAC)
                ADC $7A2C,X                               ; ($7BAD)
                STA SID_Voice1_Freq_Lo,Y                  ; ($7BB0)
                JMP L7BC2                                 ; ($7BB3)
L7BB6
                LDA $7A2C,X                               ; ($7BB6)
                CLC                                       ; ($7BB9)
                ADC #$0A                                  ; ($7BBA)
                STA $7A2C,X                               ; ($7BBC)
                STA SID_Voice1_Freq_Lo                    ; ($7BBF)
L7BC2
                INX                                       ; ($7BC2)
                CPX #$03                                  ; ($7BC3)
                BCC L7B9D                                 ; ($7BC5)
                RTS                                       ; ($7BC7)
                .byte $00,$07,$0E,$A1,$FF,$FD,$20,$AB,$00,$E8,$80,$FF,$15,$FF,$00,$FF  ; ($7BC8)
                .byte $02,$FF,$00,$FF,$00,$FF,$A0,$B6,$82,$E8,$87,$A0,$02,$FF,$A5,$BF  ; ($7BD8)
                .byte $02,$FF,$00,$A0,$1D,$BF,$02,$FF,$A0,$FF,$A0,$FF,$24,$A4,$FF,$FB  ; ($7BE8)
                .byte $90,$A0,$DD,$FF,$BF,$BF,$FF,$FF,$FB,$FF,$FF,$FF,$ED,$FD,$FF,$FD  ; ($7BF8)
                .byte $FF,$5F,$FF,$04,$20,$DE,$FF,$DF,$FF,$FA,$FF,$00,$FF,$00,$FF,$00  ; ($7C08)
                .byte $FF,$DF,$FF,$4C,$FF,$00,$DF,$FE,$FF,$68,$EE,$DF,$35,$5F,$FF,$E8  ; ($7C18)
                .byte $FD,$EE,$FF,$FF,$FF,$EA,$FF,$16,$FF,$15,$FF,$00,$CE,$5F,$A1,$5D  ; ($7C28)
                .byte $FE,$EA,$FE,$5F,$FF,$FD,$FF,$FF,$FD,$EF,$FD,$B0,$FF,$DF,$FC,$00  ; ($7C38)
                .byte $00,$EA,$FF,$DF,$FD,$EA,$FF,$FF,$FF,$FF,$FF,$00,$FF,$00,$FF,$15  ; ($7C48)
                .byte $FD,$95,$FF,$4C,$FF,$00,$5F,$FD,$FD,$FF,$78,$DF,$FD,$00,$FE,$E8  ; ($7C58)
                .byte $FD,$A0,$FF,$FF,$FF,$E8,$FF,$00,$DF,$15,$5F,$00,$FB,$5B,$00,$F8  ; ($7C68)
                .byte $31,$DF,$22,$5D,$FF,$FD,$48,$48,$AC,$A0,$04,$A0,$9F,$A2,$08,$3F  ; ($7C78)
                .byte $00,$A0,$00,$FF,$DF,$B5,$00,$A0,$4C,$AC,$00,$FF,$15,$FF,$00,$FF  ; ($7C88)
                .byte $00,$A0,$00,$BF,$00,$FF,$20,$B5,$00,$BF,$7F,$20,$DF,$A0,$A0,$3F  ; ($7C98)
                .byte $3B,$BF,$80,$A0,$88,$BE,$E8,$B5,$00,$FF,$00,$FF,$FD,$A0,$FE,$BA  ; ($7CA8)
                .byte $80,$37,$15,$A0,$EA,$BF,$F8,$20,$C8,$FD,$00,$FD,$95,$A0,$FB,$FF  ; ($7CB8)
                .byte $FF,$37,$00,$A0,$FD,$F5,$00,$A2,$48,$A8,$80,$FF,$15,$FF,$04,$FF  ; ($7CC8)
                .byte $00,$FF,$00,$BF,$00,$FF,$A0,$B6,$80,$E8,$85,$A0,$00,$FF,$A5,$3F  ; ($7CD8)
                .byte $00,$FF,$00,$A0,$1D,$BF,$00,$FF,$A0,$FF,$A0,$FF,$24,$A4,$FF,$FF  ; ($7CE8)
                .byte $DE,$A0,$DD,$FF,$3F,$BF,$FF,$FF,$FB,$FF,$FF,$FF,$FF,$FD,$FF,$FD  ; ($7CF8)
                .byte $FF,$5F,$FF,$04,$20,$FE,$FF,$FF,$FF,$FA,$FF,$00,$FF,$00,$FF,$00  ; ($7D08)
                .byte $FF,$DF,$FF,$4C,$FF,$00,$DF,$FE,$FF,$68,$EE,$DF,$37,$5F,$FF,$E8  ; ($7D18)
                .byte $FF,$EE,$FF,$FF,$FF,$E8,$FF,$1E,$FF,$15,$FF,$00,$FE,$5F,$A3,$5D  ; ($7D28)
                .byte $FF,$EA,$FA,$5F,$FF,$FD,$FF,$FF,$FD,$F7,$FD,$B0,$FF,$DF,$FD,$00  ; ($7D38)
                .byte $5F,$EA,$FF,$DF,$FD,$EA,$FF,$FF,$FF,$FF,$FF,$00,$FF,$00,$FF,$15  ; ($7D48)
                .byte $FD,$95,$FF,$4C,$FF,$00,$5F,$FD,$FD,$FF,$7A,$DF,$FD,$00,$FE,$E8  ; ($7D58)
                .byte $FD,$A4,$FF,$FF,$FF,$E8,$FF,$00,$DF,$15,$5F,$00,$FF,$5F,$02,$FC  ; ($7D68)
                .byte $7F,$DF,$22,$55,$FF,$FD,$48,$40,$AC,$A0,$04,$A0,$9D,$A2,$00,$BF  ; ($7D78)
                .byte $00,$A0,$00,$FF,$DF,$BD,$00,$A0,$0C,$AD,$00,$FF,$15,$FF,$00,$FF  ; ($7D88)
                .byte $00,$A0,$00,$FF,$00,$FF,$20,$B5,$00,$BF,$7F,$20,$DD,$A0,$A0,$BF  ; ($7D98)
                .byte $29,$BF,$80,$A0,$88,$BF,$E8,$F5,$00,$FF,$00,$FF,$FD,$A0,$FE,$BB  ; ($7DA8)
                .byte $00,$37,$15,$A0,$EA,$BF,$FC,$20,$C8,$FD,$00,$FD,$95,$A0,$E9,$FF  ; ($7DB8)
                .byte $A4,$37,$00,$A0,$FD,$FD,$00,$AE,$00,$E8,$80,$FF,$15,$FF,$00,$FF  ; ($7DC8)
                .byte $00,$FF,$00,$FF,$00,$FF,$A0,$B6,$80,$E8,$85,$A0,$00,$FF,$A5,$BF  ; ($7DD8)
                .byte $00,$FF,$00,$A0,$1D,$BF,$00,$FF,$A0,$FF,$A0,$FF,$24,$A4,$FF,$FF  ; ($7DE8)
                .byte $90,$A0,$DD,$FF,$BF,$BF,$FF,$FF,$FB,$FF,$FF,$FF,$EC,$FD,$FF,$FD  ; ($7DF8)
                .byte $FF,$5F,$FF,$04,$20,$DE,$FF,$DF,$FF,$FA,$FF,$00,$FF,$00,$FF,$01  ; ($7E08)
                .byte $FF,$DF,$FF,$4C,$FF,$00,$DF,$FE,$FF,$68,$6E,$DF,$35,$5F,$FF,$E8  ; ($7E18)
                .byte $FD,$EE,$FF,$FF,$FF,$EA,$FF,$16,$FF,$15,$FF,$00,$CE,$5F,$A1,$5D  ; ($7E28)
                .byte $FF,$EA,$FE,$5F,$FF,$FD,$FF,$FF,$FD,$FF,$FD,$B0,$FF,$DF,$FC,$00  ; ($7E38)
                .byte $00,$EA,$FF,$DF,$FC,$EA,$FF,$FF,$FF,$FF,$FF,$00,$FF,$00,$FF,$15  ; ($7E48)
                .byte $FD,$95,$FF,$4C,$FF,$00,$5F,$FD,$FD,$FF,$78,$DF,$FD,$00,$FE,$E8  ; ($7E58)
                .byte $FD,$A0,$FF,$FF,$FF,$E8,$FF,$00,$DF,$15,$5F,$00,$FB,$5F,$00,$F8  ; ($7E68)
                .byte $71,$DF,$22,$55,$FF,$FC,$48,$48,$AC,$A0,$04,$A0,$9F,$A2,$00,$3F  ; ($7E78)
                .byte $00,$A0,$00,$FF,$DF,$B5,$00,$A0,$4C,$AD,$00,$FF,$15,$FF,$00,$FF  ; ($7E88)
                .byte $00,$A0,$00,$BF,$00,$FF,$20,$B5,$00,$BF,$7F,$20,$DF,$A0,$A0,$3F  ; ($7E98)
                .byte $3B,$BF,$80,$A0,$88,$BE,$E8,$B5,$00,$FF,$00,$FF,$BD,$A0,$FE,$BA  ; ($7EA8)
                .byte $80,$37,$15,$A0,$AA,$BF,$38,$20,$CA,$FD,$02,$FF,$95,$A0,$FB,$FF  ; ($7EB8)
                .byte $FF,$37,$02,$A0,$FF,$B5,$00,$A6,$40,$A0,$80,$FF,$15,$FF,$04,$FF  ; ($7EC8)
                .byte $02,$FF,$00,$BF,$00,$FF,$A0,$B6,$82,$E8,$87,$A0,$02,$FF,$A5,$3F  ; ($7ED8)
                .byte $02,$FF,$00,$A0,$1D,$BF,$00,$FF,$A0,$FF,$A0,$FF,$24,$A4,$FF,$BF  ; ($7EE8)
                .byte $DE,$A0,$DD,$FF,$3F,$BF,$FF,$FF,$FB,$FF,$FF,$DF,$FF,$FD,$FF,$FD  ; ($7EF8)
                .byte $FF,$5F,$FF,$04,$60,$FE,$FF,$FF,$FF,$FA,$FF,$00,$FF,$00,$FF,$00  ; ($7F08)
                .byte $FF,$DF,$FF,$4C,$FF,$00,$DF,$FE,$FF,$68,$EE,$DF,$37,$5F,$FF,$E8  ; ($7F18)
                .byte $FF,$EE,$FF,$FF,$FF,$E8,$FF,$16,$FF,$15,$FF,$00,$FE,$5F,$AB,$5D  ; ($7F28)
                .byte $FF,$EA,$FA,$5F,$FF,$FD,$FF,$FF,$FF,$D7,$FF,$92,$FF,$DF,$FF,$00  ; ($7F38)
                .byte $5F,$EA,$FF,$DF,$FF,$EA,$FF,$FF,$FF,$FF,$FF,$00,$FF,$00,$FF,$15  ; ($7F48)
                .byte $FF,$95,$FF,$4C,$FF,$00,$5F,$FD,$FF,$FF,$7A,$DF,$FF,$00,$FE,$E8  ; ($7F58)
                .byte $FF,$A0,$FF,$FF,$FF,$E8,$FF,$00,$DF,$15,$5F,$00,$FF,$5F,$0A,$E8  ; ($7F68)
                .byte $7F,$DF,$2A,$55,$FF,$FD,$48,$40,$AC,$A0,$04,$A0,$9F,$A2,$00,$BF  ; ($7F78)
                .byte $00,$A2,$00,$FF,$DF,$BD,$00,$A0,$0C,$AD,$00,$FF,$15,$FF,$00,$FF  ; ($7F88)
                .byte $00,$A0,$00,$FF,$02,$FF,$20,$B5,$00,$BF,$7F,$A0,$DD,$A0,$A0,$BF  ; ($7F98)
                .byte $A9,$BF,$80,$A0,$88,$BF,$E8,$FD,$00,$FF,$00,$FF,$FD,$A0,$FC,$BF  ; ($7FA8)
                .byte $00,$37,$15,$A0,$EE,$BF,$FF,$20,$4A,$FD,$02,$FF,$97,$A0,$EB,$FF  ; ($7FB8)
                .byte $A4,$37,$02,$A0,$FF,$FD,$00,$AE,$04,$E8,$80,$FF,$15,$FF,$00,$FF  ; ($7FC8)
                .byte $02,$FF,$00,$FF,$02,$FF,$A0,$B6,$82,$E8,$87,$A0,$02,$FF,$A5,$BF  ; ($7FD8)
                .byte $02,$FF,$00,$A0,$1D,$BF,$02,$FF,$A0,$FF,$A0,$FF,$24,$A4,$FF,$FF  ; ($7FE8)
                .byte $94,$A0,$DD,$FF,$BF,$BF,$FF,$FF,$00,$5A,$15,$60,$C3,$C2,$CD,$38  ; ($7FF8)
                .byte $30,$A2,$30,$8E,$8D,$83,$15,$64,$64,$6B,$15,$8E,$8D,$15,$8B,$8E  ; ($8008)
                .byte $82,$80,$93,$88,$8E,$8D,$9A,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8018)
                .byte $15,$15,$15,$15,$89,$80,$8C,$84,$92,$15,$81,$8E,$8D,$83,$15,$64  ; ($8028)
                .byte $64,$6B,$15,$8E,$8D,$15,$8B,$8E,$82,$80,$93,$88,$8E,$8D,$9A,$15  ; ($8038)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$9F,$8C,$A0,$15  ; ($8048)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8058)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8068)
                .byte $15,$15,$15,$15,$87,$90,$9A,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8078)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8088)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$98,$8E,$94,$91  ; ($8098)
                .byte $15,$91,$84,$85,$9E,$80,$95,$93,$80,$8A,$15,$15,$15,$15,$15,$15  ; ($80A8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($80B8)
                .byte $15,$15,$15,$15,$8E,$94,$91,$15,$15,$91,$84,$85,$9E,$91,$8C,$9C  ; ($80C8)
                .byte $8C,$8F,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($80D8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$96,$84,$8B,$8B  ; ($80E8)
                .byte $15,$83,$8E,$8D,$84,$15,$64,$64,$6B,$15,$15,$15,$15,$15,$15,$15  ; ($80F8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8108)
                .byte $15,$15,$15,$15,$98,$8E,$94,$91,$15,$82,$8E,$83,$84,$15,$85,$8E  ; ($8118)
                .byte $91,$15,$82,$88,$93,$98,$15,$87,$80,$8B,$8B,$15,$88,$92,$9A,$9A  ; ($8128)
                .byte $9A,$9A,$9A,$15,$15,$15,$15,$15,$15,$15,$15,$15,$82,$82,$8F,$87  ; ($8138)
                .byte $89,$9A,$9A,$9A,$9A,$9A,$92,$93,$8E,$8F,$15,$15,$15,$15,$15,$15  ; ($8148)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8158)
                .byte $15,$15,$15,$15,$86,$8E,$8E,$83,$15,$8B,$94,$82,$8A,$9D,$9A,$9A  ; ($8168)
                .byte $9A,$9A,$9A,$92,$93,$8E,$8F,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8178)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$84,$8D,$83,$15  ; ($8188)
                .byte $8E,$85,$15,$8C,$84,$92,$92,$80,$86,$84,$9A,$9A,$9A,$9A,$9A,$92  ; ($8198)
                .byte $93,$8E,$8F,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($81A8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($81B8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($81C8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($81D8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($81E8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$D0,$ED,$80,$19,$20,$20,$08  ; ($81F8)
                .byte $A0,$00,$A0,$00,$A1,$C1,$08,$00,$C0,$48,$20,$20,$8D,$D1,$21,$10  ; ($8208)
                .byte $11,$20,$05,$89,$E8,$E4,$1D,$00,$41,$60,$85,$C0,$68,$85,$41,$00  ; ($8218)
                .byte $88,$81,$D0,$04,$68,$85,$40,$40,$85,$40,$20,$04,$89,$84,$29,$40  ; ($8228)
                .byte $01,$00,$29,$80,$B0,$C8,$48,$80,$86,$20,$38,$A6,$22,$33,$83,$B7  ; ($8238)
                .byte $0F,$A2,$2E,$36,$EE,$A3,$22,$B7,$C6,$63,$F3,$EF,$D3,$EF,$62,$F7  ; ($8248)
                .byte $D7,$D3,$E3,$E6,$56,$CB,$62,$5B,$BE,$BF,$BF,$BF,$B2,$BF,$9B,$FF  ; ($8258)
                .byte $B6,$DE,$96,$FE,$B6,$9F,$B4,$DE,$D7,$FF,$DE,$E3,$DB,$DB,$D3,$FF  ; ($8268)
                .byte $F6,$FF,$DF,$FF,$FF,$FF,$FF,$FF,$F9,$88,$B0,$18,$20,$A9,$00,$08  ; ($8278)
                .byte $C0,$F1,$04,$29,$90,$0C,$B1,$08,$8D,$00,$10,$85,$BD,$B0,$8D,$20  ; ($8288)
                .byte $01,$20,$90,$81,$CA,$D0,$D4,$00,$00,$C0,$82,$A8,$E8,$D0,$01,$40  ; ($8298)
                .byte $88,$20,$AD,$00,$88,$84,$1D,$00,$20,$08,$A6,$0E,$60,$84,$20,$00  ; ($82A8)
                .byte $A9,$82,$A9,$C0,$80,$C0,$60,$00,$A4,$E2,$AA,$30,$01,$A8,$65,$E7  ; ($82B8)
                .byte $92,$23,$C8,$72,$A6,$23,$CA,$BF,$CA,$E5,$EF,$EF,$EF,$E5,$E3,$FF  ; ($82C8)
                .byte $F5,$C7,$E7,$F7,$C7,$C1,$F2,$43,$F6,$FF,$B5,$BF,$98,$FF,$B2,$FF  ; ($82D8)
                .byte $B6,$BE,$BD,$BC,$B4,$9F,$94,$DE,$D4,$FF,$D0,$F7,$F0,$FB,$DA,$FF  ; ($82E8)
                .byte $FF,$FF,$F6,$FF,$FF,$FF,$FF,$FF,$20,$40,$7A,$20,$AB,$7A,$60,$48  ; ($82F8)
                .byte $89,$B0,$04,$48,$48,$48,$00,$08,$0D,$D0,$04,$A0,$80,$A9,$00,$08  ; ($8308)
                .byte $B9,$A1,$8D,$81,$29,$29,$01,$00,$00,$90,$29,$8D,$A8,$98,$20,$00  ; ($8318)
                .byte $E0,$80,$F0,$09,$48,$90,$00,$40,$48,$08,$20,$88,$00,$00,$00,$00  ; ($8328)
                .byte $90,$01,$BC,$01,$35,$AF,$04,$01,$3F,$00,$07,$05,$0F,$02,$01,$08  ; ($8338)
                .byte $00,$00,$26,$00,$05,$05,$01,$40,$00,$01,$01,$01,$00,$81,$81,$81  ; ($8348)
                .byte $00,$81,$81,$81,$00,$01,$01,$01,$FE,$FE,$00,$7E,$7E,$7E,$00,$FE  ; ($8358)
                .byte $7E,$7E,$00,$FE,$FE,$FE,$00,$7E,$00,$81,$81,$81,$00,$01,$01,$01  ; ($8368)
                .byte $00,$01,$01,$01,$00,$81,$81,$81,$01,$01,$00,$81,$81,$81,$00,$01  ; ($8378)
                .byte $81,$81,$00,$01,$01,$01,$00,$81,$01,$00,$0A,$01,$08,$0A,$00,$00  ; ($8388)
                .byte $96,$15,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$88,$00  ; ($8398)
                .byte $80,$81,$82,$83,$84,$85,$86,$87,$00,$00,$00,$00,$00,$00,$00,$00  ; ($83A8)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$FE,$FD,$FB,$F7,$EF,$DF,$BF,$7F  ; ($83B8)
                .byte $01,$02,$04,$08,$10,$20,$40,$80,$01,$0F,$02,$0B,$00,$00,$00,$06  ; ($83C8)
                .byte $05,$0A,$10,$20,$30,$40,$50,$60,$90,$91,$92,$93,$94,$95,$96,$97  ; ($83D8)
                .byte $68,$00,$00,$00,$00,$00,$00,$00,$18,$19,$12,$13,$14,$15,$16,$17  ; ($83E8)
                .byte $14,$15,$16,$17,$18,$19,$12,$00,$2E,$C8,$08,$81,$C1,$B0,$00,$40  ; ($83F8)
                .byte $C0,$A9,$08,$4C,$C8,$88,$00,$00,$89,$82,$0C,$A9,$38,$20,$0D,$08  ; ($8408)
                .byte $20,$19,$88,$A9,$08,$4C,$4C,$08,$00,$00,$88,$A9,$08,$20,$05,$00  ; ($8418)
                .byte $20,$91,$85,$20,$08,$84,$09,$00,$8D,$44,$00,$88,$00,$4C,$41,$00  ; ($8428)
                .byte $20,$00,$A8,$80,$C1,$80,$C0,$00,$06,$A2,$C9,$2F,$F2,$23,$22,$A6  ; ($8438)
                .byte $8A,$6E,$22,$BB,$26,$73,$8A,$B7,$C3,$E7,$C6,$E7,$C6,$E7,$76,$E7  ; ($8448)
                .byte $F6,$CE,$CB,$F6,$F6,$F7,$D7,$67,$FE,$FF,$97,$DF,$F2,$DE,$B2,$9F  ; ($8458)
                .byte $B7,$BE,$BE,$FF,$BF,$BE,$97,$DE,$F6,$FF,$F6,$B3,$DA,$DB,$FA,$FF  ; ($8468)
                .byte $FE,$FF,$D6,$FF,$D6,$FF,$FF,$FF,$F9,$00,$C9,$28,$00,$18,$41,$00  ; ($8478)
                .byte $E0,$F1,$20,$89,$81,$B0,$08,$00,$88,$88,$A4,$C1,$84,$C0,$85,$00  ; ($8488)
                .byte $A9,$30,$95,$31,$E8,$95,$33,$08,$40,$D0,$86,$25,$A0,$00,$04,$00  ; ($8498)
                .byte $80,$00,$86,$20,$A1,$29,$20,$40,$80,$06,$2B,$86,$28,$8A,$2D,$40  ; ($84A8)
                .byte $89,$00,$69,$80,$B9,$88,$89,$00,$6F,$A5,$A2,$26,$E0,$23,$D2,$B7  ; ($84B8)
                .byte $A6,$22,$F0,$BE,$A7,$2B,$CB,$FF,$EB,$F7,$F7,$FF,$E7,$EF,$C7,$EF  ; ($84C8)
                .byte $D6,$F6,$E6,$FF,$D6,$4F,$FF,$EF,$BD,$BD,$FF,$BD,$BD,$BF,$DF,$FF  ; ($84D8)
                .byte $97,$BE,$FF,$9D,$DE,$DE,$D5,$FE,$D6,$FF,$FC,$85,$F0,$FF,$D7,$FF  ; ($84E8)
                .byte $F7,$FF,$F7,$FF,$F7,$FF,$FF,$FF,$F9,$40,$88,$A0,$20,$F0,$00,$00  ; ($84F8)
                .byte $28,$C9,$9D,$D0,$18,$20,$11,$00,$90,$08,$18,$D0,$69,$A0,$24,$10  ; ($8508)
                .byte $61,$10,$05,$C8,$D0,$60,$24,$00,$00,$50,$C8,$C8,$88,$A4,$20,$40  ; ($8518)
                .byte $01,$B1,$C0,$00,$20,$4D,$0D,$00,$C0,$44,$A5,$08,$20,$4C,$0D,$00  ; ($8528)
                .byte $41,$88,$69,$00,$20,$80,$81,$00,$EE,$A0,$22,$B7,$82,$AB,$22,$AF  ; ($8538)
                .byte $7A,$22,$A7,$F6,$26,$BF,$87,$BF,$7F,$E7,$CF,$FF,$C6,$E7,$C3,$E7  ; ($8548)
                .byte $DE,$CF,$CE,$FF,$46,$CF,$7E,$43,$BF,$BF,$BF,$FF,$92,$BF,$97,$BF  ; ($8558)
                .byte $D6,$DE,$9E,$9C,$B6,$FF,$97,$9E,$DF,$FF,$FA,$D5,$FB,$FB,$DE,$FF  ; ($8568)
                .byte $FE,$FF,$FF,$FF,$D7,$FF,$FF,$FF,$F9,$90,$80,$E8,$80,$20,$24,$08  ; ($8578)
                .byte $60,$C9,$30,$90,$01,$C9,$41,$40,$38,$40,$45,$21,$D0,$01,$60,$09  ; ($8588)
                .byte $91,$48,$09,$80,$48,$48,$4A,$08,$4A,$20,$38,$88,$A8,$68,$21,$01  ; ($8598)
                .byte $48,$30,$88,$05,$01,$08,$68,$00,$ED,$04,$04,$86,$00,$84,$05,$40  ; ($85A8)
                .byte $08,$48,$29,$80,$01,$48,$69,$00,$85,$22,$A9,$A0,$85,$30,$D2,$BF  ; ($85B8)
                .byte $4A,$AA,$48,$BA,$4E,$BB,$BF,$B7,$C7,$FF,$E7,$F7,$E7,$FF,$E2,$F7  ; ($85C8)
                .byte $F7,$FF,$EF,$FF,$66,$DD,$CE,$79,$B5,$BF,$FC,$BD,$96,$FF,$97,$BF  ; ($85D8)
                .byte $DC,$FC,$95,$9C,$FC,$9F,$97,$FE,$D5,$FF,$FD,$91,$DD,$D9,$D3,$FF  ; ($85E8)
                .byte $FF,$FF,$FF,$FF,$FE,$FF,$FF,$FF,$F9,$98,$84,$08,$58,$20,$01,$00  ; ($85F8)
                .byte $19,$A5,$14,$85,$C1,$A5,$11,$00,$C0,$80,$00,$20,$20,$89,$05,$18  ; ($8608)
                .byte $A9,$00,$20,$49,$8D,$24,$11,$00,$01,$80,$11,$4C,$C9,$84,$01,$00  ; ($8618)
                .byte $20,$10,$50,$18,$A1,$00,$45,$00,$C0,$48,$A5,$00,$C5,$04,$40,$40  ; ($8628)
                .byte $A1,$08,$E8,$48,$A1,$08,$C0,$40,$AD,$A0,$85,$36,$32,$37,$46,$B7  ; ($8638)
                .byte $B2,$23,$4E,$BE,$86,$A7,$0A,$BF,$EF,$FF,$CF,$EF,$EF,$FB,$CE,$EB  ; ($8648)
                .byte $5E,$D2,$C7,$F6,$66,$CB,$E7,$43,$B6,$9F,$B5,$FF,$96,$FF,$B2,$BF  ; ($8658)
                .byte $9F,$BF,$B6,$9F,$B7,$BE,$DE,$9E,$F6,$FF,$FF,$F3,$FB,$DB,$D3,$FF  ; ($8668)
                .byte $F7,$FF,$DE,$FF,$DF,$FF,$FF,$FF,$F9,$00,$85,$10,$D0,$41,$44,$08  ; ($8678)
                .byte $C0,$2D,$AD,$00,$D8,$C9,$78,$50,$3C,$80,$51,$4C,$8D,$80,$A9,$00  ; ($8688)
                .byte $F0,$00,$A9,$40,$D0,$00,$A9,$00,$01,$10,$85,$31,$A0,$14,$84,$20  ; ($8698)
                .byte $A0,$11,$84,$28,$20,$04,$80,$40,$0D,$40,$07,$C8,$20,$C0,$01,$40  ; ($86A8)
                .byte $20,$82,$28,$40,$88,$00,$C9,$80,$20,$26,$80,$E9,$0D,$F0,$83,$EF  ; ($86B8)
                .byte $32,$A7,$20,$B2,$8F,$A7,$9E,$FF,$FF,$F5,$F7,$E7,$F7,$E7,$C7,$F7  ; ($86C8)
                .byte $DF,$E7,$F7,$F7,$42,$D1,$57,$D5,$F6,$BF,$F5,$BF,$90,$FF,$B7,$BF  ; ($86D8)
                .byte $94,$BC,$DF,$9D,$BD,$9E,$95,$9F,$FD,$FF,$D5,$93,$D8,$DF,$F7,$FF  ; ($86E8)
                .byte $F6,$FF,$F7,$FF,$F7,$FF,$FF,$FF,$F9,$00,$A9,$00,$A8,$20,$08,$08  ; ($86F8)
                .byte $A1,$10,$F0,$00,$78,$A4,$08,$18,$A5,$00,$48,$A5,$01,$48,$21,$00  ; ($8708)
                .byte $48,$A1,$05,$48,$A4,$04,$20,$00,$01,$10,$05,$11,$08,$85,$30,$00  ; ($8718)
                .byte $C8,$84,$20,$8D,$88,$28,$70,$00,$68,$40,$4C,$84,$80,$00,$40,$00  ; ($8728)
                .byte $81,$C0,$A8,$C0,$81,$00,$80,$00,$A6,$20,$22,$22,$8F,$A7,$1A,$BF  ; ($8738)
                .byte $AB,$22,$87,$B6,$87,$37,$22,$F7,$CA,$E7,$DF,$E7,$F7,$EF,$DE,$EB  ; ($8748)
                .byte $76,$EA,$CF,$DF,$6F,$C7,$72,$63,$F6,$BB,$B7,$BF,$96,$BF,$BA,$FF  ; ($8758)
                .byte $9E,$9F,$BE,$9E,$BF,$BE,$96,$9E,$DF,$FF,$FA,$89,$FA,$DF,$D2,$FF  ; ($8768)
                .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$F9,$08,$D0,$08,$20,$08,$00,$00  ; ($8778)
                .byte $01,$A4,$21,$D0,$18,$20,$20,$08,$20,$D4,$80,$A8,$BD,$B9,$89,$00  ; ($8788)
                .byte $00,$20,$E8,$80,$4C,$98,$80,$00,$02,$C0,$02,$D0,$39,$F0,$00,$00  ; ($8798)
                .byte $20,$80,$38,$20,$20,$8D,$A8,$40,$24,$48,$20,$00,$89,$C4,$21,$00  ; ($87A8)
                .byte $21,$88,$28,$00,$89,$80,$09,$80,$AE,$E5,$0B,$E8,$20,$20,$8F,$A7  ; ($87B8)
                .byte $0B,$A7,$AF,$F7,$AF,$B3,$91,$BD,$FA,$EB,$E5,$EF,$E4,$EF,$ED,$ED  ; ($87C8)
                .byte $F6,$E2,$EF,$F7,$72,$61,$4F,$CD,$B4,$BF,$BD,$BD,$90,$FF,$B0,$BF  ; ($87D8)
                .byte $B6,$DE,$9C,$9D,$D7,$9E,$D4,$BE,$F2,$FF,$DD,$A7,$DE,$F9,$F2,$FF  ; ($87E8)
                .byte $FE,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$F9,$00,$50,$88,$B0,$F0,$20,$40  ; ($87F8)
                .byte $88,$B0,$01,$20,$60,$88,$01,$40,$84,$C4,$60,$20,$F8,$80,$0C,$00  ; ($8808)
                .byte $88,$A1,$C0,$20,$20,$88,$25,$00,$48,$40,$48,$48,$48,$20,$30,$00  ; ($8818)
                .byte $A8,$60,$29,$0D,$20,$38,$08,$40,$88,$00,$09,$80,$68,$4C,$09,$00  ; ($8828)
                .byte $08,$48,$E8,$90,$00,$48,$00,$40,$3E,$62,$A2,$26,$B7,$E2,$4A,$B7  ; ($8838)
                .byte $C2,$B7,$C2,$FE,$97,$E3,$CA,$F7,$F7,$E7,$EF,$E7,$C7,$EF,$62,$E7  ; ($8848)
                .byte $DE,$CB,$62,$F6,$FF,$63,$CA,$CB,$B4,$BF,$B4,$BF,$9A,$BF,$F6,$BF  ; ($8858)
                .byte $96,$9F,$BE,$BE,$F6,$9E,$96,$9F,$F6,$FF,$DF,$81,$FB,$DB,$D7,$FF  ; ($8868)
                .byte $F6,$FF,$DE,$FF,$F7,$FF,$FF,$FF,$F9,$88,$C9,$20,$D0,$08,$10,$40  ; ($8878)
                .byte $20,$99,$88,$08,$08,$08,$08,$00,$2C,$00,$A4,$88,$20,$99,$88,$00  ; ($8888)
                .byte $28,$38,$60,$C9,$3A,$08,$29,$08,$08,$90,$02,$69,$08,$60,$20,$00  ; ($8898)
                .byte $80,$C1,$0D,$C0,$E8,$4C,$9C,$00,$A5,$00,$C9,$CE,$C0,$06,$08,$00  ; ($88A8)
                .byte $C8,$CA,$A9,$C0,$28,$40,$A0,$C0,$A0,$A0,$CA,$F0,$FD,$A8,$D2,$FF  ; ($88B8)
                .byte $62,$A7,$03,$B6,$06,$63,$87,$B7,$E6,$E5,$E7,$FF,$EF,$E7,$E6,$EF  ; ($88C8)
                .byte $F6,$E7,$EE,$F7,$47,$CD,$C6,$61,$F4,$FD,$F4,$BD,$F4,$BF,$96,$BF  ; ($88D8)
                .byte $B6,$9E,$B4,$FF,$9C,$DF,$9D,$FE,$D7,$FF,$DF,$81,$F8,$DF,$DB,$FF  ; ($88E8)
                .byte $F6,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$F9,$C0,$A9,$01,$E0,$09,$00,$40  ; ($88F8)
                .byte $C1,$D0,$04,$E4,$C0,$D0,$00,$40,$29,$40,$18,$48,$20,$20,$09,$08  ; ($8908)
                .byte $A0,$28,$20,$29,$88,$A9,$20,$08,$09,$00,$4C,$09,$80,$A5,$40,$40  ; ($8918)
                .byte $00,$90,$21,$20,$00,$80,$49,$40,$C0,$08,$A5,$08,$C9,$CC,$00,$00  ; ($8928)
                .byte $A0,$00,$A8,$10,$80,$C0,$80,$C0,$A6,$22,$22,$6F,$8D,$AB,$FF,$A7  ; ($8938)
                .byte $1A,$6E,$9E,$B6,$A6,$23,$BF,$BF,$CE,$E3,$CF,$E7,$EF,$E7,$56,$F7  ; ($8948)
                .byte $F7,$E2,$E2,$DF,$E6,$6F,$EB,$7B,$B6,$BF,$9E,$BD,$92,$BF,$B2,$BF  ; ($8958)
                .byte $B7,$9F,$B6,$BE,$9C,$BE,$FE,$9E,$F6,$FF,$DA,$C7,$DF,$DF,$DE,$DF  ; ($8968)
                .byte $FF,$FF,$D7,$FF,$D6,$FF,$FF,$FF,$F9,$00,$F8,$88,$81,$20,$20,$00  ; ($8978)
                .byte $88,$20,$E1,$88,$D0,$F8,$C0,$08,$F0,$C0,$78,$20,$DC,$88,$A4,$08  ; ($8988)
                .byte $98,$20,$9D,$88,$6C,$00,$A0,$08,$03,$80,$A0,$01,$80,$B8,$84,$00  ; ($8998)
                .byte $88,$80,$B7,$80,$80,$84,$91,$00,$00,$04,$AC,$88,$21,$84,$A9,$00  ; ($89A8)
                .byte $00,$80,$E9,$00,$F0,$C8,$C9,$00,$F0,$3A,$C9,$22,$D0,$F9,$A2,$A7  ; ($89B8)
                .byte $82,$EB,$22,$F2,$A6,$EB,$8F,$F7,$CB,$F5,$FF,$E7,$F7,$EF,$E2,$F7  ; ($89C8)
                .byte $F6,$E7,$F7,$FE,$E7,$5F,$CB,$4D,$F4,$FF,$BD,$BD,$B0,$FF,$FF,$BF  ; ($89D8)
                .byte $BE,$9E,$B5,$9C,$BD,$9E,$D4,$FE,$DC,$FF,$D8,$A1,$DE,$DB,$DB,$FF  ; ($89E8)
                .byte $FF,$FF,$FF,$FF,$F7,$FF,$FF,$FF,$F9,$08,$0D,$F0,$D1,$C9,$00,$40  ; ($89F8)
                .byte $F8,$85,$B8,$20,$00,$80,$49,$08,$F0,$C8,$49,$2C,$D0,$E0,$20,$18  ; ($8A08)
                .byte $81,$20,$04,$80,$C9,$2C,$D0,$00,$00,$60,$88,$85,$A8,$84,$25,$00  ; ($8A18)
                .byte $00,$80,$C9,$20,$F0,$F9,$49,$00,$C0,$4C,$A5,$0C,$C9,$40,$40,$40  ; ($8A28)
                .byte $20,$00,$A9,$88,$00,$80,$A9,$80,$AE,$A6,$AF,$AB,$C3,$22,$DA,$FF  ; ($8A38)
                .byte $4E,$BE,$82,$B7,$37,$F3,$06,$B7,$C6,$F3,$C6,$EF,$EF,$EF,$EA,$EB  ; ($8A48)
                .byte $56,$EF,$77,$56,$CF,$53,$F2,$43,$FE,$FF,$BE,$BF,$D6,$FF,$9A,$FF  ; ($8A58)
                .byte $FE,$BF,$D7,$9F,$D7,$BF,$D6,$9F,$D6,$FF,$DB,$85,$FF,$FB,$D3,$FF  ; ($8A68)
                .byte $F7,$FF,$DF,$FF,$F7,$FF,$FF,$FF,$F9,$10,$C9,$21,$F0,$11,$44,$08  ; ($8A78)
                .byte $E0,$C9,$38,$A5,$C1,$E9,$28,$00,$C1,$90,$E0,$C4,$C4,$D0,$DC,$00  ; ($8A88)
                .byte $18,$20,$11,$88,$B0,$B5,$A5,$08,$49,$30,$F0,$15,$C9,$25,$D0,$00  ; ($8A98)
                .byte $18,$A1,$08,$65,$C1,$85,$C1,$00,$00,$46,$C2,$00,$A8,$82,$4C,$40  ; ($8AA8)
                .byte $88,$08,$A9,$C0,$69,$08,$81,$C0,$90,$22,$E6,$E2,$20,$20,$8B,$A7  ; ($8AB8)
                .byte $2E,$A9,$3A,$B0,$AF,$A9,$A0,$BF,$CA,$FD,$EF,$E7,$CF,$EF,$CE,$EF  ; ($8AC8)
                .byte $DE,$EE,$FF,$DF,$64,$F5,$C2,$F9,$B4,$BD,$B7,$BD,$BC,$BF,$DF,$BF  ; ($8AD8)
                .byte $BD,$9C,$95,$DE,$95,$BF,$95,$BF,$F4,$FF,$DD,$B1,$F8,$D9,$DE,$FF  ; ($8AE8)
                .byte $FE,$FF,$DF,$FF,$DF,$FF,$FF,$FF,$F9,$D0,$F0,$01,$48,$51,$08,$00  ; ($8AF8)
                .byte $D1,$85,$C1,$A5,$D0,$85,$40,$08,$19,$84,$2D,$A0,$01,$20,$15,$08  ; ($8B08)
                .byte $C9,$38,$F0,$19,$C9,$2C,$70,$00,$49,$20,$F0,$11,$C0,$2D,$70,$00  ; ($8B18)
                .byte $15,$15,$15,$A7,$15,$15,$15,$15,$A2,$15,$15,$15,$15,$15,$15,$15  ; ($8B28)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$A3  ; ($8B38)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$19,$1A,$1A,$1A,$1B,$15  ; ($8B48)
                .byte $A4,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8B58)
                .byte $15,$15,$15,$15,$15,$15,$15,$A5,$83,$15,$15,$15,$15,$15,$15,$15  ; ($8B68)
                .byte $15,$15,$1C,$04,$04,$1D,$1E,$15,$A4,$15,$15,$15,$15,$15,$15,$15  ; ($8B78)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$A5  ; ($8B88)
                .byte $80,$15,$05,$06,$07,$15,$15,$15,$15,$15,$1C,$1F,$20,$1D,$1E,$15  ; ($8B98)
                .byte $A4,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8BA8)
                .byte $15,$15,$15,$15,$15,$15,$15,$A5,$8C,$15,$08,$09,$0A,$15,$15,$15  ; ($8BB8)
                .byte $15,$15,$04,$21,$21,$22,$04,$15,$A4,$15,$15,$15,$15,$15,$15,$15  ; ($8BC8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$A5  ; ($8BD8)
                .byte $80,$15,$0B,$0C,$0D,$15,$15,$15,$15,$15,$24,$23,$23,$23,$25,$15  ; ($8BE8)
                .byte $A4,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8BF8)
                .byte $15,$15,$15,$15,$15,$15,$15,$A5,$86,$15,$0E,$0F,$10,$15,$15,$15  ; ($8C08)
                .byte $15,$15,$26,$6D,$64,$64,$27,$15,$A4,$15,$15,$15,$15,$15,$15,$15  ; ($8C18)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$A5  ; ($8C28)
                .byte $84,$15,$11,$12,$13,$15,$15,$15,$15,$15,$28,$29,$29,$29,$2A,$15  ; ($8C38)
                .byte $A4,$15,$15,$14,$15,$15,$15,$15,$15,$14,$15,$15,$18,$15,$15,$14  ; ($8C48)
                .byte $15,$15,$15,$15,$15,$15,$15,$A5,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8C58)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$A4,$A6,$A6,$A6,$A6,$A6,$A6,$A6  ; ($8C68)
                .byte $A6,$A6,$A6,$A6,$A6,$A6,$A6,$A6,$A6,$A6,$A6,$A6,$A6,$A6,$A6,$A5  ; ($8C78)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$2B  ; ($8C88)
                .byte $2D,$2F,$31,$33,$35,$37,$15,$15,$15,$15,$15,$15,$15,$15,$4E,$3F  ; ($8C98)
                .byte $3F,$3F,$40,$41,$41,$41,$41,$43,$4C,$15,$15,$15,$15,$15,$15,$15  ; ($8CA8)
                .byte $15,$15,$15,$15,$15,$15,$4F,$2C,$2E,$30,$32,$34,$36,$38,$39,$3A  ; ($8CB8)
                .byte $3B,$3C,$3D,$3D,$3E,$3E,$3D,$3F,$15,$15,$15,$15,$15,$42,$42,$42  ; ($8CC8)
                .byte $4D,$50,$15,$15,$15,$15,$15,$15,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C  ; ($8CD8)
                .byte $0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C  ; ($8CE8)
                .byte $0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C  ; ($8CF8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8D08)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8D18)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8D28)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8D38)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8D48)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8D58)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8D68)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8D78)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8D88)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8D98)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8DA8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8DB8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8DC8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8DD8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8DE8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8DF8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8E08)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8E18)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8E28)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8E38)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8E48)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8E58)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8E68)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8E78)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8E88)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8E98)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8EA8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8EB8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8EC8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8ED8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8EE8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15,$15  ; ($8EF8)
                .byte $15,$15,$15,$15,$15,$15,$15,$15,$00,$C0,$00,$02,$00,$00,$20,$C0  ; ($8F08)
                .byte $08,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B  ; ($8F18)
                .byte $0B,$0B,$0B,$0B,$0B,$0B,$0B,$08,$00,$00,$00,$00,$00,$00,$00,$00  ; ($8F28)
                .byte $00,$20,$00,$00,$00,$00,$00,$00,$08,$0B,$0B,$0B,$0B,$0B,$0B,$0B  ; ($8F38)
                .byte $0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$08  ; ($8F48)
                .byte $00,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($8F58)
                .byte $08,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B  ; ($8F68)
                .byte $0B,$0B,$0B,$0B,$0B,$0B,$0B,$08,$00,$00,$06,$06,$06,$02,$00,$00  ; ($8F78)
                .byte $20,$00,$00,$00,$20,$00,$00,$00,$08,$08,$08,$08,$08,$08,$08,$08  ; ($8F88)
                .byte $08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08  ; ($8F98)
                .byte $00,$00,$06,$06,$06,$02,$00,$00,$00,$00,$00,$20,$00,$00,$00,$00  ; ($8FA8)
                .byte $08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08  ; ($8FB8)
                .byte $08,$08,$08,$08,$08,$08,$08,$08,$00,$00,$06,$06,$06,$02,$00,$20  ; ($8FC8)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$08,$08,$08,$08,$08,$08,$08,$08  ; ($8FD8)
                .byte $08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08  ; ($8FE8)
                .byte $00,$00,$06,$06,$06,$02,$00,$00,$00,$00,$00,$02,$02,$02,$00,$00  ; ($8FF8)
                .byte $08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08  ; ($9008)
                .byte $08,$08,$08,$08,$08,$08,$08,$08,$B0,$00,$06,$06,$06,$02,$00,$00  ; ($9018)
                .byte $00,$00,$00,$00,$D0,$00,$90,$00,$08,$08,$08,$08,$08,$08,$08,$08  ; ($9028)
                .byte $08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$D8  ; ($9038)
                .byte $00,$00,$D0,$00,$A0,$00,$D0,$00,$A0,$00,$D0,$00,$90,$00,$D0,$00  ; ($9048)
                .byte $08,$D8,$08,$D8,$08,$D8,$08,$98,$08,$D8,$08,$A8,$08,$D8,$08,$08  ; ($9058)
                .byte $A8,$08,$08,$98,$08,$48,$08,$D8,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9068)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$08,$08,$08,$08,$08,$08,$0F,$0F  ; ($9078)
                .byte $0D,$0D,$0E,$0E,$0A,$0A,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08  ; ($9088)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08  ; ($9098)
                .byte $08,$08,$09,$09,$0F,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08  ; ($90A8)
                .byte $08,$08,$08,$08,$08,$08,$08,$08,$08,$00,$00,$00,$00,$00,$00,$00  ; ($90B8)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($90C8)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($90D8)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($90E8)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($90F8)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9108)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9118)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9128)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9138)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9148)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9158)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9168)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9178)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9188)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9198)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($91A8)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($91B8)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($91C8)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($91D8)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($91E8)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($91F8)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9208)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9218)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9228)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9238)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9248)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9258)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9268)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9278)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9288)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($9298)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($92A8)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($92B8)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($92C8)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E  ; ($92D8)
                .byte $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$FF  ; ($92E8)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($92F8)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($9308)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($9318)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($9328)
                .byte $01,$01,$01,$01,$01,$01,$01,$01     ; ($9338)

; ==================================================
; Section: Paris map data (Data)
; Range: $9340 - $CFFE (15551 bytes)
; ==================================================

                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($9340)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($9350)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($9360)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($9370)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($9380)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($9390)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($93A0)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($93B0)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($93C0)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($93D0)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01  ; ($93E0)
                .byte $01,$01,$01,$01,$1B,$1B,$1B,$1B,$1B,$1B,$04,$04,$04,$02,$02,$02  ; ($93F0)
                .byte $04,$04,$04,$02,$02,$02,$04,$04,$04,$04,$04,$04,$1B,$1B,$1B,$04  ; ($9400)
                .byte $04,$04,$03,$03,$03,$02,$02,$02,$04,$04,$04,$04,$04,$04,$04,$04  ; ($9410)
                .byte $04,$02,$02,$02,$01,$01,$01,$03,$03,$03,$04,$04,$04,$03,$03,$03  ; ($9420)
                .byte $04,$04,$04,$1B,$1B,$1B,$02,$02,$02,$01,$01,$01,$1B,$1B,$1B,$01  ; ($9430)
                .byte $01,$01,$03,$03,$03,$02,$02,$02,$03,$03,$03,$04,$04,$04,$1B,$1B  ; ($9440)
                .byte $1B,$04,$04,$04,$04,$04,$04,$02,$02,$02,$1B,$1B,$1B,$01,$01,$01  ; ($9450)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$04  ; ($9460)
                .byte $04,$04,$1B,$1B,$1B,$1B,$1B,$1B,$04,$04,$04,$02,$02,$02,$04,$04  ; ($9470)
                .byte $04,$02,$02,$02,$04,$04,$04,$04,$04,$04,$1B,$1B,$1B,$04,$04,$04  ; ($9480)
                .byte $03,$03,$03,$02,$02,$02,$04,$04,$04,$04,$04,$04,$04,$04,$04,$02  ; ($9490)
                .byte $02,$02,$01,$01,$01,$03,$03,$03,$04,$04,$04,$03,$03,$03,$04,$04  ; ($94A0)
                .byte $04,$1B,$1B,$1B,$02,$02,$02,$01,$01,$01,$1B,$1B,$1B,$01,$01,$01  ; ($94B0)
                .byte $03,$03,$03,$02,$02,$02,$03,$03,$03,$04,$04,$04,$1B,$1B,$1B,$04  ; ($94C0)
                .byte $04,$04,$04,$04,$04,$02,$02,$02,$1B,$1B,$1B,$01,$01,$01,$01,$01  ; ($94D0)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$04,$04,$04  ; ($94E0)
                .byte $1B,$1B,$1B,$1B,$1B,$1B,$04,$04,$04,$02,$02,$02,$04,$04,$04,$02  ; ($94F0)
                .byte $02,$02,$04,$04,$04,$04,$04,$04,$1B,$1B,$1B,$04,$04,$04,$03,$03  ; ($9500)
                .byte $03,$02,$02,$02,$04,$04,$04,$04,$04,$04,$04,$04,$04,$02,$02,$02  ; ($9510)
                .byte $01,$01,$01,$03,$03,$03,$04,$04,$04,$03,$03,$03,$04,$04,$04,$1B  ; ($9520)
                .byte $1B,$1B,$02,$02,$02,$01,$01,$01,$1B,$1B,$1B,$01,$01,$01,$03,$03  ; ($9530)
                .byte $03,$02,$02,$02,$03,$03,$03,$04,$04,$04,$1B,$1B,$1B,$04,$04,$04  ; ($9540)
                .byte $04,$04,$04,$02,$02,$02,$1B,$1B,$1B,$01,$01,$01,$01,$01,$01,$01  ; ($9550)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$04,$04,$04,$01,$01  ; ($9560)
                .byte $01,$00,$00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$00,$00,$00  ; ($9570)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03  ; ($9580)
                .byte $03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9590)
                .byte $00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($95A0)
                .byte $02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($95B0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($95C0)
                .byte $00,$02,$02,$02,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($95D0)
                .byte $02,$02,$02,$00,$00,$00,$00,$00,$00,$1B,$1B,$1B,$01,$01,$01,$00  ; ($95E0)
                .byte $1A,$00,$00,$14,$00,$03,$03,$03,$00,$12,$00,$00,$1C,$00,$00,$1C  ; ($95F0)
                .byte $00,$00,$12,$00,$00,$1C,$00,$00,$1C,$00,$00,$14,$00,$03,$03,$03  ; ($9600)
                .byte $00,$14,$00,$00,$16,$00,$00,$16,$00,$00,$16,$00,$00,$16,$00,$04  ; ($9610)
                .byte $04,$04,$00,$14,$00,$00,$16,$00,$00,$16,$00,$00,$1A,$00,$02,$02  ; ($9620)
                .byte $02,$00,$14,$00,$00,$16,$00,$00,$16,$00,$00,$16,$00,$00,$16,$00  ; ($9630)
                .byte $00,$16,$00,$00,$16,$00,$00,$16,$00,$00,$16,$00,$00,$16,$00,$02  ; ($9640)
                .byte $02,$02,$02,$02,$02,$00,$14,$00,$00,$16,$00,$00,$16,$00,$02,$02  ; ($9650)
                .byte $02,$00,$14,$00,$00,$1A,$00,$1B,$1B,$1B,$01,$01,$01,$00,$00,$00  ; ($9660)
                .byte $00,$00,$00,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9670)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$00,$00  ; ($9680)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04  ; ($9690)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02,$00  ; ($96A0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($96B0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02  ; ($96C0)
                .byte $02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02,$00  ; ($96D0)
                .byte $00,$00,$00,$00,$00,$1B,$1B,$1B,$04,$04,$04,$1B,$1B,$1B,$00,$00  ; ($96E0)
                .byte $00,$04,$04,$04,$00,$00,$00,$01,$01,$01,$04,$04,$04,$00,$00,$00  ; ($96F0)
                .byte $04,$04,$04,$03,$03,$03,$00,$00,$00,$02,$02,$02,$00,$00,$00,$1B  ; ($9700)
                .byte $1B,$1B,$01,$01,$01,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9710)
                .byte $00,$04,$04,$04,$03,$03,$03,$04,$04,$04,$02,$02,$02,$00,$00,$00  ; ($9720)
                .byte $04,$04,$04,$04,$04,$04,$00,$00,$00,$04,$04,$04,$00,$00,$00,$02  ; ($9730)
                .byte $02,$02,$00,$00,$00,$01,$01,$01,$00,$00,$00,$00,$00,$00,$1B,$1B  ; ($9740)
                .byte $1B,$00,$00,$00,$02,$02,$02,$00,$00,$00,$03,$03,$03,$00,$00,$00  ; ($9750)
                .byte $03,$03,$03,$03,$03,$03,$04,$04,$04,$1B,$1B,$1B,$00,$14,$00,$04  ; ($9760)
                .byte $04,$04,$00,$1F,$00,$01,$01,$01,$04,$04,$04,$00,$14,$00,$04,$04  ; ($9770)
                .byte $04,$03,$03,$03,$00,$14,$00,$02,$02,$02,$00,$14,$00,$1B,$1B,$1B  ; ($9780)
                .byte $01,$01,$01,$04,$04,$04,$00,$18,$00,$00,$16,$00,$00,$16,$00,$04  ; ($9790)
                .byte $04,$04,$03,$03,$03,$04,$04,$04,$02,$02,$02,$00,$14,$00,$04,$04  ; ($97A0)
                .byte $04,$04,$04,$04,$00,$18,$00,$04,$04,$04,$00,$1D,$00,$02,$02,$02  ; ($97B0)
                .byte $00,$1D,$00,$01,$01,$01,$00,$18,$00,$00,$16,$00,$1B,$1B,$1B,$00  ; ($97C0)
                .byte $14,$00,$02,$02,$02,$00,$18,$00,$03,$03,$03,$00,$14,$00,$03,$03  ; ($97D0)
                .byte $03,$03,$03,$03,$04,$04,$04,$1B,$1B,$1B,$00,$00,$00,$04,$04,$04  ; ($97E0)
                .byte $00,$00,$00,$01,$01,$01,$04,$04,$04,$00,$00,$00,$04,$04,$04,$03  ; ($97F0)
                .byte $03,$03,$00,$00,$00,$02,$02,$02,$00,$00,$00,$1B,$1B,$1B,$01,$01  ; ($9800)
                .byte $01,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04  ; ($9810)
                .byte $03,$03,$03,$04,$04,$04,$02,$02,$02,$00,$00,$00,$04,$04,$04,$04  ; ($9820)
                .byte $04,$04,$00,$00,$00,$04,$04,$04,$00,$00,$00,$02,$02,$02,$00,$00  ; ($9830)
                .byte $00,$01,$01,$01,$00,$00,$00,$00,$00,$00,$1B,$1B,$1B,$00,$00,$00  ; ($9840)
                .byte $02,$02,$02,$00,$00,$00,$03,$03,$03,$00,$00,$00,$03,$03,$03,$03  ; ($9850)
                .byte $03,$03,$03,$03,$03,$02,$02,$02,$00,$00,$00,$01,$01,$01,$00,$00  ; ($9860)
                .byte $00,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03  ; ($9870)
                .byte $00,$00,$00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9880)
                .byte $00,$00,$01,$01,$01,$02,$02,$02,$04,$04,$04,$00,$00,$00,$00,$00  ; ($9890)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02  ; ($98A0)
                .byte $00,$00,$00,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02  ; ($98B0)
                .byte $02,$02,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01  ; ($98C0)
                .byte $01,$00,$00,$00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$01,$01,$01  ; ($98D0)
                .byte $03,$03,$03,$02,$02,$02,$00,$14,$00,$01,$01,$01,$00,$1F,$00,$02  ; ($98E0)
                .byte $02,$02,$00,$12,$00,$00,$12,$00,$00,$14,$00,$03,$03,$03,$00,$14  ; ($98F0)
                .byte $00,$04,$04,$04,$00,$12,$00,$00,$14,$00,$00,$1E,$00,$00,$16,$00  ; ($9900)
                .byte $01,$01,$01,$02,$02,$02,$04,$04,$04,$00,$14,$00,$00,$16,$00,$00  ; ($9910)
                .byte $1E,$00,$00,$16,$00,$00,$16,$00,$00,$14,$00,$02,$02,$02,$00,$1F  ; ($9920)
                .byte $00,$03,$03,$03,$00,$14,$00,$00,$1E,$00,$00,$16,$00,$02,$02,$02  ; ($9930)
                .byte $04,$04,$04,$00,$18,$00,$00,$16,$00,$00,$16,$00,$01,$01,$01,$00  ; ($9940)
                .byte $18,$00,$04,$04,$04,$00,$12,$00,$00,$14,$00,$01,$01,$01,$03,$03  ; ($9950)
                .byte $03,$02,$02,$02,$00,$00,$00,$01,$01,$01,$00,$00,$00,$02,$02,$02  ; ($9960)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$04  ; ($9970)
                .byte $04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01  ; ($9980)
                .byte $01,$02,$02,$02,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9990)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02,$00,$00,$00,$03  ; ($99A0)
                .byte $03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02,$04,$04  ; ($99B0)
                .byte $04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$00,$00,$00  ; ($99C0)
                .byte $04,$04,$04,$00,$00,$00,$00,$00,$00,$01,$01,$01,$03,$03,$03,$00  ; ($99D0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($99E0)
                .byte $00,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($99F0)
                .byte $03,$03,$03,$00,$00,$00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00  ; ($9A00)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$03,$03,$03,$00,$00  ; ($9A10)
                .byte $00,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9A20)
                .byte $00,$00,$00,$02,$02,$02,$04,$04,$04,$02,$02,$02,$00,$00,$00,$04  ; ($9A30)
                .byte $04,$04,$01,$01,$01,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9A40)
                .byte $00,$02,$02,$02,$00,$00,$00,$03,$03,$03,$03,$03,$03,$00,$12,$00  ; ($9A50)
                .byte $00,$12,$00,$00,$12,$00,$00,$12,$00,$00,$12,$00,$00,$18,$00,$02  ; ($9A60)
                .byte $02,$02,$00,$12,$00,$00,$12,$00,$00,$12,$00,$00,$14,$00,$03,$03  ; ($9A70)
                .byte $03,$00,$14,$00,$04,$04,$04,$00,$18,$00,$00,$16,$00,$00,$16,$00  ; ($9A80)
                .byte $00,$1E,$00,$00,$14,$00,$03,$03,$03,$03,$03,$03,$00,$18,$00,$03  ; ($9A90)
                .byte $03,$03,$00,$14,$00,$00,$1C,$00,$00,$12,$00,$00,$1C,$00,$00,$14  ; ($9AA0)
                .byte $00,$02,$02,$02,$04,$04,$04,$02,$02,$02,$00,$14,$00,$04,$04,$04  ; ($9AB0)
                .byte $01,$01,$01,$02,$02,$02,$00,$12,$00,$00,$18,$00,$00,$16,$00,$02  ; ($9AC0)
                .byte $02,$02,$00,$14,$00,$03,$03,$03,$03,$03,$03,$00,$00,$00,$00,$00  ; ($9AD0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02  ; ($9AE0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$00  ; ($9AF0)
                .byte $00,$00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9B00)
                .byte $00,$00,$00,$00,$03,$03,$03,$03,$03,$03,$00,$00,$00,$03,$03,$03  ; ($9B10)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02  ; ($9B20)
                .byte $02,$02,$04,$04,$04,$02,$02,$02,$00,$00,$00,$04,$04,$04,$01,$01  ; ($9B30)
                .byte $01,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02  ; ($9B40)
                .byte $00,$00,$00,$03,$03,$03,$02,$02,$02,$00,$00,$00,$03,$03,$03,$00  ; ($9B50)
                .byte $00,$00,$03,$03,$03,$00,$00,$00,$04,$04,$04,$01,$01,$01,$02,$02  ; ($9B60)
                .byte $02,$00,$00,$00,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9B70)
                .byte $00,$00,$00,$1B,$1B,$1B,$00,$00,$00,$01,$01,$01,$01,$01,$01,$00  ; ($9B80)
                .byte $00,$00,$03,$03,$03,$02,$02,$02,$00,$00,$00,$01,$01,$01,$00,$00  ; ($9B90)
                .byte $00,$01,$01,$01,$00,$00,$00,$04,$04,$04,$00,$00,$00,$02,$02,$02  ; ($9BA0)
                .byte $04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01  ; ($9BB0)
                .byte $01,$01,$00,$00,$00,$04,$04,$04,$00,$00,$00,$03,$03,$03,$00,$00  ; ($9BC0)
                .byte $00,$03,$03,$03,$02,$02,$02,$00,$1F,$00,$03,$03,$03,$00,$1F,$00  ; ($9BD0)
                .byte $03,$03,$03,$00,$1F,$00,$04,$04,$04,$01,$01,$01,$02,$02,$02,$00  ; ($9BE0)
                .byte $1F,$00,$01,$01,$01,$00,$12,$00,$00,$14,$00,$00,$16,$00,$00,$16  ; ($9BF0)
                .byte $00,$1B,$1B,$1B,$00,$1D,$00,$01,$01,$01,$01,$01,$01,$00,$1D,$00  ; ($9C00)
                .byte $03,$03,$03,$02,$02,$02,$00,$18,$00,$01,$01,$01,$00,$1D,$00,$01  ; ($9C10)
                .byte $01,$01,$00,$1F,$00,$04,$04,$04,$00,$1D,$00,$02,$02,$02,$04,$04  ; ($9C20)
                .byte $04,$00,$12,$00,$00,$12,$00,$00,$1C,$00,$00,$14,$00,$01,$01,$01  ; ($9C30)
                .byte $00,$18,$00,$04,$04,$04,$00,$18,$00,$03,$03,$03,$00,$14,$00,$03  ; ($9C40)
                .byte $03,$03,$02,$02,$02,$00,$00,$00,$03,$03,$03,$00,$00,$00,$03,$03  ; ($9C50)
                .byte $03,$00,$00,$00,$04,$04,$04,$01,$01,$01,$02,$02,$02,$00,$00,$00  ; ($9C60)
                .byte $01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$1B  ; ($9C70)
                .byte $1B,$1B,$00,$00,$00,$01,$01,$01,$01,$01,$01,$00,$00,$00,$03,$03  ; ($9C80)
                .byte $03,$02,$02,$02,$00,$00,$00,$01,$01,$01,$00,$00,$00,$01,$01,$01  ; ($9C90)
                .byte $00,$00,$00,$04,$04,$04,$00,$00,$00,$02,$02,$02,$04,$04,$04,$00  ; ($9CA0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$00,$00  ; ($9CB0)
                .byte $00,$04,$04,$04,$00,$00,$00,$03,$03,$03,$00,$00,$00,$03,$03,$03  ; ($9CC0)
                .byte $03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9CD0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02  ; ($9CE0)
                .byte $02,$03,$03,$03,$00,$00,$00,$02,$02,$02,$00,$00,$00,$00,$00,$00  ; ($9CF0)
                .byte $00,$00,$00,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9D00)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9D10)
                .byte $00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9D20)
                .byte $01,$01,$01,$04,$04,$04,$00,$00,$00,$04,$04,$04,$04,$04,$04,$01  ; ($9D30)
                .byte $01,$01,$00,$00,$00,$03,$03,$03,$00,$00,$00,$02,$02,$02,$03,$03  ; ($9D40)
                .byte $03,$00,$18,$00,$00,$1E,$00,$00,$16,$00,$00,$1E,$00,$00,$16,$00  ; ($9D50)
                .byte $00,$1E,$00,$00,$16,$00,$00,$1E,$00,$00,$16,$00,$02,$02,$02,$03  ; ($9D60)
                .byte $03,$03,$00,$14,$00,$02,$02,$02,$00,$18,$00,$00,$1E,$00,$00,$14  ; ($9D70)
                .byte $00,$02,$02,$02,$00,$12,$00,$00,$12,$00,$00,$1C,$00,$00,$12,$00  ; ($9D80)
                .byte $00,$12,$00,$00,$1C,$00,$00,$12,$00,$00,$1C,$00,$00,$18,$00,$04  ; ($9D90)
                .byte $04,$04,$00,$12,$00,$00,$1C,$00,$00,$12,$00,$00,$18,$00,$01,$01  ; ($9DA0)
                .byte $01,$04,$04,$04,$00,$1D,$00,$04,$04,$04,$04,$04,$04,$01,$01,$01  ; ($9DB0)
                .byte $00,$18,$00,$03,$03,$03,$00,$14,$00,$02,$02,$02,$03,$03,$03,$00  ; ($9DC0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9DD0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02,$03,$03,$03  ; ($9DE0)
                .byte $00,$00,$00,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02  ; ($9DF0)
                .byte $02,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9E00)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04  ; ($9E10)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$04  ; ($9E20)
                .byte $04,$04,$00,$00,$00,$04,$04,$04,$04,$04,$04,$01,$01,$01,$00,$00  ; ($9E30)
                .byte $00,$03,$03,$03,$00,$00,$00,$02,$02,$02,$03,$03,$03,$04,$04,$04  ; ($9E40)
                .byte $04,$04,$04,$1B,$1B,$1B,$01,$01,$01,$00,$00,$00,$02,$02,$02,$00  ; ($9E50)
                .byte $00,$00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9E60)
                .byte $00,$00,$00,$00,$01,$01,$01,$04,$04,$04,$00,$00,$00,$00,$00,$00  ; ($9E70)
                .byte $01,$01,$01,$01,$01,$05,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A  ; ($9E80)
                .byte $0A,$0A,$0A,$0A,$0A,$07,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9E90)
                .byte $00,$04,$04,$04,$01,$01,$01,$02,$02,$02,$02,$02,$02,$1B,$1B,$1B  ; ($9EA0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$00  ; ($9EB0)
                .byte $00,$00,$00,$00,$00,$02,$02,$02,$03,$03,$03,$04,$04,$04,$04,$04  ; ($9EC0)
                .byte $04,$1B,$1B,$1B,$01,$01,$01,$00,$18,$00,$02,$02,$02,$00,$14,$00  ; ($9ED0)
                .byte $04,$04,$04,$00,$18,$00,$00,$1E,$00,$00,$16,$00,$00,$16,$00,$4D  ; ($9EE0)
                .byte $4F,$4E,$2A,$01,$01,$04,$04,$04,$00,$14,$00,$00,$16,$00,$01,$01  ; ($9EF0)
                .byte $01,$01,$05,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($9F00)
                .byte $09,$09,$09,$09,$07,$01,$00,$18,$00,$00,$1E,$00,$00,$16,$00,$04  ; ($9F10)
                .byte $04,$04,$01,$01,$01,$02,$02,$02,$02,$02,$02,$1B,$1B,$1B,$00,$12  ; ($9F20)
                .byte $00,$00,$1C,$00,$00,$14,$00,$03,$03,$03,$00,$18,$00,$00,$16,$00  ; ($9F30)
                .byte $00,$16,$00,$02,$02,$02,$03,$03,$03,$04,$04,$04,$04,$04,$04,$1B  ; ($9F40)
                .byte $1B,$1B,$01,$01,$01,$00,$00,$00,$02,$02,$02,$00,$00,$00,$04,$04  ; ($9F50)
                .byte $04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9F60)
                .byte $01,$01,$01,$04,$04,$04,$00,$00,$00,$00,$00,$00,$01,$01,$01,$05  ; ($9F70)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($9F80)
                .byte $09,$09,$09,$07,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04  ; ($9F90)
                .byte $01,$01,$01,$02,$02,$02,$02,$02,$02,$1B,$1B,$1B,$00,$00,$00,$00  ; ($9FA0)
                .byte $00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9FB0)
                .byte $00,$02,$02,$02,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($9FC0)
                .byte $03,$03,$03,$00,$00,$00,$1B,$1B,$1B,$00,$00,$00,$01,$01,$01,$00  ; ($9FD0)
                .byte $00,$00,$03,$03,$03,$00,$00,$00,$04,$04,$04,$00,$00,$00,$01,$01  ; ($9FE0)
                .byte $01,$02,$02,$02,$00,$00,$00,$02,$02,$02,$01,$01,$05,$09,$09,$09  ; ($9FF0)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A000)
                .byte $09,$09,$0A,$0A,$0A,$0A,$0A,$20,$00,$00,$00,$21,$0A,$0A,$0A,$0A  ; ($A010)
                .byte $0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$20  ; ($A020)
                .byte $00,$00,$00,$21,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A  ; ($A030)
                .byte $0A,$0A,$04,$04,$04,$00,$14,$00,$00,$1E,$00,$00,$16,$00,$03,$03  ; ($A040)
                .byte $03,$00,$1F,$00,$1B,$1B,$1B,$00,$1D,$00,$01,$01,$01,$00,$1F,$00  ; ($A050)
                .byte $03,$03,$03,$00,$1F,$00,$04,$04,$04,$00,$18,$00,$01,$01,$01,$02  ; ($A060)
                .byte $02,$02,$00,$1D,$00,$02,$02,$02,$01,$05,$09,$09,$09,$09,$09,$09  ; ($A070)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A080)
                .byte $09,$09,$09,$09,$09,$0C,$00,$1F,$00,$0D,$09,$09,$09,$09,$09,$09  ; ($A090)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$0C,$00,$1D  ; ($A0A0)
                .byte $00,$0D,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A0B0)
                .byte $04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$00  ; ($A0C0)
                .byte $00,$00,$1B,$1B,$1B,$00,$00,$00,$01,$01,$01,$00,$00,$00,$03,$03  ; ($A0D0)
                .byte $03,$00,$00,$00,$04,$04,$04,$00,$00,$00,$01,$01,$01,$02,$02,$02  ; ($A0E0)
                .byte $00,$00,$00,$02,$02,$02,$05,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A0F0)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A100)
                .byte $09,$09,$09,$0C,$00,$00,$00,$0D,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A110)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$0C,$00,$00,$00,$0D  ; ($A120)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$02,$02  ; ($A130)
                .byte $02,$00,$00,$00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($A140)
                .byte $01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$00  ; ($A150)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($A160)
                .byte $00,$01,$01,$05,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A170)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A180)
                .byte $09,$0C,$00,$00,$00,$0D,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A190)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$0C,$00,$00,$00,$0D,$09,$09  ; ($A1A0)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$02,$02,$02,$00  ; ($A1B0)
                .byte $1D,$00,$04,$04,$04,$00,$18,$00,$00,$12,$00,$00,$18,$00,$01,$01  ; ($A1C0)
                .byte $01,$00,$12,$00,$00,$12,$00,$00,$18,$00,$01,$01,$01,$00,$18,$00  ; ($A1D0)
                .byte $00,$1E,$00,$00,$16,$00,$00,$1E,$00,$00,$16,$00,$00,$16,$00,$01  ; ($A1E0)
                .byte $05,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A1F0)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$0C  ; ($A200)
                .byte $00,$18,$00,$0D,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A210)
                .byte $09,$09,$09,$09,$09,$09,$09,$0C,$00,$14,$00,$0D,$09,$09,$09,$09  ; ($A220)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$02,$02,$02,$00,$00,$00  ; ($A230)
                .byte $04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$00  ; ($A240)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$00,$00,$00,$00,$00  ; ($A250)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$05,$09,$09  ; ($A260)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A270)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$0C,$00,$00  ; ($A280)
                .byte $00,$0D,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A290)
                .byte $09,$09,$09,$09,$09,$0C,$00,$00,$00,$0D,$09,$09,$09,$09,$09,$09  ; ($A2A0)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$03,$03,$03,$00,$00,$00,$1B,$1B  ; ($A2B0)
                .byte $1B,$02,$02,$02,$00,$00,$00,$01,$01,$01,$02,$02,$02,$03,$03,$03  ; ($A2C0)
                .byte $00,$00,$00,$02,$02,$02,$1B,$1B,$1B,$00,$00,$00,$04,$04,$04,$02  ; ($A2D0)
                .byte $02,$02,$04,$04,$04,$04,$04,$04,$01,$01,$05,$09,$09,$09,$09,$09  ; ($A2E0)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A2F0)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$0C,$00,$00,$00,$0D  ; ($A300)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A310)
                .byte $09,$09,$09,$0C,$00,$00,$00,$0D,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A320)
                .byte $09,$09,$09,$09,$09,$09,$03,$03,$03,$00,$14,$00,$1B,$1B,$1B,$02  ; ($A330)
                .byte $02,$02,$00,$1F,$00,$01,$01,$01,$02,$02,$02,$03,$03,$03,$00,$1F  ; ($A340)
                .byte $00,$02,$02,$02,$1B,$1B,$1B,$00,$1F,$00,$04,$04,$04,$02,$02,$02  ; ($A350)
                .byte $04,$04,$04,$04,$04,$04,$01,$05,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A360)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A370)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$0C,$00,$1F,$00,$0D,$09,$09  ; ($A380)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A390)
                .byte $09,$0C,$00,$1D,$00,$0D,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A3A0)
                .byte $09,$09,$09,$09,$03,$03,$03,$00,$00,$00,$1B,$1B,$1B,$02,$02,$02  ; ($A3B0)
                .byte $00,$00,$00,$01,$01,$01,$02,$02,$02,$03,$03,$03,$00,$00,$00,$02  ; ($A3C0)
                .byte $02,$02,$1B,$1B,$1B,$00,$00,$00,$04,$04,$04,$02,$02,$02,$04,$04  ; ($A3D0)
                .byte $04,$04,$04,$04,$05,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($A3E0)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$0B,$0B,$0B,$0B  ; ($A3F0)
                .byte $0B,$0B,$0B,$0B,$0B,$0B,$0B,$22,$00,$00,$00,$23,$0B,$0B,$0B,$0B  ; ($A400)
                .byte $0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$22  ; ($A410)
                .byte $00,$00,$00,$23,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B  ; ($A420)
                .byte $0B,$0B,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($A430)
                .byte $00,$02,$02,$02,$03,$03,$03,$1B,$1B,$1B,$00,$00,$00,$00,$00,$00  ; ($A440)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($A450)
                .byte $00,$00,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$06,$04,$04  ; ($A460)
                .byte $04,$1B,$1B,$1B,$02,$02,$02,$03,$03,$03,$04,$04,$04,$00,$00,$00  ; ($A470)
                .byte $02,$02,$02,$00,$00,$00,$00,$00,$00,$03,$03,$03,$02,$02,$02,$00  ; ($A480)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($A490)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03  ; ($A4A0)
                .byte $03,$03,$03,$00,$12,$00,$00,$1C,$00,$00,$12,$00,$00,$18,$00,$02  ; ($A4B0)
                .byte $02,$02,$03,$03,$03,$1B,$1B,$1B,$00,$12,$00,$00,$1C,$00,$00,$12  ; ($A4C0)
                .byte $00,$00,$12,$00,$00,$1C,$00,$00,$12,$00,$00,$1C,$00,$00,$14,$00  ; ($A4D0)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$06,$01,$04,$04,$04,$1B  ; ($A4E0)
                .byte $1B,$1B,$02,$02,$02,$03,$03,$03,$04,$04,$04,$00,$14,$00,$02,$02  ; ($A4F0)
                .byte $02,$00,$12,$00,$00,$18,$00,$03,$03,$03,$02,$02,$02,$00,$14,$00  ; ($A500)
                .byte $00,$16,$00,$00,$1E,$00,$00,$16,$00,$00,$1E,$00,$00,$16,$00,$00  ; ($A510)
                .byte $1C,$00,$00,$12,$00,$00,$1C,$00,$00,$14,$00,$03,$03,$03,$03,$03  ; ($A520)
                .byte $03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02  ; ($A530)
                .byte $03,$03,$03,$1B,$1B,$1B,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($A540)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$09,$09  ; ($A550)
                .byte $09,$09,$09,$09,$09,$09,$09,$06,$01,$01,$04,$04,$04,$1B,$1B,$1B  ; ($A560)
                .byte $02,$02,$02,$03,$03,$03,$04,$04,$04,$00,$00,$00,$02,$02,$02,$00  ; ($A570)
                .byte $00,$00,$00,$00,$00,$03,$03,$03,$02,$02,$02,$00,$00,$00,$00,$00  ; ($A580)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($A590)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$02,$02,$02,$04  ; ($A5A0)
                .byte $04,$04,$04,$04,$04,$02,$02,$02,$00,$00,$00,$00,$00,$00,$01,$01  ; ($A5B0)
                .byte $01,$00,$00,$00,$00,$00,$00,$03,$03,$03,$02,$02,$02,$00,$00,$00  ; ($A5C0)
                .byte $01,$01,$01,$00,$00,$00,$01,$01,$0E,$00,$00,$00,$09,$09,$09,$09  ; ($A5D0)
                .byte $09,$09,$09,$09,$06,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($A5E0)
                .byte $00,$00,$00,$00,$02,$02,$02,$00,$00,$00,$04,$04,$04,$00,$00,$00  ; ($A5F0)
                .byte $03,$03,$03,$02,$02,$02,$1B,$1B,$1B,$00,$00,$00,$03,$03,$03,$02  ; ($A600)
                .byte $02,$02,$02,$02,$02,$02,$02,$02,$03,$03,$03,$04,$04,$04,$00,$00  ; ($A610)
                .byte $00,$04,$04,$04,$00,$00,$00,$02,$02,$02,$02,$02,$02,$04,$04,$04  ; ($A620)
                .byte $04,$04,$04,$02,$02,$02,$00,$18,$00,$00,$16,$00,$01,$01,$01,$00  ; ($A630)
                .byte $12,$00,$00,$18,$00,$03,$03,$03,$02,$02,$02,$00,$1F,$00,$01,$01  ; ($A640)
                .byte $01,$00,$18,$00,$01,$05,$0C,$00,$1D,$00,$09,$09,$09,$09,$09,$09  ; ($A650)
                .byte $09,$06,$01,$00,$14,$00,$00,$1E,$00,$00,$16,$00,$00,$1E,$00,$00  ; ($A660)
                .byte $16,$00,$02,$02,$02,$00,$14,$00,$04,$04,$04,$00,$1F,$00,$03,$03  ; ($A670)
                .byte $03,$02,$02,$02,$1B,$1B,$1B,$00,$1D,$00,$03,$03,$03,$02,$02,$02  ; ($A680)
                .byte $02,$02,$02,$02,$02,$02,$03,$03,$03,$04,$04,$04,$00,$1D,$00,$04  ; ($A690)
                .byte $04,$04,$00,$1D,$00,$02,$02,$02,$02,$02,$02,$04,$04,$04,$04,$04  ; ($A6A0)
                .byte $04,$02,$02,$02,$00,$00,$00,$00,$00,$00,$01,$01,$01,$00,$00,$00  ; ($A6B0)
                .byte $00,$00,$00,$03,$03,$03,$02,$02,$02,$00,$00,$00,$01,$01,$01,$00  ; ($A6C0)
                .byte $00,$00,$05,$09,$0C,$00,$00,$00,$09,$09,$09,$09,$09,$09,$06,$01  ; ($A6D0)
                .byte $01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($A6E0)
                .byte $02,$02,$02,$00,$00,$00,$04,$04,$04,$00,$00,$00,$03,$03,$03,$02  ; ($A6F0)
                .byte $02,$02,$1B,$1B,$1B,$00,$00,$00,$03,$03,$03,$02,$02,$02,$02,$02  ; ($A700)
                .byte $02,$02,$02,$02,$03,$03,$03,$04,$04,$04,$00,$00,$00,$04,$04,$04  ; ($A710)
                .byte $00,$00,$00,$02,$02,$02,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00  ; ($A720)
                .byte $00,$00,$00,$00,$00,$04,$04,$04,$00,$00,$00,$01,$01,$01,$00,$00  ; ($A730)
                .byte $00,$04,$04,$04,$02,$02,$02,$00,$00,$00,$00,$00,$00,$01,$01,$05  ; ($A740)
                .byte $09,$09,$0C,$00,$00,$00,$09,$09,$09,$09,$09,$06,$01,$01,$01,$00  ; ($A750)
                .byte $00,$00,$04,$04,$04,$00,$00,$00,$04,$04,$04,$00,$00,$00,$00,$00  ; ($A760)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02,$00,$00,$00  ; ($A770)
                .byte $01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04  ; ($A780)
                .byte $04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($A790)
                .byte $00,$01,$01,$01,$02,$02,$02,$00,$12,$00,$00,$12,$00,$00,$12,$00  ; ($A7A0)
                .byte $00,$18,$00,$04,$04,$04,$00,$14,$00,$01,$01,$01,$00,$1F,$00,$04  ; ($A7B0)
                .byte $04,$04,$02,$02,$02,$00,$18,$00,$00,$16,$00,$01,$05,$09,$09,$09  ; ($A7C0)
                .byte $0C,$00,$14,$00,$09,$09,$09,$09,$06,$01,$01,$01,$01,$00,$14,$00  ; ($A7D0)
                .byte $04,$04,$04,$00,$18,$00,$04,$04,$04,$00,$18,$00,$00,$1E,$00,$00  ; ($A7E0)
                .byte $16,$00,$00,$1E,$00,$00,$18,$00,$02,$02,$02,$00,$14,$00,$01,$01  ; ($A7F0)
                .byte $01,$00,$12,$00,$00,$1C,$00,$00,$12,$00,$00,$14,$00,$04,$04,$04  ; ($A800)
                .byte $00,$14,$00,$00,$1E,$00,$00,$16,$00,$00,$1E,$00,$00,$16,$00,$01  ; ($A810)
                .byte $01,$01,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($A820)
                .byte $00,$04,$04,$04,$00,$00,$00,$01,$01,$01,$00,$00,$00,$04,$04,$04  ; ($A830)
                .byte $02,$02,$02,$00,$00,$00,$00,$00,$00,$05,$09,$09,$09,$09,$0C,$00  ; ($A840)
                .byte $00,$00,$09,$09,$09,$06,$01,$01,$01,$01,$01,$00,$00,$00,$04,$04  ; ($A850)
                .byte $04,$00,$00,$00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($A860)
                .byte $00,$00,$00,$00,$00,$00,$02,$02,$02,$00,$00,$00,$01,$01,$01,$00  ; ($A870)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04,$00,$00  ; ($A880)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01  ; ($A890)
                .byte $03,$03,$03,$00,$00,$00,$04,$04,$04,$03,$03,$03,$03,$03,$03,$00  ; ($A8A0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($A8B0)
                .byte $00,$00,$00,$00,$01,$01,$05,$09,$09,$09,$09,$09,$0C,$00,$00,$00  ; ($A8C0)
                .byte $09,$09,$06,$00,$00,$00,$03,$03,$03,$00,$00,$00,$03,$03,$03,$00  ; ($A8D0)
                .byte $00,$00,$01,$01,$01,$00,$00,$00,$02,$02,$02,$04,$04,$04,$03,$03  ; ($A8E0)
                .byte $03,$00,$00,$00,$01,$01,$01,$00,$00,$00,$03,$03,$03,$03,$03,$03  ; ($A8F0)
                .byte $03,$03,$03,$03,$03,$03,$00,$00,$00,$02,$02,$02,$00,$00,$00,$01  ; ($A900)
                .byte $01,$01,$01,$01,$01,$03,$03,$03,$03,$03,$03,$01,$01,$01,$03,$03  ; ($A910)
                .byte $03,$00,$18,$00,$04,$04,$04,$03,$03,$03,$03,$03,$03,$00,$12,$00  ; ($A920)
                .byte $00,$12,$00,$00,$1C,$00,$00,$18,$00,$00,$1C,$00,$00,$12,$00,$00  ; ($A930)
                .byte $18,$00,$01,$05,$09,$09,$09,$09,$09,$09,$0C,$00,$1D,$00,$09,$06  ; ($A940)
                .byte $01,$00,$14,$00,$03,$03,$03,$00,$1D,$00,$03,$03,$03,$00,$1F,$00  ; ($A950)
                .byte $01,$01,$01,$00,$1F,$00,$02,$02,$02,$04,$04,$04,$03,$03,$03,$00  ; ($A960)
                .byte $1F,$00,$01,$01,$01,$00,$14,$00,$03,$03,$03,$03,$03,$03,$03,$03  ; ($A970)
                .byte $03,$03,$03,$03,$00,$1D,$00,$02,$02,$02,$00,$1D,$00,$01,$01,$01  ; ($A980)
                .byte $01,$01,$01,$03,$03,$03,$03,$03,$03,$01,$01,$01,$03,$03,$03,$00  ; ($A990)
                .byte $00,$00,$04,$04,$04,$03,$03,$03,$03,$03,$03,$00,$00,$00,$00,$00  ; ($A9A0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($A9B0)
                .byte $05,$09,$09,$09,$09,$09,$09,$09,$0C,$00,$00,$00,$06,$01,$01,$00  ; ($A9C0)
                .byte $00,$00,$03,$03,$03,$00,$00,$00,$03,$03,$03,$00,$00,$00,$01,$01  ; ($A9D0)
                .byte $01,$00,$00,$00,$02,$02,$02,$04,$04,$04,$03,$03,$03,$00,$00,$00  ; ($A9E0)
                .byte $01,$01,$01,$00,$00,$00,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03  ; ($A9F0)
                .byte $03,$03,$00,$00,$00,$02,$02,$02,$00,$00,$00,$01,$01,$01,$01,$01  ; ($AA00)
                .byte $01,$03,$03,$03,$03,$03,$03,$01,$01,$01,$04,$04,$04,$00,$00,$00  ; ($AA10)
                .byte $00,$00,$00,$04,$04,$04,$00,$00,$00,$04,$04,$04,$00,$00,$00,$04  ; ($AA20)
                .byte $04,$04,$00,$00,$00,$03,$03,$03,$00,$00,$00,$01,$01,$05,$09,$09  ; ($AA30)
                .byte $09,$09,$09,$09,$09,$09,$0C,$00,$00,$00,$04,$04,$04,$00,$00,$00  ; ($AA40)
                .byte $04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$00  ; ($AA50)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($AA60)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02  ; ($AA70)
                .byte $00,$00,$00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($AA80)
                .byte $00,$00,$00,$00,$00,$04,$04,$04,$04,$04,$04,$00,$18,$00,$00,$16  ; ($AA90)
                .byte $00,$04,$04,$04,$00,$14,$00,$04,$04,$04,$00,$1F,$00,$04,$04,$04  ; ($AAA0)
                .byte $00,$1F,$00,$03,$03,$03,$00,$18,$00,$01,$05,$09,$09,$09,$09,$09  ; ($AAB0)
                .byte $09,$09,$09,$09,$0C,$00,$14,$00,$04,$04,$04,$00,$14,$00,$04,$04  ; ($AAC0)
                .byte $04,$00,$12,$00,$00,$1C,$00,$00,$18,$00,$01,$01,$01,$00,$18,$00  ; ($AAD0)
                .byte $00,$16,$00,$00,$1E,$00,$00,$16,$00,$00,$16,$00,$00,$16,$00,$00  ; ($AAE0)
                .byte $16,$00,$00,$16,$00,$00,$1E,$00,$00,$16,$00,$02,$02,$02,$00,$14  ; ($AAF0)
                .byte $00,$04,$04,$04,$00,$12,$00,$00,$1C,$00,$00,$12,$00,$00,$1C,$00  ; ($AB00)
                .byte $00,$14,$00,$04,$04,$04,$04,$04,$04,$00,$00,$00,$00,$00,$00,$04  ; ($AB10)
                .byte $04,$04,$00,$00,$00,$04,$04,$04,$00,$00,$00,$04,$04,$04,$00,$00  ; ($AB20)
                .byte $00,$03,$03,$03,$00,$00,$00,$05,$09,$09,$09,$09,$09,$09,$09,$09  ; ($AB30)
                .byte $09,$09,$0C,$00,$00,$00,$04,$04,$04,$00,$00,$00,$04,$04,$04,$00  ; ($AB40)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$00,$00,$00,$00,$00  ; ($AB50)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($AB60)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02,$00,$00,$00,$04  ; ($AB70)
                .byte $04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($AB80)
                .byte $00,$04,$04,$04,$01,$01,$01,$03,$03,$03,$00,$00,$00,$02,$02,$02  ; ($AB90)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($ABA0)
                .byte $00,$00,$01,$01,$05,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($ABB0)
                .byte $06,$00,$00,$00,$03,$03,$03,$00,$00,$00,$01,$01,$01,$04,$04,$04  ; ($ABC0)
                .byte $02,$02,$02,$01,$01,$01,$02,$02,$02,$03,$03,$03,$00,$00,$00,$01  ; ($ABD0)
                .byte $01,$01,$00,$00,$00,$02,$02,$02,$00,$00,$00,$01,$01,$01,$00,$00  ; ($ABE0)
                .byte $00,$03,$03,$03,$00,$00,$00,$01,$01,$01,$00,$00,$00,$04,$04,$04  ; ($ABF0)
                .byte $00,$00,$00,$01,$01,$01,$02,$02,$02,$03,$03,$03,$00,$00,$00,$04  ; ($AC00)
                .byte $04,$04,$01,$01,$01,$03,$03,$03,$00,$18,$00,$02,$02,$02,$00,$12  ; ($AC10)
                .byte $00,$00,$1C,$00,$00,$12,$00,$00,$1C,$00,$00,$18,$00,$00,$16,$00  ; ($AC20)
                .byte $01,$05,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$06,$01,$00  ; ($AC30)
                .byte $1D,$00,$03,$03,$03,$00,$14,$00,$01,$01,$01,$04,$04,$04,$02,$02  ; ($AC40)
                .byte $02,$01,$01,$01,$02,$02,$02,$03,$03,$03,$00,$1D,$00,$01,$01,$01  ; ($AC50)
                .byte $00,$1F,$00,$02,$02,$02,$00,$1D,$00,$01,$01,$01,$00,$1F,$00,$03  ; ($AC60)
                .byte $03,$03,$00,$1F,$00,$01,$01,$01,$00,$1D,$00,$04,$04,$04,$00,$18  ; ($AC70)
                .byte $00,$01,$01,$01,$02,$02,$02,$03,$03,$03,$00,$1D,$00,$04,$04,$04  ; ($AC80)
                .byte $01,$01,$01,$03,$03,$03,$00,$00,$00,$02,$02,$02,$00,$00,$00,$00  ; ($AC90)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$05,$09  ; ($ACA0)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$06,$01,$01,$00,$00,$00  ; ($ACB0)
                .byte $03,$03,$03,$00,$00,$00,$01,$01,$01,$04,$04,$04,$02,$02,$02,$01  ; ($ACC0)
                .byte $01,$01,$02,$02,$02,$03,$03,$03,$00,$00,$00,$01,$01,$01,$00,$00  ; ($ACD0)
                .byte $00,$02,$02,$02,$00,$00,$00,$01,$01,$01,$00,$00,$00,$03,$03,$03  ; ($ACE0)
                .byte $00,$00,$00,$01,$01,$01,$00,$00,$00,$04,$04,$04,$00,$00,$00,$01  ; ($ACF0)
                .byte $01,$01,$02,$4A,$02,$03,$03,$03,$00,$00,$00,$04,$04,$04,$1B,$1B  ; ($AD00)
                .byte $1B,$00,$00,$00,$00,$00,$00,$04,$04,$04,$00,$00,$00,$03,$03,$03  ; ($AD10)
                .byte $1B,$1B,$1B,$01,$01,$01,$04,$04,$04,$01,$01,$05,$09,$09,$09,$09  ; ($AD20)
                .byte $09,$09,$09,$09,$09,$09,$09,$06,$01,$01,$01,$00,$00,$00,$00,$00  ; ($AD30)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($AD40)
                .byte $00,$00,$00,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02  ; ($AD50)
                .byte $02,$02,$00,$00,$00,$03,$03,$03,$00,$00,$00,$02,$02,$02,$00,$00  ; ($AD60)
                .byte $00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$02,$02,$02,$02,$02,$02  ; ($AD70)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$1B,$1B,$1B,$00  ; ($AD80)
                .byte $12,$00,$00,$18,$00,$04,$04,$04,$00,$1F,$00,$03,$03,$03,$1B,$1B  ; ($AD90)
                .byte $1B,$01,$01,$01,$04,$04,$04,$01,$05,$09,$09,$09,$09,$09,$09,$09  ; ($ADA0)
                .byte $09,$09,$09,$09,$06,$01,$01,$01,$01,$00,$12,$00,$00,$12,$00,$00  ; ($ADB0)
                .byte $14,$00,$00,$1E,$00,$00,$16,$00,$00,$1E,$00,$00,$16,$00,$00,$16  ; ($ADC0)
                .byte $00,$01,$01,$01,$00,$14,$00,$00,$1C,$00,$00,$18,$00,$02,$02,$02  ; ($ADD0)
                .byte $00,$14,$00,$03,$03,$03,$00,$18,$00,$02,$02,$02,$00,$14,$00,$00  ; ($ADE0)
                .byte $1E,$00,$00,$16,$00,$03,$03,$03,$02,$02,$02,$02,$02,$02,$00,$14  ; ($ADF0)
                .byte $00,$00,$1E,$00,$00,$16,$00,$03,$03,$03,$1B,$1B,$1B,$00,$00,$00  ; ($AE00)
                .byte $00,$00,$00,$04,$04,$04,$00,$00,$00,$03,$03,$03,$1B,$1B,$1B,$01  ; ($AE10)
                .byte $01,$01,$04,$04,$04,$05,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($AE20)
                .byte $09,$06,$01,$01,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($AE30)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01  ; ($AE40)
                .byte $01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02,$00,$00  ; ($AE50)
                .byte $00,$03,$03,$03,$00,$00,$00,$02,$02,$02,$00,$00,$00,$00,$00,$00  ; ($AE60)
                .byte $00,$00,$00,$03,$03,$03,$02,$02,$02,$02,$02,$02,$00,$00,$00,$00  ; ($AE70)
                .byte $00,$00,$00,$00,$00,$03,$03,$03,$01,$01,$01,$00,$00,$00,$02,$02  ; ($AE80)
                .byte $02,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($AE90)
                .byte $01,$01,$05,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$06,$02  ; ($AEA0)
                .byte $02,$02,$03,$03,$03,$01,$01,$01,$04,$04,$04,$00,$00,$00,$01,$01  ; ($AEB0)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$00,$00,$00,$00,$00,$00  ; ($AEC0)
                .byte $00,$00,$00,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($AED0)
                .byte $00,$00,$00,$00,$00,$01,$01,$01,$00,$00,$00,$1B,$1B,$1B,$04,$04  ; ($AEE0)
                .byte $04,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01  ; ($AEF0)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$00,$18,$00,$02,$02,$02,$04  ; ($AF00)
                .byte $04,$04,$00,$18,$00,$00,$16,$00,$00,$1E,$00,$00,$16,$00,$01,$05  ; ($AF10)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$06,$01,$02,$02,$02  ; ($AF20)
                .byte $03,$03,$03,$01,$01,$01,$04,$04,$04,$00,$1D,$00,$01,$01,$01,$01  ; ($AF30)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$00,$18,$00,$00,$16,$00,$00,$16  ; ($AF40)
                .byte $00,$01,$01,$01,$00,$18,$00,$00,$1C,$00,$00,$12,$00,$00,$1C,$00  ; ($AF50)
                .byte $00,$18,$00,$01,$01,$01,$00,$14,$00,$1B,$1B,$1B,$04,$04,$04,$03  ; ($AF60)
                .byte $03,$03,$00,$14,$00,$00,$1E,$00,$00,$14,$00,$01,$01,$01,$01,$01  ; ($AF70)
                .byte $01,$01,$01,$01,$01,$01,$01,$00,$00,$00,$02,$02,$02,$04,$04,$04  ; ($AF80)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$05,$0B,$0B,$0B  ; ($AF90)
                .byte $0B,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$06,$01,$01,$02,$02,$02,$03,$03  ; ($AFA0)
                .byte $03,$01,$01,$01,$04,$04,$04,$00,$00,$00,$01,$01,$01,$01,$01,$01  ; ($AFB0)
                .byte $01,$01,$01,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01  ; ($AFC0)
                .byte $01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($AFD0)
                .byte $00,$01,$01,$01,$00,$00,$00,$1B,$1B,$1B,$04,$04,$04,$03,$03,$03  ; ($AFE0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$01,$01,$01,$01  ; ($AFF0)
                .byte $01,$01,$02,$02,$02,$00,$00,$00,$04,$04,$04,$00,$00,$00,$00,$00  ; ($B000)
                .byte $00,$01,$01,$01,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B010)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04,$02,$02,$02,$02  ; ($B020)
                .byte $02,$02,$02,$02,$02,$00,$00,$00,$01,$01,$01,$24,$27,$2A,$2D,$30  ; ($B030)
                .byte $33,$01,$01,$01,$00,$00,$00,$02,$02,$02,$01,$01,$01,$02,$02,$02  ; ($B040)
                .byte $00,$00,$00,$1B,$1B,$1B,$02,$02,$02,$03,$03,$03,$00,$00,$00,$01  ; ($B050)
                .byte $01,$01,$00,$00,$00,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B060)
                .byte $00,$04,$04,$04,$00,$00,$00,$01,$01,$01,$00,$00,$00,$01,$01,$01  ; ($B070)
                .byte $02,$02,$02,$00,$1A,$00,$04,$04,$04,$00,$12,$00,$00,$18,$00,$01  ; ($B080)
                .byte $01,$01,$01,$01,$01,$00,$18,$00,$00,$16,$00,$00,$1E,$00,$00,$16  ; ($B090)
                .byte $00,$00,$1E,$00,$00,$16,$00,$04,$04,$04,$02,$02,$02,$02,$02,$02  ; ($B0A0)
                .byte $02,$02,$02,$00,$14,$00,$01,$01,$01,$25,$28,$2B,$2E,$31,$34,$01  ; ($B0B0)
                .byte $01,$01,$00,$1F,$00,$02,$02,$02,$01,$01,$01,$02,$02,$02,$00,$1F  ; ($B0C0)
                .byte $00,$1B,$1B,$1B,$02,$02,$02,$03,$03,$03,$00,$1F,$00,$01,$01,$01  ; ($B0D0)
                .byte $00,$1D,$00,$01,$01,$01,$00,$14,$00,$00,$1E,$00,$00,$14,$00,$04  ; ($B0E0)
                .byte $04,$04,$00,$14,$00,$01,$01,$01,$00,$1A,$00,$01,$01,$01,$02,$02  ; ($B0F0)
                .byte $02,$00,$00,$00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$01,$01,$01  ; ($B100)
                .byte $01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B110)
                .byte $00,$00,$00,$00,$00,$04,$04,$04,$02,$02,$02,$02,$02,$02,$02,$02  ; ($B120)
                .byte $02,$00,$00,$00,$01,$01,$01,$26,$29,$2C,$2F,$32,$35,$01,$01,$01  ; ($B130)
                .byte $00,$00,$00,$02,$02,$02,$01,$01,$01,$02,$02,$02,$00,$00,$00,$1B  ; ($B140)
                .byte $1B,$1B,$02,$02,$02,$03,$03,$03,$00,$00,$00,$01,$01,$01,$00,$00  ; ($B150)
                .byte $00,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04  ; ($B160)
                .byte $00,$00,$00,$01,$01,$01,$00,$00,$00,$01,$01,$01,$1B,$1B,$1B,$02  ; ($B170)
                .byte $02,$02,$01,$01,$01,$02,$02,$02,$00,$00,$00,$03,$03,$03,$01,$01  ; ($B180)
                .byte $05,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$11,$02,$02,$02  ; ($B190)
                .byte $00,$00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00  ; ($B1A0)
                .byte $00,$00,$01,$01,$01,$3F,$42,$45,$36,$39,$3C,$01,$01,$01,$00,$00  ; ($B1B0)
                .byte $00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$00,$00,$00  ; ($B1C0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$02  ; ($B1D0)
                .byte $02,$02,$00,$00,$00,$02,$02,$02,$00,$00,$00,$01,$01,$01,$00,$00  ; ($B1E0)
                .byte $00,$02,$02,$02,$00,$00,$00,$02,$02,$02,$1B,$1B,$1B,$02,$02,$02  ; ($B1F0)
                .byte $01,$01,$01,$02,$02,$02,$00,$1F,$00,$03,$03,$03,$01,$05,$09,$09  ; ($B200)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$06,$01,$02,$02,$02,$00,$18  ; ($B210)
                .byte $00,$00,$16,$00,$03,$03,$03,$00,$12,$00,$00,$1C,$00,$00,$14,$00  ; ($B220)
                .byte $01,$01,$01,$40,$43,$46,$37,$3A,$3D,$01,$01,$01,$00,$18,$00,$00  ; ($B230)
                .byte $12,$00,$00,$14,$00,$03,$03,$03,$00,$18,$00,$00,$1C,$00,$00,$12  ; ($B240)
                .byte $00,$00,$1C,$00,$00,$18,$00,$03,$03,$03,$00,$14,$00,$02,$02,$02  ; ($B250)
                .byte $00,$1D,$00,$02,$02,$02,$00,$1D,$00,$01,$01,$01,$00,$1D,$00,$02  ; ($B260)
                .byte $02,$02,$00,$14,$00,$02,$02,$02,$1B,$1B,$1B,$02,$02,$02,$01,$01  ; ($B270)
                .byte $01,$02,$02,$02,$00,$00,$00,$03,$03,$03,$05,$09,$09,$09,$09,$09  ; ($B280)
                .byte $09,$09,$09,$09,$09,$09,$06,$01,$01,$02,$02,$02,$00,$00,$00,$00  ; ($B290)
                .byte $00,$00,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01  ; ($B2A0)
                .byte $01,$41,$44,$47,$38,$3B,$3E,$01,$01,$01,$00,$00,$00,$00,$00,$00  ; ($B2B0)
                .byte $00,$00,$00,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B2C0)
                .byte $00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$02,$02,$02,$00,$00  ; ($B2D0)
                .byte $00,$02,$02,$02,$00,$00,$00,$01,$01,$01,$00,$00,$00,$02,$02,$02  ; ($B2E0)
                .byte $00,$00,$00,$02,$02,$02,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00  ; ($B2F0)
                .byte $00,$00,$00,$00,$00,$01,$01,$05,$09,$09,$09,$09,$09,$09,$09,$09  ; ($B300)
                .byte $09,$09,$09,$06,$00,$00,$00,$01,$01,$01,$01,$01,$01,$00,$00,$00  ; ($B310)
                .byte $01,$01,$01,$00,$00,$00,$1B,$1B,$1B,$00,$00,$00,$01,$01,$01,$01  ; ($B320)
                .byte $01,$01,$01,$01,$01,$01,$01,$01,$00,$00,$00,$02,$02,$02,$00,$00  ; ($B330)
                .byte $00,$00,$00,$00,$00,$00,$00,$02,$02,$02,$03,$03,$03,$1B,$1B,$1B  ; ($B340)
                .byte $03,$03,$03,$03,$03,$03,$00,$00,$00,$04,$04,$04,$00,$00,$00,$00  ; ($B350)
                .byte $00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B360)
                .byte $00,$04,$04,$04,$02,$02,$02,$00,$12,$00,$00,$1C,$00,$00,$12,$00  ; ($B370)
                .byte $00,$18,$00,$01,$05,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($B380)
                .byte $06,$01,$00,$14,$00,$01,$01,$01,$01,$01,$01,$00,$1F,$00,$01,$01  ; ($B390)
                .byte $01,$00,$1F,$00,$1B,$1B,$1B,$00,$1D,$00,$01,$01,$01,$01,$01,$01  ; ($B3A0)
                .byte $01,$01,$01,$01,$01,$01,$00,$1F,$00,$02,$02,$02,$00,$14,$00,$00  ; ($B3B0)
                .byte $1E,$00,$00,$18,$00,$02,$02,$02,$03,$03,$03,$1B,$1B,$1B,$03,$03  ; ($B3C0)
                .byte $03,$03,$03,$03,$00,$1D,$00,$04,$04,$04,$00,$12,$00,$00,$1C,$00  ; ($B3D0)
                .byte $00,$14,$00,$03,$03,$03,$00,$14,$00,$00,$16,$00,$00,$16,$00,$04  ; ($B3E0)
                .byte $04,$04,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B3F0)
                .byte $00,$05,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$06,$01,$01  ; ($B400)
                .byte $00,$00,$00,$01,$01,$01,$01,$01,$01,$00,$00,$00,$01,$01,$01,$00  ; ($B410)
                .byte $00,$00,$1B,$1B,$1B,$00,$00,$00,$01,$01,$01,$01,$01,$01,$01,$01  ; ($B420)
                .byte $01,$01,$01,$01,$00,$00,$00,$02,$02,$02,$00,$00,$00,$00,$00,$00  ; ($B430)
                .byte $00,$00,$00,$02,$02,$02,$03,$03,$03,$1B,$1B,$1B,$03,$03,$03,$03  ; ($B440)
                .byte $03,$03,$00,$00,$00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B450)
                .byte $00,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04  ; ($B460)
                .byte $04,$04,$04,$00,$00,$00,$02,$02,$02,$00,$00,$00,$01,$01,$05,$09  ; ($B470)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$06,$04,$04,$04,$00,$00  ; ($B480)
                .byte $00,$02,$02,$02,$02,$02,$02,$00,$00,$00,$04,$04,$04,$00,$00,$00  ; ($B490)
                .byte $02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B4A0)
                .byte $00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$02,$02,$02,$00,$00  ; ($B4B0)
                .byte $00,$03,$03,$03,$02,$02,$02,$1B,$1B,$1B,$01,$01,$01,$04,$04,$04  ; ($B4C0)
                .byte $00,$00,$00,$04,$04,$04,$03,$03,$03,$02,$02,$02,$00,$00,$00,$03  ; ($B4D0)
                .byte $03,$03,$00,$00,$00,$01,$01,$01,$03,$03,$03,$02,$02,$02,$04,$04  ; ($B4E0)
                .byte $04,$00,$1F,$00,$02,$02,$02,$00,$18,$00,$01,$05,$09,$09,$09,$09  ; ($B4F0)
                .byte $09,$09,$09,$09,$09,$09,$09,$06,$01,$04,$04,$04,$00,$14,$00,$02  ; ($B500)
                .byte $02,$02,$02,$02,$02,$00,$1F,$00,$04,$04,$04,$00,$18,$00,$02,$02  ; ($B510)
                .byte $02,$00,$12,$00,$00,$1C,$00,$00,$12,$00,$00,$1C,$00,$00,$12,$00  ; ($B520)
                .byte $00,$18,$00,$03,$03,$03,$00,$1D,$00,$02,$02,$02,$00,$1F,$00,$03  ; ($B530)
                .byte $03,$03,$02,$02,$02,$1B,$1B,$1B,$01,$01,$01,$04,$04,$04,$00,$14  ; ($B540)
                .byte $00,$04,$04,$04,$03,$03,$03,$02,$02,$02,$00,$1D,$00,$03,$03,$03  ; ($B550)
                .byte $00,$1D,$00,$01,$01,$01,$03,$03,$03,$02,$02,$02,$04,$04,$04,$00  ; ($B560)
                .byte $00,$00,$02,$02,$02,$00,$00,$00,$05,$09,$09,$09,$09,$09,$09,$09  ; ($B570)
                .byte $09,$09,$09,$09,$06,$01,$01,$04,$04,$04,$00,$00,$00,$02,$02,$02  ; ($B580)
                .byte $02,$02,$02,$00,$00,$00,$04,$04,$04,$00,$00,$00,$02,$02,$02,$00  ; ($B590)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B5A0)
                .byte $00,$03,$03,$03,$00,$00,$00,$02,$02,$02,$00,$00,$00,$03,$03,$03  ; ($B5B0)
                .byte $02,$02,$02,$1B,$1B,$1B,$01,$01,$01,$04,$04,$04,$00,$00,$00,$04  ; ($B5C0)
                .byte $04,$04,$03,$03,$03,$02,$02,$02,$00,$00,$00,$03,$03,$03,$00,$00  ; ($B5D0)
                .byte $00,$01,$01,$01,$03,$03,$03,$02,$02,$02,$1B,$1B,$1B,$00,$00,$00  ; ($B5E0)
                .byte $00,$00,$00,$01,$01,$05,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($B5F0)
                .byte $09,$06,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B600)
                .byte $00,$00,$00,$00,$02,$02,$02,$00,$00,$00,$03,$03,$03,$00,$00,$00  ; ($B610)
                .byte $03,$03,$03,$00,$00,$00,$03,$03,$03,$00,$00,$00,$01,$01,$01,$03  ; ($B620)
                .byte $03,$03,$00,$00,$00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B630)
                .byte $00,$00,$00,$00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B640)
                .byte $00,$00,$00,$04,$04,$04,$00,$00,$00,$03,$03,$03,$00,$00,$00,$00  ; ($B650)
                .byte $00,$00,$00,$00,$00,$02,$02,$02,$1B,$1B,$1B,$00,$18,$00,$00,$16  ; ($B660)
                .byte $00,$01,$05,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$06,$01  ; ($B670)
                .byte $00,$12,$00,$00,$12,$00,$00,$12,$00,$00,$1C,$00,$00,$12,$00,$00  ; ($B680)
                .byte $18,$00,$02,$02,$02,$00,$1F,$00,$03,$03,$03,$00,$1D,$00,$03,$03  ; ($B690)
                .byte $03,$00,$1F,$00,$03,$03,$03,$00,$1D,$00,$01,$01,$01,$03,$03,$03  ; ($B6A0)
                .byte $00,$14,$00,$04,$04,$04,$00,$18,$00,$00,$16,$00,$00,$16,$00,$00  ; ($B6B0)
                .byte $16,$00,$04,$04,$04,$00,$12,$00,$00,$12,$00,$00,$1C,$00,$00,$14  ; ($B6C0)
                .byte $00,$04,$04,$04,$00,$14,$00,$03,$03,$03,$00,$14,$00,$00,$1E,$00  ; ($B6D0)
                .byte $00,$16,$00,$02,$02,$02,$1B,$1B,$1B,$00,$00,$00,$00,$00,$00,$05  ; ($B6E0)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$06,$01,$01,$00,$00  ; ($B6F0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B700)
                .byte $02,$02,$02,$00,$00,$00,$03,$03,$03,$00,$00,$00,$03,$03,$03,$00  ; ($B710)
                .byte $00,$00,$03,$03,$03,$00,$00,$00,$01,$01,$01,$03,$03,$03,$00,$00  ; ($B720)
                .byte $00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B730)
                .byte $04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04  ; ($B740)
                .byte $04,$04,$00,$00,$00,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B750)
                .byte $00,$02,$02,$02,$02,$02,$02,$00,$00,$00,$01,$01,$05,$09,$09,$09  ; ($B760)
                .byte $09,$09,$09,$09,$09,$09,$09,$09,$06,$04,$04,$04,$1B,$1B,$1B,$01  ; ($B770)
                .byte $01,$01,$00,$00,$00,$03,$03,$03,$03,$03,$03,$00,$00,$00,$04,$04  ; ($B780)
                .byte $04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02,$00,$00,$00  ; ($B790)
                .byte $01,$01,$01,$00,$00,$00,$03,$03,$03,$04,$04,$04,$00,$00,$00,$00  ; ($B7A0)
                .byte $00,$00,$00,$00,$00,$03,$03,$03,$04,$04,$04,$01,$01,$01,$04,$04  ; ($B7B0)
                .byte $04,$00,$00,$00,$02,$02,$02,$01,$01,$01,$00,$00,$00,$04,$04,$04  ; ($B7C0)
                .byte $00,$00,$00,$01,$01,$01,$00,$00,$00,$01,$01,$01,$00,$00,$00,$03  ; ($B7D0)
                .byte $03,$03,$02,$02,$02,$00,$1F,$00,$01,$05,$09,$09,$09,$09,$09,$09  ; ($B7E0)
                .byte $09,$09,$09,$09,$09,$06,$01,$04,$04,$04,$1B,$1B,$1B,$01,$01,$01  ; ($B7F0)
                .byte $00,$18,$00,$03,$03,$03,$03,$03,$03,$00,$1F,$00,$04,$04,$04,$00  ; ($B800)
                .byte $18,$00,$00,$1E,$00,$00,$14,$00,$02,$02,$02,$00,$1F,$00,$01,$01  ; ($B810)
                .byte $01,$00,$1D,$00,$03,$03,$03,$04,$04,$04,$00,$12,$00,$00,$1C,$00  ; ($B820)
                .byte $00,$18,$00,$03,$03,$03,$04,$04,$04,$01,$01,$01,$04,$04,$04,$00  ; ($B830)
                .byte $1F,$00,$02,$02,$02,$01,$01,$01,$00,$1D,$00,$04,$04,$04,$00,$1D  ; ($B840)
                .byte $00,$01,$01,$01,$00,$1D,$00,$01,$01,$01,$00,$1F,$00,$03,$03,$03  ; ($B850)
                .byte $02,$02,$02,$00,$00,$00,$05,$09,$09,$09,$09,$09,$09,$09,$09,$09  ; ($B860)
                .byte $09,$09,$06,$01,$01,$04,$04,$04,$1B,$1B,$1B,$01,$01,$01,$00,$00  ; ($B870)
                .byte $00,$03,$03,$03,$03,$03,$03,$00,$00,$00,$04,$04,$04,$00,$00,$00  ; ($B880)
                .byte $00,$00,$00,$00,$00,$00,$02,$02,$02,$00,$00,$00,$01,$01,$01,$00  ; ($B890)
                .byte $00,$00,$03,$03,$03,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B8A0)
                .byte $00,$03,$03,$03,$04,$04,$04,$01,$01,$01,$04,$04,$04,$00,$00,$00  ; ($B8B0)
                .byte $02,$02,$02,$01,$01,$01,$00,$00,$00,$04,$04,$04,$00,$00,$00,$01  ; ($B8C0)
                .byte $01,$01,$00,$00,$00,$01,$01,$01,$00,$00,$00,$03,$03,$03,$01,$01  ; ($B8D0)
                .byte $01,$00,$00,$00,$0D,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,$06  ; ($B8E0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B8F0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$01,$01  ; ($B900)
                .byte $01,$00,$00,$00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B910)
                .byte $00,$00,$00,$00,$00,$00,$01,$01,$01,$01,$01,$01,$04,$04,$04,$1B  ; ($B920)
                .byte $1B,$1B,$01,$01,$01,$01,$01,$01,$02,$02,$02,$00,$00,$00,$00,$00  ; ($B930)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02  ; ($B940)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$01,$01,$01,$00  ; ($B950)
                .byte $18,$00,$0D,$09,$09,$09,$09,$09,$09,$09,$09,$09,$06,$01,$00,$12  ; ($B960)
                .byte $00,$00,$1C,$00,$00,$12,$00,$00,$1C,$00,$00,$12,$00,$00,$1C,$00  ; ($B970)
                .byte $00,$12,$00,$00,$18,$00,$03,$03,$03,$00,$18,$00,$01,$01,$01,$00  ; ($B980)
                .byte $1D,$00,$04,$04,$04,$00,$18,$00,$00,$1E,$00,$00,$16,$00,$00,$1E  ; ($B990)
                .byte $00,$00,$16,$00,$01,$01,$01,$01,$01,$01,$04,$04,$04,$1B,$1B,$1B  ; ($B9A0)
                .byte $01,$01,$01,$01,$01,$01,$02,$02,$02,$00,$18,$00,$00,$1C,$00,$00  ; ($B9B0)
                .byte $12,$00,$00,$12,$00,$00,$1C,$00,$00,$14,$00,$02,$02,$02,$00,$12  ; ($B9C0)
                .byte $00,$00,$1C,$00,$00,$18,$00,$01,$01,$01,$01,$01,$01,$00,$00,$00  ; ($B9D0)
                .byte $0D,$09,$09,$09,$09,$09,$09,$09,$09,$06,$01,$01,$00,$00,$00,$00  ; ($B9E0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($B9F0)
                .byte $00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$01,$01,$01,$00,$00,$00  ; ($BA00)
                .byte $04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($BA10)
                .byte $00,$00,$01,$01,$01,$01,$01,$01,$04,$04,$04,$1B,$1B,$1B,$01,$01  ; ($BA20)
                .byte $01,$01,$01,$01,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($BA30)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02,$00,$00,$00,$00  ; ($BA40)
                .byte $00,$00,$00,$00,$00,$01,$01,$01,$01,$01,$0E,$00,$00,$00,$0D,$09  ; ($BA50)
                .byte $09,$09,$09,$09,$09,$09,$06,$1B,$1B,$1B,$00,$00,$00,$01,$01,$01  ; ($BA60)
                .byte $00,$00,$00,$03,$03,$03,$03,$03,$03,$03,$03,$03,$04,$04,$04,$03  ; ($BA70)
                .byte $03,$03,$03,$03,$03,$00,$00,$00,$02,$02,$02,$00,$00,$00,$00,$00  ; ($BA80)
                .byte $00,$00,$00,$00,$04,$04,$04,$00,$00,$00,$02,$02,$02,$00,$00,$00  ; ($BA90)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($BAA0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$03,$03  ; ($BAB0)
                .byte $03,$01,$01,$01,$00,$00,$00,$03,$03,$03,$04,$04,$04,$01,$01,$01  ; ($BAC0)
                .byte $01,$01,$01,$02,$02,$02,$01,$05,$0C,$00,$1F,$00,$0D,$09,$09,$09  ; ($BAD0)
                .byte $09,$09,$09,$06,$01,$1B,$1B,$1B,$00,$1F,$00,$01,$01,$01,$00,$1D  ; ($BAE0)
                .byte $00,$03,$03,$03,$03,$03,$03,$03,$03,$03,$04,$04,$04,$03,$03,$03  ; ($BAF0)
                .byte $03,$03,$03,$00,$18,$00,$02,$02,$02,$00,$12,$00,$00,$12,$00,$00  ; ($BB00)
                .byte $18,$00,$04,$04,$04,$00,$1D,$00,$02,$02,$02,$00,$18,$00,$00,$16  ; ($BB10)
                .byte $00,$00,$1E,$00,$00,$16,$00,$00,$1E,$00,$00,$16,$00,$00,$16,$00  ; ($BB20)
                .byte $00,$1E,$00,$00,$18,$00,$03,$03,$03,$00,$18,$00,$03,$03,$03,$01  ; ($BB30)
                .byte $01,$01,$00,$14,$00,$03,$03,$03,$04,$04,$04,$01,$01,$01,$01,$01  ; ($BB40)
                .byte $01,$02,$02,$02,$05,$09,$0C,$00,$00,$00,$0D,$09,$09,$09,$09,$09  ; ($BB50)
                .byte $06,$01,$01,$1B,$1B,$1B,$00,$00,$00,$01,$01,$01,$00,$00,$00,$03  ; ($BB60)
                .byte $03,$03,$03,$03,$03,$03,$03,$03,$04,$04,$04,$03,$03,$03,$03,$03  ; ($BB70)
                .byte $03,$00,$00,$00,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($BB80)
                .byte $04,$04,$04,$00,$00,$00,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00  ; ($BB90)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($BBA0)
                .byte $00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$03,$03,$03,$01,$01,$01  ; ($BBB0)
                .byte $00,$00,$00,$03,$03,$03,$04,$04,$04,$01,$01,$01,$01,$01,$01,$02  ; ($BBC0)
                .byte $02,$02,$09,$09,$0C,$00,$00,$00,$0D,$09,$09,$09,$09,$06,$00,$00  ; ($BBD0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($BBE0)
                .byte $00,$00,$00,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02  ; ($BBF0)
                .byte $02,$02,$01,$01,$01,$01,$01,$01,$00,$00,$00,$04,$04,$04,$1B,$1B  ; ($BC00)
                .byte $1B,$00,$00,$00,$03,$03,$03,$02,$02,$02,$00,$00,$00,$04,$04,$04  ; ($BC10)
                .byte $04,$04,$04,$1B,$1B,$1B,$00,$00,$00,$04,$04,$04,$03,$03,$03,$00  ; ($BC20)
                .byte $00,$00,$04,$04,$04,$00,$00,$00,$02,$02,$02,$03,$03,$03,$00,$00  ; ($BC30)
                .byte $00,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02  ; ($BC40)
                .byte $09,$09,$0C,$00,$18,$00,$0D,$09,$09,$09,$06,$01,$00,$12,$00,$00  ; ($BC50)
                .byte $12,$00,$00,$18,$00,$00,$1E,$00,$00,$16,$00,$00,$1E,$00,$00,$16  ; ($BC60)
                .byte $00,$03,$03,$03,$00,$14,$00,$00,$1E,$00,$00,$16,$00,$02,$02,$02  ; ($BC70)
                .byte $01,$01,$01,$01,$01,$01,$00,$1D,$00,$04,$04,$04,$1B,$1B,$1B,$00  ; ($BC80)
                .byte $1D,$00,$03,$03,$03,$02,$02,$02,$00,$1F,$00,$04,$04,$04,$04,$04  ; ($BC90)
                .byte $04,$1B,$1B,$1B,$00,$1D,$00,$04,$04,$04,$03,$03,$03,$00,$1F,$00  ; ($BCA0)
                .byte $04,$04,$04,$00,$1F,$00,$02,$02,$02,$03,$03,$03,$00,$1D,$00,$03  ; ($BCB0)
                .byte $03,$03,$00,$12,$00,$00,$1C,$00,$00,$14,$00,$02,$02,$02,$09,$09  ; ($BCC0)
                .byte $0C,$00,$00,$00,$0D,$09,$09,$06,$01,$01,$00,$00,$00,$00,$00,$00  ; ($BCD0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03  ; ($BCE0)
                .byte $03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02,$01,$01  ; ($BCF0)
                .byte $01,$01,$01,$01,$00,$00,$00,$04,$04,$04,$1B,$1B,$1B,$00,$00,$00  ; ($BD00)
                .byte $03,$03,$03,$02,$02,$02,$00,$00,$00,$04,$04,$04,$04,$04,$04,$1B  ; ($BD10)
                .byte $1B,$1B,$00,$00,$00,$04,$04,$04,$03,$03,$03,$00,$00,$00,$04,$04  ; ($BD20)
                .byte $04,$00,$00,$00,$02,$02,$02,$03,$03,$03,$00,$00,$00,$03,$03,$03  ; ($BD30)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02,$09,$09,$0C,$00  ; ($BD40)
                .byte $00,$00,$0D,$09,$06,$00,$00,$00,$02,$02,$02,$03,$03,$03,$00,$00  ; ($BD50)
                .byte $00,$01,$01,$01,$00,$00,$00,$1B,$1B,$1B,$00,$00,$00,$00,$00,$00  ; ($BD60)
                .byte $00,$00,$00,$04,$04,$04,$00,$00,$00,$02,$02,$02,$00,$00,$00,$00  ; ($BD70)
                .byte $00,$00,$00,$00,$00,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00  ; ($BD80)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03  ; ($BD90)
                .byte $00,$00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$01,$01,$01,$00  ; ($BDA0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($BDB0)
                .byte $00,$02,$02,$02,$00,$00,$00,$1B,$1B,$1B,$09,$09,$0C,$00,$1F,$00  ; ($BDC0)
                .byte $0D,$06,$01,$00,$14,$00,$02,$02,$02,$03,$03,$03,$00,$1F,$00,$01  ; ($BDD0)
                .byte $01,$01,$00,$1D,$00,$1B,$1B,$1B,$00,$18,$00,$00,$1E,$00,$00,$16  ; ($BDE0)
                .byte $00,$04,$04,$04,$00,$1F,$00,$02,$02,$02,$00,$12,$00,$00,$1C,$00  ; ($BDF0)
                .byte $00,$14,$00,$02,$02,$02,$00,$14,$00,$00,$16,$00,$00,$1E,$00,$00  ; ($BE00)
                .byte $16,$00,$00,$16,$00,$00,$1E,$00,$00,$16,$00,$03,$03,$03,$00,$14  ; ($BE10)
                .byte $00,$00,$16,$00,$03,$03,$03,$00,$18,$00,$01,$01,$01,$00,$18,$00  ; ($BE20)
                .byte $00,$16,$00,$00,$1E,$00,$00,$14,$00,$00,$1C,$00,$00,$18,$00,$02  ; ($BE30)
                .byte $02,$02,$00,$1D,$00,$1B,$1B,$1B,$09,$09,$0C,$00,$00,$00,$0F,$01  ; ($BE40)
                .byte $01,$00,$00,$00,$02,$02,$02,$03,$03,$03,$00,$00,$00,$01,$01,$01  ; ($BE50)
                .byte $00,$00,$00,$1B,$1B,$1B,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04  ; ($BE60)
                .byte $04,$04,$00,$00,$00,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00  ; ($BE70)
                .byte $00,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($BE80)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$00  ; ($BE90)
                .byte $00,$00,$03,$03,$03,$00,$00,$00,$01,$01,$01,$00,$00,$00,$00,$00  ; ($BEA0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02  ; ($BEB0)
                .byte $00,$00,$00,$1B,$1B,$1B,$09,$09,$0C,$00,$00,$00,$02,$02,$02,$00  ; ($BEC0)
                .byte $00,$00,$03,$03,$03,$04,$04,$04,$00,$00,$00,$04,$04,$04,$00,$00  ; ($BED0)
                .byte $00,$1B,$1B,$1B,$00,$00,$00,$04,$04,$04,$00,$00,$00,$01,$01,$01  ; ($BEE0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02,$00,$00,$00,$01  ; ($BEF0)
                .byte $01,$01,$00,$00,$00,$03,$03,$03,$02,$02,$02,$03,$03,$03,$04,$04  ; ($BF00)
                .byte $04,$04,$04,$04,$00,$00,$00,$02,$02,$02,$00,$00,$00,$1B,$1B,$1B  ; ($BF10)
                .byte $02,$02,$02,$00,$00,$00,$02,$02,$02,$01,$01,$01,$03,$03,$03,$02  ; ($BF20)
                .byte $02,$02,$00,$00,$00,$03,$03,$03,$00,$00,$00,$02,$02,$02,$00,$00  ; ($BF30)
                .byte $00,$01,$01,$01,$09,$09,$0C,$00,$18,$00,$02,$02,$02,$00,$14,$00  ; ($BF40)
                .byte $03,$03,$03,$04,$04,$04,$00,$1F,$00,$04,$04,$04,$00,$1D,$00,$1B  ; ($BF50)
                .byte $1B,$1B,$00,$1F,$00,$04,$04,$04,$00,$1D,$00,$01,$01,$01,$00,$18  ; ($BF60)
                .byte $00,$00,$1E,$00,$00,$18,$00,$02,$02,$02,$00,$1D,$00,$01,$01,$01  ; ($BF70)
                .byte $00,$1D,$00,$03,$03,$03,$02,$02,$02,$03,$03,$03,$04,$04,$04,$04  ; ($BF80)
                .byte $04,$04,$00,$18,$00,$02,$02,$02,$00,$1D,$00,$1B,$1B,$1B,$02,$02  ; ($BF90)
                .byte $02,$00,$1F,$00,$02,$02,$02,$01,$01,$01,$03,$03,$03,$02,$02,$02  ; ($BFA0)
                .byte $00,$1D,$00,$03,$03,$03,$00,$1F,$00,$02,$02,$02,$00,$14,$00,$01  ; ($BFB0)
                .byte $01,$01,$09,$09,$0C,$00,$00,$00,$02,$02,$02,$00,$00,$00,$03,$03  ; ($BFC0)
                .byte $03,$04,$04,$04,$00,$00,$00,$04,$04,$04,$00,$00,$00,$1B,$1B,$1B  ; ($BFD0)
                .byte $00,$00,$00,$04,$04,$04,$00,$00,$00,$01,$01,$01,$00,$00,$00,$00  ; ($BFE0)
                .byte $00,$00,$00,$00,$00,$02,$02,$02,$00,$00,$00,$01,$01,$01,$00,$00  ; ($BFF0)
                .byte $00,$03,$03,$03,$02,$02,$02,$03,$03,$03,$04,$04,$04,$04,$04,$04  ; ($C000)
                .byte $00,$00,$00,$02,$02,$02,$00,$00,$00,$1B,$1B,$1B,$02,$02,$02,$00  ; ($C010)
                .byte $00,$00,$02,$02,$02,$01,$01,$01,$03,$03,$03,$02,$02,$02,$00,$00  ; ($C020)
                .byte $00,$03,$03,$03,$00,$00,$00,$02,$02,$02,$00,$00,$00,$01,$01,$01  ; ($C030)
                .byte $09,$09,$06,$00,$00,$00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00  ; ($C040)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C050)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$01,$01,$01  ; ($C060)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$00  ; ($C070)
                .byte $00,$00,$04,$04,$04,$02,$02,$02,$01,$01,$01,$03,$03,$03,$00,$00  ; ($C080)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C090)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04  ; ($C0A0)
                .byte $04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$1B,$1B,$1B,$09,$06  ; ($C0B0)
                .byte $01,$00,$1F,$00,$04,$04,$04,$00,$12,$00,$00,$12,$00,$00,$1C,$00  ; ($C0C0)
                .byte $00,$12,$00,$00,$12,$00,$00,$12,$00,$00,$1C,$00,$00,$18,$00,$00  ; ($C0D0)
                .byte $1C,$00,$00,$12,$00,$00,$14,$00,$01,$01,$01,$01,$01,$01,$00,$18  ; ($C0E0)
                .byte $00,$00,$16,$00,$00,$16,$00,$03,$03,$03,$00,$12,$00,$00,$14,$00  ; ($C0F0)
                .byte $04,$04,$04,$02,$02,$02,$01,$01,$01,$03,$03,$03,$00,$12,$00,$00  ; ($C100)
                .byte $1C,$00,$00,$12,$00,$00,$1C,$00,$00,$12,$00,$00,$18,$00,$00,$1E  ; ($C110)
                .byte $00,$00,$16,$00,$00,$1E,$00,$00,$16,$00,$00,$16,$00,$04,$04,$04  ; ($C120)
                .byte $00,$18,$00,$00,$16,$00,$00,$16,$00,$1B,$1B,$1B,$06,$1B,$01,$00  ; ($C130)
                .byte $00,$00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C140)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C150)
                .byte $00,$00,$00,$00,$00,$00,$01,$01,$01,$01,$01,$01,$00,$00,$00,$00  ; ($C160)
                .byte $00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$00,$00,$00,$04,$04  ; ($C170)
                .byte $04,$02,$02,$02,$01,$01,$01,$03,$03,$03,$00,$00,$00,$00,$00,$00  ; ($C180)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C190)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04,$00,$00  ; ($C1A0)
                .byte $00,$00,$00,$00,$00,$00,$00,$1B,$1B,$1B,$1B,$1B,$1B,$00,$00,$00  ; ($C1B0)
                .byte $00,$00,$00,$00,$00,$00,$03,$03,$03,$01,$01,$01,$04,$04,$04,$00  ; ($C1C0)
                .byte $00,$00,$01,$01,$01,$01,$01,$01,$00,$00,$00,$1B,$1B,$1B,$03,$03  ; ($C1D0)
                .byte $03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04,$00,$00,$00  ; ($C1E0)
                .byte $04,$04,$04,$1B,$1B,$1B,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00  ; ($C1F0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$01,$01  ; ($C200)
                .byte $01,$04,$04,$04,$00,$00,$00,$02,$02,$02,$04,$04,$04,$00,$00,$00  ; ($C210)
                .byte $04,$04,$04,$03,$03,$03,$00,$00,$00,$03,$03,$03,$00,$00,$00,$02  ; ($C220)
                .byte $02,$02,$02,$02,$02,$02,$02,$02,$1B,$1B,$1B,$00,$18,$00,$00,$1E  ; ($C230)
                .byte $00,$00,$16,$00,$03,$03,$03,$01,$01,$01,$04,$04,$04,$00,$1F,$00  ; ($C240)
                .byte $01,$01,$01,$01,$01,$01,$00,$1F,$00,$1B,$1B,$1B,$03,$03,$03,$00  ; ($C250)
                .byte $12,$00,$00,$1C,$00,$00,$14,$00,$04,$04,$04,$00,$18,$00,$04,$04  ; ($C260)
                .byte $04,$1B,$1B,$1B,$02,$02,$02,$00,$12,$00,$00,$1C,$00,$00,$1C,$00  ; ($C270)
                .byte $00,$12,$00,$00,$1C,$00,$00,$18,$00,$03,$03,$03,$01,$01,$01,$04  ; ($C280)
                .byte $04,$04,$00,$1D,$00,$02,$02,$02,$04,$04,$04,$00,$1D,$00,$04,$04  ; ($C290)
                .byte $04,$03,$03,$03,$00,$1F,$00,$03,$03,$03,$00,$1D,$00,$02,$02,$02  ; ($C2A0)
                .byte $02,$02,$02,$02,$02,$02,$1B,$1B,$1B,$00,$00,$00,$00,$00,$00,$00  ; ($C2B0)
                .byte $00,$00,$03,$03,$03,$01,$01,$01,$04,$04,$04,$00,$00,$00,$01,$01  ; ($C2C0)
                .byte $01,$01,$01,$01,$00,$00,$00,$1B,$1B,$1B,$03,$03,$03,$00,$00,$00  ; ($C2D0)
                .byte $00,$00,$00,$00,$00,$00,$04,$04,$04,$00,$00,$00,$04,$04,$04,$1B  ; ($C2E0)
                .byte $1B,$1B,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C2F0)
                .byte $00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$01,$01,$01,$04,$04,$04  ; ($C300)
                .byte $00,$00,$00,$02,$02,$02,$04,$04,$04,$00,$00,$00,$04,$04,$04,$03  ; ($C310)
                .byte $03,$03,$00,$00,$00,$03,$03,$03,$00,$00,$00,$02,$02,$02,$02,$02  ; ($C320)
                .byte $02,$02,$02,$02,$01,$01,$01,$00,$00,$00,$02,$02,$02,$00,$00,$00  ; ($C330)
                .byte $04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C340)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04,$03,$03,$03,$03,$03  ; ($C350)
                .byte $03,$00,$00,$00,$1B,$1B,$1B,$02,$02,$02,$01,$01,$01,$00,$00,$00  ; ($C360)
                .byte $01,$01,$01,$02,$02,$02,$02,$02,$02,$02,$02,$02,$03,$03,$03,$03  ; ($C370)
                .byte $03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C380)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04  ; ($C390)
                .byte $00,$00,$00,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04  ; ($C3A0)
                .byte $04,$04,$01,$01,$01,$00,$1D,$00,$02,$02,$02,$00,$1F,$00,$04,$04  ; ($C3B0)
                .byte $04,$00,$12,$00,$00,$1C,$00,$00,$18,$00,$00,$1E,$00,$00,$16,$00  ; ($C3C0)
                .byte $00,$18,$00,$00,$16,$00,$04,$04,$04,$03,$03,$03,$03,$03,$03,$00  ; ($C3D0)
                .byte $1D,$00,$1B,$1B,$1B,$02,$02,$02,$01,$01,$01,$00,$14,$00,$01,$01  ; ($C3E0)
                .byte $01,$02,$02,$02,$02,$02,$02,$02,$02,$02,$03,$03,$03,$03,$03,$03  ; ($C3F0)
                .byte $00,$18,$00,$00,$1E,$00,$00,$16,$00,$00,$1E,$00,$00,$16,$00,$00  ; ($C400)
                .byte $1E,$00,$00,$16,$00,$00,$12,$00,$00,$14,$00,$04,$04,$04,$00,$18  ; ($C410)
                .byte $00,$01,$01,$01,$00,$12,$00,$00,$1C,$00,$00,$14,$00,$04,$04,$04  ; ($C420)
                .byte $01,$01,$01,$00,$00,$00,$02,$02,$02,$00,$00,$00,$04,$04,$04,$00  ; ($C430)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C440)
                .byte $00,$00,$00,$00,$04,$04,$04,$03,$03,$03,$03,$03,$03,$00,$00,$00  ; ($C450)
                .byte $1B,$1B,$1B,$02,$02,$02,$01,$01,$01,$00,$00,$00,$01,$01,$01,$02  ; ($C460)
                .byte $02,$02,$02,$02,$02,$02,$02,$02,$03,$03,$03,$03,$03,$03,$00,$00  ; ($C470)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C480)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04,$00,$00,$00,$01  ; ($C490)
                .byte $01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04,$01,$01  ; ($C4A0)
                .byte $01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C4B0)
                .byte $01,$01,$01,$00,$00,$00,$01,$01,$01,$00,$00,$00,$02,$02,$02,$00  ; ($C4C0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$00,$00,$00,$03,$03  ; ($C4D0)
                .byte $03,$00,$00,$00,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C4E0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$01  ; ($C4F0)
                .byte $01,$01,$02,$02,$02,$04,$04,$04,$04,$04,$04,$03,$03,$03,$00,$00  ; ($C500)
                .byte $00,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04  ; ($C510)
                .byte $04,$04,$04,$02,$02,$02,$00,$00,$00,$03,$03,$03,$01,$01,$01,$00  ; ($C520)
                .byte $12,$00,$00,$1C,$00,$00,$12,$00,$00,$1C,$00,$00,$18,$00,$01,$01  ; ($C530)
                .byte $01,$00,$18,$00,$01,$01,$01,$00,$1D,$00,$02,$02,$02,$00,$18,$00  ; ($C540)
                .byte $00,$1E,$00,$00,$16,$00,$01,$01,$01,$00,$14,$00,$03,$03,$03,$00  ; ($C550)
                .byte $14,$00,$03,$03,$03,$00,$14,$00,$00,$1E,$00,$00,$16,$00,$00,$1E  ; ($C560)
                .byte $00,$00,$16,$00,$00,$1E,$00,$00,$16,$00,$03,$03,$03,$01,$01,$01  ; ($C570)
                .byte $02,$02,$02,$04,$04,$04,$04,$04,$04,$03,$03,$03,$00,$1F,$00,$02  ; ($C580)
                .byte $02,$02,$00,$12,$00,$00,$1C,$00,$00,$18,$00,$04,$04,$04,$04,$04  ; ($C590)
                .byte $04,$02,$02,$02,$00,$1D,$00,$03,$03,$03,$01,$01,$01,$00,$00,$00  ; ($C5A0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$00  ; ($C5B0)
                .byte $00,$00,$01,$01,$01,$00,$00,$00,$02,$02,$02,$00,$00,$00,$00,$00  ; ($C5C0)
                .byte $00,$00,$00,$00,$01,$01,$01,$00,$00,$00,$03,$03,$03,$00,$00,$00  ; ($C5D0)
                .byte $03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C5E0)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$01,$01,$01,$02,$02  ; ($C5F0)
                .byte $02,$04,$04,$04,$04,$04,$04,$03,$03,$03,$00,$00,$00,$02,$02,$02  ; ($C600)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04,$04,$04,$04,$02  ; ($C610)
                .byte $02,$02,$00,$00,$00,$03,$03,$03,$04,$04,$04,$01,$01,$01,$04,$04  ; ($C620)
                .byte $04,$03,$03,$03,$04,$04,$04,$04,$04,$04,$04,$04,$04,$00,$00,$00  ; ($C630)
                .byte $1B,$1B,$1B,$00,$00,$00,$00,$00,$00,$00,$00,$00,$1B,$1B,$1B,$00  ; ($C640)
                .byte $00,$00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C650)
                .byte $00,$00,$00,$00,$02,$02,$02,$04,$04,$04,$01,$01,$01,$00,$00,$00  ; ($C660)
                .byte $04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04  ; ($C670)
                .byte $04,$04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04,$03,$03  ; ($C680)
                .byte $03,$04,$04,$04,$02,$02,$02,$01,$01,$01,$00,$00,$00,$01,$01,$01  ; ($C690)
                .byte $00,$00,$00,$04,$04,$04,$04,$04,$04,$01,$01,$01,$04,$04,$04,$03  ; ($C6A0)
                .byte $03,$03,$04,$04,$04,$04,$04,$04,$04,$04,$04,$00,$18,$00,$1B,$1B  ; ($C6B0)
                .byte $1B,$00,$12,$00,$00,$1C,$00,$00,$18,$00,$1B,$1B,$1B,$00,$18,$00  ; ($C6C0)
                .byte $04,$04,$04,$00,$12,$00,$00,$1C,$00,$00,$12,$00,$00,$1C,$00,$00  ; ($C6D0)
                .byte $14,$00,$02,$02,$02,$04,$04,$04,$01,$01,$01,$00,$18,$00,$04,$04  ; ($C6E0)
                .byte $04,$00,$18,$00,$00,$16,$00,$00,$1E,$00,$00,$16,$00,$04,$04,$04  ; ($C6F0)
                .byte $00,$12,$00,$00,$1C,$00,$00,$18,$00,$04,$04,$04,$03,$03,$03,$04  ; ($C700)
                .byte $04,$04,$02,$02,$02,$01,$01,$01,$00,$14,$00,$01,$01,$01,$00,$14  ; ($C710)
                .byte $00,$04,$04,$04,$04,$04,$04,$01,$01,$01,$04,$04,$04,$03,$03,$03  ; ($C720)
                .byte $04,$04,$04,$04,$04,$04,$04,$04,$04,$00,$00,$00,$1B,$1B,$1B,$00  ; ($C730)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$1B,$1B,$1B,$00,$00,$00,$04,$04  ; ($C740)
                .byte $04,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C750)
                .byte $02,$02,$02,$04,$04,$04,$01,$01,$01,$00,$00,$00,$04,$04,$04,$00  ; ($C760)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04,$00,$00  ; ($C770)
                .byte $00,$00,$00,$00,$00,$00,$00,$04,$04,$04,$03,$03,$03,$04,$04,$04  ; ($C780)
                .byte $02,$02,$02,$01,$01,$01,$00,$00,$00,$01,$01,$01,$00,$00,$00,$04  ; ($C790)
                .byte $04,$04,$1B,$1B,$1B,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C7A0)
                .byte $00,$00,$00,$00,$04,$04,$04,$01,$01,$01,$02,$02,$02,$02,$02,$02  ; ($C7B0)
                .byte $02,$02,$02,$04,$04,$04,$01,$01,$01,$00,$00,$00,$1B,$1B,$1B,$03  ; ($C7C0)
                .byte $03,$03,$04,$04,$04,$00,$00,$00,$04,$04,$04,$00,$00,$00,$04,$04  ; ($C7D0)
                .byte $04,$00,$00,$00,$02,$02,$02,$01,$01,$01,$01,$01,$01,$1B,$1B,$1B  ; ($C7E0)
                .byte $02,$02,$02,$02,$02,$02,$00,$00,$00,$02,$02,$02,$00,$00,$00,$04  ; ($C7F0)
                .byte $04,$04,$1B,$1B,$1B,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C800)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02  ; ($C810)
                .byte $1B,$1B,$1B,$00,$12,$00,$00,$12,$00,$00,$12,$00,$00,$12,$00,$00  ; ($C820)
                .byte $14,$00,$04,$04,$04,$01,$01,$01,$02,$02,$02,$02,$02,$02,$02,$02  ; ($C830)
                .byte $02,$04,$04,$04,$01,$01,$01,$00,$18,$00,$1B,$1B,$1B,$03,$03,$03  ; ($C840)
                .byte $04,$04,$04,$00,$18,$00,$04,$04,$04,$00,$1D,$00,$04,$04,$04,$00  ; ($C850)
                .byte $14,$00,$02,$02,$02,$01,$01,$01,$01,$01,$01,$1B,$1B,$1B,$02,$02  ; ($C860)
                .byte $02,$02,$02,$02,$00,$1F,$00,$02,$02,$02,$00,$1F,$00,$04,$04,$04  ; ($C870)
                .byte $1B,$1B,$1B,$01,$01,$01,$00,$14,$00,$00,$1E,$00,$00,$16,$00,$00  ; ($C880)
                .byte $1E,$00,$00,$16,$00,$00,$1E,$00,$00,$16,$00,$02,$02,$02,$1B,$1B  ; ($C890)
                .byte $1B,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C8A0)
                .byte $04,$04,$04,$01,$01,$01,$02,$02,$02,$02,$02,$02,$02,$02,$02,$04  ; ($C8B0)
                .byte $04,$04,$01,$01,$01,$00,$00,$00,$1B,$1B,$1B,$03,$03,$03,$04,$04  ; ($C8C0)
                .byte $04,$00,$00,$00,$04,$04,$04,$00,$00,$00,$04,$04,$04,$00,$00,$00  ; ($C8D0)
                .byte $02,$02,$02,$01,$01,$01,$01,$01,$01,$1B,$1B,$1B,$02,$02,$02,$02  ; ($C8E0)
                .byte $02,$02,$00,$00,$00,$02,$02,$02,$00,$00,$00,$04,$04,$04,$1B,$1B  ; ($C8F0)
                .byte $1B,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C900)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02,$04,$04,$04,$00  ; ($C910)
                .byte $00,$00,$01,$01,$01,$00,$00,$00,$01,$01,$01,$00,$00,$00,$03,$03  ; ($C920)
                .byte $03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C930)
                .byte $00,$00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00  ; ($C940)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$00,$00,$00,$00,$00  ; ($C950)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($C960)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04,$00,$00,$00,$00  ; ($C970)
                .byte $00,$00,$00,$00,$00,$03,$03,$03,$02,$02,$02,$03,$03,$03,$04,$04  ; ($C980)
                .byte $04,$04,$04,$04,$04,$04,$04,$02,$02,$02,$04,$04,$04,$00,$18,$00  ; ($C990)
                .byte $01,$01,$01,$00,$18,$00,$01,$01,$01,$00,$14,$00,$03,$03,$03,$00  ; ($C9A0)
                .byte $12,$00,$00,$1C,$00,$00,$12,$00,$00,$1C,$00,$00,$12,$00,$00,$1C  ; ($C9B0)
                .byte $00,$00,$18,$00,$03,$03,$03,$00,$14,$00,$00,$1E,$00,$00,$16,$00  ; ($C9C0)
                .byte $00,$1E,$00,$00,$16,$00,$01,$01,$01,$00,$12,$00,$00,$12,$00,$00  ; ($C9D0)
                .byte $12,$00,$00,$12,$00,$00,$1C,$00,$00,$12,$00,$00,$1C,$00,$00,$12  ; ($C9E0)
                .byte $00,$00,$1C,$00,$00,$18,$00,$04,$04,$04,$00,$12,$00,$00,$1C,$00  ; ($C9F0)
                .byte $00,$14,$00,$03,$03,$03,$02,$02,$02,$03,$03,$03,$04,$04,$04,$04  ; ($CA00)
                .byte $04,$04,$04,$04,$04,$02,$02,$02,$04,$04,$04,$00,$00,$00,$01,$01  ; ($CA10)
                .byte $01,$00,$00,$00,$01,$01,$01,$00,$00,$00,$03,$03,$03,$00,$00,$00  ; ($CA20)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($CA30)
                .byte $00,$00,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($CA40)
                .byte $00,$00,$00,$00,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($CA50)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($CA60)
                .byte $00,$00,$00,$00,$00,$04,$04,$04,$00,$00,$00,$00,$00,$00,$00,$00  ; ($CA70)
                .byte $00,$03,$03,$03,$02,$02,$02,$03,$03,$03,$04,$04,$04,$04,$04,$04  ; ($CA80)
                .byte $04,$04,$04,$02,$02,$02,$02,$02,$02,$00,$00,$00,$04,$04,$04,$00  ; ($CA90)
                .byte $00,$00,$04,$04,$04,$00,$00,$00,$02,$02,$02,$00,$00,$00,$03,$03  ; ($CAA0)
                .byte $03,$01,$01,$01,$1B,$1B,$1B,$01,$01,$01,$01,$01,$01,$00,$00,$00  ; ($CAB0)
                .byte $01,$01,$01,$00,$00,$00,$02,$02,$02,$02,$02,$02,$03,$03,$03,$00  ; ($CAC0)
                .byte $00,$00,$02,$02,$02,$04,$04,$04,$02,$02,$02,$04,$04,$04,$00,$00  ; ($CAD0)
                .byte $00,$03,$03,$03,$00,$00,$00,$02,$02,$02,$00,$00,$00,$02,$02,$02  ; ($CAE0)
                .byte $00,$00,$00,$01,$01,$01,$00,$00,$00,$01,$01,$01,$00,$00,$00,$00  ; ($CAF0)
                .byte $00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00  ; ($CB00)
                .byte $00,$04,$04,$04,$02,$02,$02,$00,$18,$00,$04,$04,$04,$00,$18,$00  ; ($CB10)
                .byte $04,$04,$04,$00,$14,$00,$02,$02,$02,$00,$1F,$00,$03,$03,$03,$01  ; ($CB20)
                .byte $01,$01,$1B,$1B,$1B,$01,$01,$01,$01,$01,$01,$00,$1D,$00,$01,$01  ; ($CB30)
                .byte $01,$00,$1D,$00,$02,$02,$02,$02,$02,$02,$03,$03,$03,$00,$18,$00  ; ($CB40)
                .byte $02,$02,$02,$04,$04,$04,$02,$02,$02,$04,$04,$04,$00,$1F,$00,$03  ; ($CB50)
                .byte $03,$03,$00,$1D,$00,$02,$02,$02,$00,$1D,$00,$02,$02,$02,$00,$1F  ; ($CB60)
                .byte $00,$01,$01,$01,$00,$1F,$00,$01,$01,$01,$00,$14,$00,$00,$1E,$00  ; ($CB70)
                .byte $00,$16,$00,$03,$03,$03,$00,$14,$00,$00,$16,$00,$00,$16,$00,$04  ; ($CB80)
                .byte $04,$04,$02,$02,$02,$00,$00,$00,$04,$04,$04,$00,$00,$00,$04,$04  ; ($CB90)
                .byte $04,$00,$00,$00,$02,$02,$02,$00,$00,$00,$03,$03,$03,$01,$01,$01  ; ($CBA0)
                .byte $1B,$1B,$1B,$01,$01,$01,$01,$01,$01,$00,$00,$00,$01,$01,$01,$00  ; ($CBB0)
                .byte $00,$00,$02,$02,$02,$02,$02,$02,$03,$03,$03,$00,$00,$00,$02,$02  ; ($CBC0)
                .byte $02,$04,$04,$04,$02,$02,$02,$04,$04,$04,$00,$00,$00,$03,$03,$03  ; ($CBD0)
                .byte $00,$00,$00,$02,$02,$02,$00,$00,$00,$02,$02,$02,$00,$00,$00,$01  ; ($CBE0)
                .byte $01,$01,$00,$00,$00,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00  ; ($CBF0)
                .byte $00,$03,$03,$03,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04  ; ($CC00)
                .byte $04,$04,$04,$00,$00,$00,$00,$00,$00,$01,$01,$01,$03,$03,$03,$00  ; ($CC10)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($CC20)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($CC30)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$00  ; ($CC40)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($CC50)
                .byte $00,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($CC60)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$00,$00,$00,$00  ; ($CC70)
                .byte $00,$00,$00,$00,$00,$04,$04,$04,$00,$00,$00,$02,$02,$02,$04,$04  ; ($CC80)
                .byte $04,$00,$18,$00,$00,$1A,$00,$01,$01,$01,$03,$03,$03,$00,$12,$00  ; ($CC90)
                .byte $00,$12,$00,$00,$18,$00,$00,$1E,$00,$00,$16,$00,$00,$1E,$00,$00  ; ($CCA0)
                .byte $16,$00,$00,$1E,$00,$00,$16,$00,$00,$1C,$00,$00,$12,$00,$00,$1C  ; ($CCB0)
                .byte $00,$00,$12,$00,$00,$1C,$00,$00,$18,$00,$03,$03,$03,$00,$12,$00  ; ($CCC0)
                .byte $00,$12,$00,$00,$12,$00,$00,$18,$00,$00,$1E,$00,$00,$16,$00,$02  ; ($CCD0)
                .byte $02,$02,$00,$12,$00,$00,$1C,$00,$00,$18,$00,$00,$1E,$00,$00,$16  ; ($CCE0)
                .byte $00,$00,$1E,$00,$00,$16,$00,$01,$01,$01,$00,$18,$00,$00,$16,$00  ; ($CCF0)
                .byte $00,$16,$00,$04,$04,$04,$00,$1A,$00,$02,$02,$02,$04,$04,$04,$00  ; ($CD00)
                .byte $00,$00,$00,$00,$00,$01,$01,$01,$03,$03,$03,$00,$00,$00,$00,$00  ; ($CD10)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($CD20)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($CD30)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$00,$00,$00,$00,$00  ; ($CD40)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02  ; ($CD50)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($CD60)
                .byte $00,$00,$00,$00,$00,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00  ; ($CD70)
                .byte $00,$04,$04,$04,$00,$00,$00,$02,$02,$02,$03,$03,$03,$04,$04,$04  ; ($CD80)
                .byte $04,$04,$04,$03,$03,$03,$03,$03,$03,$02,$02,$02,$03,$03,$03,$01  ; ($CD90)
                .byte $01,$01,$02,$02,$02,$01,$01,$01,$04,$04,$04,$02,$02,$02,$01,$01  ; ($CDA0)
                .byte $01,$01,$01,$01,$01,$01,$01,$03,$03,$03,$02,$02,$02,$04,$04,$04  ; ($CDB0)
                .byte $04,$04,$04,$02,$02,$02,$1B,$1B,$1B,$03,$03,$03,$04,$04,$04,$01  ; ($CDC0)
                .byte $01,$01,$01,$01,$01,$02,$02,$02,$01,$01,$01,$02,$02,$02,$02,$02  ; ($CDD0)
                .byte $02,$01,$01,$01,$04,$04,$04,$03,$03,$03,$03,$03,$03,$02,$02,$02  ; ($CDE0)
                .byte $02,$02,$02,$03,$03,$03,$01,$01,$01,$03,$03,$03,$01,$01,$01,$04  ; ($CDF0)
                .byte $04,$04,$03,$03,$03,$1B,$1B,$1B,$03,$03,$03,$04,$04,$04,$04,$04  ; ($CE00)
                .byte $04,$03,$03,$03,$03,$03,$03,$02,$02,$02,$03,$03,$03,$01,$01,$01  ; ($CE10)
                .byte $02,$02,$02,$01,$01,$01,$04,$04,$04,$02,$02,$02,$01,$01,$01,$01  ; ($CE20)
                .byte $01,$01,$01,$01,$01,$03,$03,$03,$02,$02,$02,$04,$04,$04,$04,$04  ; ($CE30)
                .byte $04,$02,$02,$02,$1B,$1B,$1B,$03,$03,$03,$04,$04,$04,$01,$01,$01  ; ($CE40)
                .byte $01,$01,$01,$02,$02,$02,$01,$01,$01,$02,$02,$02,$02,$02,$02,$01  ; ($CE50)
                .byte $01,$01,$04,$04,$04,$03,$03,$03,$03,$03,$03,$02,$02,$02,$02,$02  ; ($CE60)
                .byte $02,$03,$03,$03,$01,$01,$01,$03,$03,$03,$01,$01,$01,$04,$04,$04  ; ($CE70)
                .byte $03,$03,$03,$1B,$1B,$1B,$03,$03,$03,$04,$04,$04,$04,$04,$04,$03  ; ($CE80)
                .byte $03,$03,$03,$03,$03,$02,$02,$02,$03,$03,$03,$01,$01,$01,$02,$02  ; ($CE90)
                .byte $02,$01,$01,$01,$04,$04,$04,$02,$02,$02,$01,$01,$01,$01,$01,$01  ; ($CEA0)
                .byte $01,$01,$01,$03,$03,$03,$02,$02,$02,$04,$04,$04,$04,$04,$04,$02  ; ($CEB0)
                .byte $02,$02,$1B,$1B,$1B,$03,$03,$03,$04,$04,$04,$01,$01,$01,$01,$01  ; ($CEC0)
                .byte $01,$02,$02,$02,$01,$01,$01,$02,$02,$02,$02,$02,$02,$01,$01,$01  ; ($CED0)
                .byte $04,$04,$04,$03,$03,$03,$03,$03,$03,$02,$02,$02,$02,$02,$02,$03  ; ($CEE0)
                .byte $03,$03,$01,$01,$01,$03,$03,$03,$01,$01,$01,$04,$04,$04,$03,$03  ; ($CEF0)
                .byte $03,$1B,$1B,$FF,$03,$03,$03,$04,$04,$04,$04,$04,$04,$03,$03,$03  ; ($CF00)
                .byte $03,$03,$03,$02,$02,$02,$03,$03,$03,$01,$01,$01,$02,$02,$02,$01  ; ($CF10)
                .byte $01,$01,$04,$04,$04,$02,$02,$02,$01,$01,$01,$01,$01,$01,$01,$01  ; ($CF20)
                .byte $01,$03,$03,$03,$02,$02,$02,$04,$04,$04,$04,$04,$04,$02,$02,$02  ; ($CF30)
                .byte $1B,$1B,$1B,$03,$03,$03,$04,$04,$04,$01,$01,$01,$01,$01,$01,$02  ; ($CF40)
                .byte $02,$02,$01,$01,$01,$02,$02,$02,$02,$02,$02,$01,$01,$01,$04,$04  ; ($CF50)
                .byte $04,$03,$03,$03,$03,$03,$03,$02,$02,$02,$02,$02,$02,$03,$03,$03  ; ($CF60)
                .byte $01,$01,$01,$03,$03,$03,$01,$01,$01,$04,$04,$04,$03,$03,$03,$1B  ; ($CF70)
                .byte $1B,$1B,$03,$03,$03,$04,$04,$04,$04,$04,$04,$03,$03,$03,$03,$03  ; ($CF80)
                .byte $03,$02,$02,$02,$03,$03,$03,$01,$01,$01,$02,$02,$02,$01,$01,$01  ; ($CF90)
                .byte $04,$04,$04,$02,$02,$02,$01,$01,$01,$01,$01,$01,$01,$01,$01,$03  ; ($CFA0)
                .byte $03,$03,$02,$02,$02,$04,$04,$04,$04,$04,$04,$02,$02,$02,$1B,$1B  ; ($CFB0)
                .byte $1B,$03,$03,$03,$04,$04,$04,$01,$01,$01,$01,$01,$01,$02,$02,$02  ; ($CFC0)
                .byte $01,$01,$01,$02,$02,$02,$02,$02,$02,$01,$01,$01,$04,$04,$04,$03  ; ($CFD0)
                .byte $03,$03,$03,$03,$03,$02,$02,$02,$02,$02,$02,$03,$03,$03,$01,$01  ; ($CFE0)
                .byte $01,$03,$03,$03,$01,$01,$01,$04,$04,$04,$03,$03,$03,$1B  ; ($CFF0)
sprite_coords_table
                .byte $1B                                 ; ($CFFE)

; ==================================================
; Unsectioned Data
; ==================================================

                .byte $FF,$00,$00,$00,$00,$00,$00,$00,$00  ; ($CFFF)
VIC_Sprite4Xcoord
                .byte $00                                 ; ($D008)
VIC_Sprite4Ycoord
                .byte $00                                 ; ($D009)
VIC_Sprite5Xcoord
                .byte $00                                 ; ($D00A)
VIC_Sprite5Ycoord
                .byte $00,$00,$00,$00,$00                 ; ($D00B)
VIC_SpriteXMSB
                .byte $00                                 ; ($D010)
VIC_ScreenControlRegister1
                .byte $00                                 ; ($D011)
VIC_RasterLine
                .byte $00,$00,$00                         ; ($D012)
VIC_SpriteEnableRegister
                .byte $00                                 ; ($D015)
VIC_ScreenControlRegister2
                .byte $00,$00                             ; ($D016)
VIC_MemorySetupRegister
                .byte $00                                 ; ($D018)
VIC_InterruptStatusRegister
                .byte $00                                 ; ($D019)
VIC_InterruptMaskRegister
                .byte $00,$00                             ; ($D01A)
VIC_SpriteMulticolorRegister
                .byte $00,$00                             ; ($D01C)
VIC_SpriteSpriteCollisionRegister
                .byte $00                                 ; ($D01E)
VIC_SpriteBackgroundCollisionReg
                .byte $00                                 ; ($D01F)
V_BorderColor
                .byte $00                                 ; ($D020)
VIC_BackgroundColor
                .byte $00                                 ; ($D021)
VIC_BackgroundColor1
                .byte $00                                 ; ($D022)
VIC_BackgroundColor2
                .byte $00,$00                             ; ($D023)
VIC_SpriteExtraColor1
                .byte $00                                 ; ($D025)
VIC_SpriteExtraColor2
                .byte $00                                 ; ($D026)
VIC_Sprite0_Color
                .byte $00                                 ; ($D027)
VIC_Sprite1_Color
                .byte $00                                 ; ($D028)
VIC_Sprite2_Color
                .byte $00                                 ; ($D029)
VIC_Sprite3_Color
                .byte $00                                 ; ($D02A)
VIC_Sprite4Color
                .byte $00                                 ; ($D02B)
VIC_Sprite5Color
                .byte $00                                 ; ($D02C)
VIC_Sprite6_Color
                .byte $00                                 ; ($D02D)
V_Sprite7Color
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D02E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D03E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D04E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D05E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D06E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D07E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D08E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D09E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D0AE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D0BE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D0CE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D0DE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D0EE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D0FE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D10E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D11E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D12E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D13E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D14E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D15E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D16E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D17E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D18E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D19E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D1AE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D1BE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D1CE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D1DE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D1EE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D1FE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D20E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D21E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D22E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D23E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D24E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D25E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D26E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D27E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D28E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D29E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D2AE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D2BE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D2CE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D2DE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D2EE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D2FE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D30E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D31E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D32E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D33E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D34E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D35E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D36E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D37E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D38E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D39E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D3AE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D3BE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D3CE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D3DE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D3EE)
                .byte $00,$00                             ; ($D3FE)
SID_Voice1_Freq_Lo
                .byte $00                                 ; ($D400)
SID_Voice1_Freq_Hi
                .byte $00,$00,$00                         ; ($D401)
SID_Voice1_Control
                .byte $00                                 ; ($D404)
SID_Voice1_Attack_Decay
                .byte $00                                 ; ($D405)
SID_Voice1_Sustain_Release
                .byte $00                                 ; ($D406)
SID_Voice2_Attack_Decay
                .byte $00                                 ; ($D407)
SID_Voice2_Sustain_Release
                .byte $00,$00,$00                         ; ($D408)
SID_Voice2_Freq_Lo
                .byte $00                                 ; ($D40B)
SID_Voice2_Freq_Hi
                .byte $00                                 ; ($D40C)
SID_Voice2_PulseWidth_Hi
                .byte $00                                 ; ($D40D)
SID_Voice3_Freq_Lo
                .byte $00                                 ; ($D40E)
SID_Voice3_Freq_Hi
                .byte $00,$00,$00                         ; ($D40F)
SID_Voice3_Control
                .byte $00                                 ; ($D412)
SID_Voice3_Attack_Decay
                .byte $00                                 ; ($D413)
SID_Voice3_Sustain_Release
                .byte $00,$00,$00                         ; ($D414)
SID_FilterResonance
                .byte $00                                 ; ($D417)
SID_VolumeFilter
                .byte $00,$00,$00                         ; ($D418)
SID_Voice3_Oscillator
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D41B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D42B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D43B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D44B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D45B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D46B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D47B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D48B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D49B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D4AB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D4BB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D4CB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D4DB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D4EB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D4FB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D50B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D51B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D52B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D53B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D54B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D55B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D56B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D57B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D58B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D59B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D5AB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D5BB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D5CB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D5DB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D5EB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D5FB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D60B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D61B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D62B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D63B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D64B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D65B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D66B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D67B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D68B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D69B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D6AB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D6BB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D6CB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D6DB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D6EB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D6FB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D70B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D71B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D72B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D73B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D74B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D75B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D76B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D77B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D78B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D79B)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D7AB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D7BB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D7CB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D7DB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D7EB)
                .byte $00,$00,$00,$00,$00,$00,$00,$00     ; ($D7FB)
SID_Voice2_Control
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D803)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D813)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D823)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D833)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D843)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D853)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D863)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D873)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D883)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D893)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D8A3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D8B3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D8C3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D8D3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D8E3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D8F3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D903)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D913)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D923)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D933)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D943)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D953)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D963)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D973)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D983)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D993)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D9A3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D9B3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D9C3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D9D3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D9E3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($D9F3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DA03)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DA13)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DA23)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DA33)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DA43)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DA53)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DA63)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DA73)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DA83)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DA93)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DAA3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DAB3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DAC3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DAD3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DAE3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DAF3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DB03)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DB13)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DB23)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DB33)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DB43)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DB53)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DB63)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DB73)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DB83)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DB93)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DBA3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DBB3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DBC3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DBD3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DBE3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DBF3)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DC03)
CIA1_ControlRegisterA
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DC0E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DC1E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DC2E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DC3E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DC4E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DC5E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DC6E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DC7E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DC8E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DC9E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DCAE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DCBE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DCCE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DCDE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DCEE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DCFE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DD0E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DD1E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DD2E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DD3E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DD4E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DD5E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DD6E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DD7E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DD8E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DD9E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DDAE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DDBE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DDCE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DDDE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DDEE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DDFE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DE0E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DE1E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DE2E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DE3E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DE4E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DE5E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DE6E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DE7E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DE8E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DE9E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DEAE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DEBE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DECE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DEDE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DEEE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DEFE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DF0E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DF1E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DF2E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DF3E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DF4E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DF5E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DF6E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DF7E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DF8E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DF9E)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DFAE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DFBE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DFCE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DFDE)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($DFEE)
                .byte $00,$00                             ; ($DFFE)

; ==================================================
; Section: Music Voice 0 (bass line) (Data)
; Range: $E000 - $EAD0 (2769 bytes)
; ==================================================

                .byte $06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06  ; ($E000)
                .byte $6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78  ; ($E010)
                .byte $01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$08,$19,$B0,$08  ; ($E020)
                .byte $81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$08,$19  ; ($E030)
                .byte $B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C  ; ($E040)
                .byte $08,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08  ; ($E050)
                .byte $06,$6C,$08,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19  ; ($E060)
                .byte $B0,$08,$06,$6C,$08,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C  ; ($E070)
                .byte $04,$19,$B0,$08,$06,$6C,$08,$19,$B0,$08,$81,$78,$01,$00,$00,$03  ; ($E080)
                .byte $06,$6C,$04,$19,$B0,$08,$06,$6C,$08,$19,$B0,$08,$81,$78,$01,$00  ; ($E090)
                .byte $00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$08,$19,$B0,$08,$33,$61  ; ($E0A0)
                .byte $04,$33,$61,$04,$33,$61,$04,$33,$61,$04,$06,$6C,$08,$19,$B0,$08  ; ($E0B0)
                .byte $81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$08,$19  ; ($E0C0)
                .byte $B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C  ; ($E0D0)
                .byte $08,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08  ; ($E0E0)
                .byte $06,$6C,$08,$19,$B0,$08,$CD,$85,$01,$00,$00,$01,$CD,$85,$01,$00  ; ($E0F0)
                .byte $00,$01,$CD,$85,$01,$00,$00,$01,$CD,$85,$01,$00,$00,$01,$66,$C2  ; ($E100)
                .byte $01,$00,$00,$01,$66,$C2,$01,$00,$00,$01,$66,$C2,$02,$66,$C2,$02  ; ($E110)
                .byte $06,$6C,$08,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19  ; ($E120)
                .byte $B0,$08,$06,$6C,$08,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C  ; ($E130)
                .byte $04,$19,$B0,$08,$06,$6C,$08,$19,$B0,$08,$81,$78,$01,$00,$00,$03  ; ($E140)
                .byte $06,$6C,$04,$19,$B0,$08,$06,$6C,$08,$19,$B0,$08,$33,$61,$04,$33  ; ($E150)
                .byte $61,$04,$33,$61,$04,$33,$61,$04,$0C,$D8,$01,$0E,$6B,$01,$10,$2F  ; ($E160)
                .byte $01,$11,$25,$01,$13,$3E,$01,$15,$9A,$01,$16,$E3,$01,$19,$B0,$01  ; ($E170)
                .byte $1C,$D6,$01,$20,$5E,$01,$22,$4A,$01,$26,$7D,$01,$2B,$34,$01,$2D  ; ($E180)
                .byte $C6,$01,$33,$61,$01,$39,$AC,$01,$40,$BC,$01,$44,$95,$01,$4C,$FB  ; ($E190)
                .byte $01,$56,$69,$01,$5B,$8C,$01,$66,$C2,$01,$73,$58,$01,$81,$78,$01  ; ($E1A0)
                .byte $44,$95,$01,$4C,$FB,$01,$56,$69,$01,$5B,$8C,$01,$66,$C2,$01,$73  ; ($E1B0)
                .byte $58,$01,$81,$78,$01,$89,$2B,$01,$06,$6C,$08,$33,$61,$08,$81,$78  ; ($E1C0)
                .byte $01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$89,$2B,$01,$81,$78,$01  ; ($E1D0)
                .byte $73,$58,$01,$66,$C2,$01,$5B,$8C,$01,$56,$69,$01,$4C,$FB,$01,$44  ; ($E1E0)
                .byte $95,$01,$40,$BC,$01,$39,$AC,$01,$33,$61,$01,$2D,$C6,$01,$2B,$34  ; ($E1F0)
                .byte $01,$26,$7D,$01,$22,$4A,$01,$20,$5E,$01,$1C,$D6,$01,$19,$B0,$01  ; ($E200)
                .byte $16,$E3,$01,$15,$9A,$01,$13,$3E,$01,$11,$25,$01,$10,$2F,$01,$0E  ; ($E210)
                .byte $6B,$01,$0C,$D8,$01,$0B,$71,$01,$0A,$CD,$01,$09,$9F,$01,$08,$92  ; ($E220)
                .byte $01,$10,$2F,$01,$0E,$6B,$01,$0C,$D8,$01,$06,$6C,$08,$33,$61,$04  ; ($E230)
                .byte $33,$61,$08,$33,$61,$04,$33,$61,$08,$06,$6C,$08,$19,$B0,$08,$81  ; ($E240)
                .byte $78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$08,$19,$B0  ; ($E250)
                .byte $08,$33,$61,$04,$33,$61,$04,$33,$61,$04,$33,$61,$04,$06,$6C,$08  ; ($E260)
                .byte $19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06  ; ($E270)
                .byte $6C,$08,$19,$B0,$08,$33,$61,$04,$33,$61,$04,$33,$61,$04,$33,$61  ; ($E280)
                .byte $04,$06,$6C,$08,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04  ; ($E290)
                .byte $19,$B0,$08,$06,$6C,$08,$19,$B0,$08,$33,$61,$04,$33,$61,$04,$33  ; ($E2A0)
                .byte $61,$04,$33,$61,$04,$06,$6C,$08,$19,$B0,$08,$81,$78,$01,$00,$00  ; ($E2B0)
                .byte $03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$08,$19,$B0,$08,$33,$61,$04  ; ($E2C0)
                .byte $33,$61,$04,$33,$61,$04,$33,$61,$04,$06,$6C,$08,$19,$B0,$08,$81  ; ($E2D0)
                .byte $78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$08,$19,$B0  ; ($E2E0)
                .byte $08,$33,$61,$04,$33,$61,$04,$33,$61,$04,$33,$61,$04,$06,$6C,$06  ; ($E2F0)
                .byte $00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19  ; ($E300)
                .byte $B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00  ; ($E310)
                .byte $03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08  ; ($E320)
                .byte $81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00  ; ($E330)
                .byte $00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0  ; ($E340)
                .byte $08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03  ; ($E350)
                .byte $06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81  ; ($E360)
                .byte $78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00  ; ($E370)
                .byte $02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08  ; ($E380)
                .byte $06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06  ; ($E390)
                .byte $6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78  ; ($E3A0)
                .byte $01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02  ; ($E3B0)
                .byte $19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06  ; ($E3C0)
                .byte $6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C  ; ($E3D0)
                .byte $04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01  ; ($E3E0)
                .byte $00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19  ; ($E3F0)
                .byte $B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C  ; ($E400)
                .byte $06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04  ; ($E410)
                .byte $19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00  ; ($E420)
                .byte $00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0  ; ($E430)
                .byte $08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06  ; ($E440)
                .byte $00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19  ; ($E450)
                .byte $B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00  ; ($E460)
                .byte $03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08  ; ($E470)
                .byte $81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00  ; ($E480)
                .byte $00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0  ; ($E490)
                .byte $08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03  ; ($E4A0)
                .byte $06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81  ; ($E4B0)
                .byte $78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$89,$2B,$01,$81,$78  ; ($E4C0)
                .byte $01,$73,$58,$01,$66,$C2,$01,$5B,$8C,$01,$56,$69,$01,$4C,$FB,$01  ; ($E4D0)
                .byte $44,$95,$01,$40,$BC,$01,$39,$AC,$01,$33,$61,$01,$2D,$C6,$01,$2B  ; ($E4E0)
                .byte $34,$01,$26,$7D,$01,$22,$4A,$01,$20,$5E,$01,$1C,$D6,$01,$19,$B0  ; ($E4F0)
                .byte $01,$16,$E3,$01,$15,$9A,$01,$13,$3E,$01,$11,$25,$01,$10,$2F,$01  ; ($E500)
                .byte $0E,$6B,$01,$0C,$D8,$01,$0B,$71,$01,$0A,$CD,$01,$09,$9F,$01,$08  ; ($E510)
                .byte $92,$01,$10,$2F,$01,$0E,$6B,$01,$0C,$D8,$01,$0C,$D8,$01,$0E,$6B  ; ($E520)
                .byte $01,$10,$2F,$01,$11,$25,$01,$13,$3E,$01,$15,$9A,$01,$16,$E3,$01  ; ($E530)
                .byte $19,$B0,$01,$1C,$D6,$01,$20,$5E,$01,$22,$4A,$01,$26,$7D,$01,$2B  ; ($E540)
                .byte $34,$01,$2D,$C6,$01,$33,$61,$01,$39,$AC,$01,$40,$BC,$01,$44,$95  ; ($E550)
                .byte $01,$44,$95,$01,$4C,$FB,$01,$33,$61,$04,$33,$61,$04,$33,$61,$04  ; ($E560)
                .byte $89,$2B,$01,$81,$78,$01,$73,$58,$01,$66,$C2,$01,$5B,$8C,$01,$56  ; ($E570)
                .byte $69,$01,$4C,$FB,$01,$44,$95,$01,$40,$BC,$01,$39,$AC,$01,$33,$61  ; ($E580)
                .byte $01,$2D,$C6,$01,$2B,$34,$01,$26,$7D,$01,$22,$4A,$01,$20,$5E,$01  ; ($E590)
                .byte $1C,$D6,$01,$19,$B0,$01,$16,$E3,$01,$15,$9A,$01,$13,$3E,$01,$11  ; ($E5A0)
                .byte $25,$01,$10,$2F,$01,$0E,$6B,$01,$0C,$D8,$01,$0B,$71,$01,$0A,$CD  ; ($E5B0)
                .byte $01,$09,$9F,$01,$08,$92,$01,$10,$2F,$01,$0E,$6B,$01,$0C,$D8,$01  ; ($E5C0)
                .byte $0C,$D8,$01,$0E,$6B,$01,$10,$2F,$01,$11,$25,$01,$13,$3E,$01,$15  ; ($E5D0)
                .byte $9A,$01,$16,$E3,$01,$19,$B0,$01,$1C,$D6,$01,$20,$5E,$01,$22,$4A  ; ($E5E0)
                .byte $01,$26,$7D,$01,$2B,$34,$01,$2D,$C6,$01,$33,$61,$01,$39,$AC,$01  ; ($E5F0)
                .byte $40,$BC,$01,$44,$95,$01,$44,$95,$01,$4C,$FB,$01,$33,$61,$04,$33  ; ($E600)
                .byte $61,$04,$33,$61,$04,$06,$6C,$08,$19,$B0,$08,$81,$78,$01,$00,$00  ; ($E610)
                .byte $03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$08,$19,$B0,$08,$81,$78,$01  ; ($E620)
                .byte $00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$08,$19,$B0,$08,$81  ; ($E630)
                .byte $78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$08,$19,$B0  ; ($E640)
                .byte $08,$CD,$85,$01,$00,$00,$01,$CD,$85,$01,$00,$00,$01,$CD,$85,$01  ; ($E650)
                .byte $00,$00,$01,$CD,$85,$01,$00,$00,$01,$66,$C2,$01,$00,$00,$01,$66  ; ($E660)
                .byte $C2,$01,$00,$00,$01,$66,$C2,$02,$66,$C2,$02,$06,$6C,$08,$19,$B0  ; ($E670)
                .byte $08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$08  ; ($E680)
                .byte $19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06  ; ($E690)
                .byte $6C,$08,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0  ; ($E6A0)
                .byte $08,$06,$6C,$08,$19,$B0,$08,$33,$61,$04,$33,$61,$04,$33,$61,$04  ; ($E6B0)
                .byte $33,$61,$04,$0C,$D8,$01,$0E,$6B,$01,$10,$2F,$01,$11,$25,$01,$13  ; ($E6C0)
                .byte $3E,$01,$15,$9A,$01,$16,$E3,$01,$19,$B0,$01,$1C,$D6,$01,$20,$5E  ; ($E6D0)
                .byte $01,$22,$4A,$01,$26,$7D,$01,$2B,$34,$01,$2D,$C6,$01,$33,$61,$01  ; ($E6E0)
                .byte $39,$AC,$01,$40,$BC,$01,$44,$95,$01,$4C,$FB,$01,$56,$69,$01,$5B  ; ($E6F0)
                .byte $8C,$01,$66,$C2,$01,$73,$58,$01,$81,$78,$01,$44,$95,$01,$4C,$FB  ; ($E700)
                .byte $01,$56,$69,$01,$5B,$8C,$01,$66,$C2,$01,$73,$58,$01,$81,$78,$01  ; ($E710)
                .byte $89,$2B,$01,$06,$6C,$08,$33,$61,$08,$81,$78,$01,$00,$00,$03,$06  ; ($E720)
                .byte $6C,$04,$19,$B0,$08,$89,$2B,$01,$81,$78,$01,$73,$58,$01,$66,$C2  ; ($E730)
                .byte $01,$5B,$8C,$01,$56,$69,$01,$4C,$FB,$01,$44,$95,$01,$40,$BC,$01  ; ($E740)
                .byte $39,$AC,$01,$33,$61,$01,$2D,$C6,$01,$2B,$34,$01,$26,$7D,$01,$22  ; ($E750)
                .byte $4A,$01,$20,$5E,$01,$1C,$D6,$01,$19,$B0,$01,$16,$E3,$01,$15,$9A  ; ($E760)
                .byte $01,$13,$3E,$01,$11,$25,$01,$10,$2F,$01,$0E,$6B,$01,$0C,$D8,$01  ; ($E770)
                .byte $0B,$71,$01,$0A,$CD,$01,$09,$9F,$01,$08,$92,$01,$10,$2F,$01,$0E  ; ($E780)
                .byte $6B,$01,$0C,$D8,$01,$06,$6C,$08,$33,$61,$04,$33,$61,$08,$33,$61  ; ($E790)
                .byte $04,$33,$61,$08,$06,$6C,$08,$19,$B0,$08,$81,$78,$01,$00,$00,$03  ; ($E7A0)
                .byte $06,$6C,$04,$19,$B0,$08,$06,$6C,$08,$19,$B0,$08,$33,$61,$04,$33  ; ($E7B0)
                .byte $61,$04,$33,$61,$04,$33,$61,$04,$06,$6C,$08,$19,$B0,$08,$81,$78  ; ($E7C0)
                .byte $01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$08,$19,$B0,$08  ; ($E7D0)
                .byte $33,$61,$04,$33,$61,$04,$33,$61,$04,$33,$61,$04,$06,$6C,$08,$19  ; ($E7E0)
                .byte $B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C  ; ($E7F0)
                .byte $08,$19,$B0,$08,$33,$61,$04,$33,$61,$04,$33,$61,$04,$33,$61,$04  ; ($E800)
                .byte $06,$6C,$08,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19  ; ($E810)
                .byte $B0,$08,$06,$6C,$08,$19,$B0,$08,$33,$61,$04,$33,$61,$04,$33,$61  ; ($E820)
                .byte $04,$33,$61,$04,$06,$6C,$08,$19,$B0,$08,$81,$78,$01,$00,$00,$03  ; ($E830)
                .byte $06,$6C,$04,$19,$B0,$08,$06,$6C,$08,$19,$B0,$08,$33,$61,$04,$33  ; ($E840)
                .byte $61,$04,$33,$61,$04,$33,$61,$04,$06,$6C,$06,$00,$00,$02,$19,$B0  ; ($E850)
                .byte $08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06  ; ($E860)
                .byte $00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19  ; ($E870)
                .byte $B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00  ; ($E880)
                .byte $03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08  ; ($E890)
                .byte $81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00  ; ($E8A0)
                .byte $00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0  ; ($E8B0)
                .byte $08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03  ; ($E8C0)
                .byte $06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81  ; ($E8D0)
                .byte $78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00  ; ($E8E0)
                .byte $02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08  ; ($E8F0)
                .byte $06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06  ; ($E900)
                .byte $6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78  ; ($E910)
                .byte $01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02  ; ($E920)
                .byte $19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06  ; ($E930)
                .byte $6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C  ; ($E940)
                .byte $04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01  ; ($E950)
                .byte $00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19  ; ($E960)
                .byte $B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C  ; ($E970)
                .byte $06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04  ; ($E980)
                .byte $19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00  ; ($E990)
                .byte $00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0  ; ($E9A0)
                .byte $08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06  ; ($E9B0)
                .byte $00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19  ; ($E9C0)
                .byte $B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00  ; ($E9D0)
                .byte $03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08  ; ($E9E0)
                .byte $81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00  ; ($E9F0)
                .byte $00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0  ; ($EA00)
                .byte $08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03  ; ($EA10)
                .byte $06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81  ; ($EA20)
                .byte $78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00  ; ($EA30)
                .byte $02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08  ; ($EA40)
                .byte $06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06  ; ($EA50)
                .byte $6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78  ; ($EA60)
                .byte $01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02  ; ($EA70)
                .byte $19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06  ; ($EA80)
                .byte $6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C  ; ($EA90)
                .byte $04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19,$B0,$08,$81,$78,$01  ; ($EAA0)
                .byte $00,$00,$03,$06,$6C,$04,$19,$B0,$08,$06,$6C,$06,$00,$00,$02,$19  ; ($EAB0)
                .byte $B0,$08,$81,$78,$01,$00,$00,$03,$06,$6C,$04,$19,$B0,$08,$00,$00  ; ($EAC0)
                .byte $63                                 ; ($EAD0)

; ==================================================
; Section: Music Voice 1 (melody) (Data)
; Range: $EAD1 - $F754 (3204 bytes)
; ==================================================

                .byte $00,$00,$40,$03,$9A,$04,$03,$9A,$04,$03,$9A,$04,$04,$49,$08,$03  ; ($EAD1)
                .byte $9A,$08,$03,$9A,$04,$04,$0B,$04,$04,$0B,$04,$04,$0B,$04,$02,$B3  ; ($EAE1)
                .byte $08,$04,$0B,$04,$04,$CF,$04,$04,$0B,$04,$04,$49,$04,$04,$49,$04  ; ($EAF1)
                .byte $04,$49,$04,$02,$B3,$08,$04,$49,$08,$04,$49,$04,$18,$3F,$08,$18  ; ($EB01)
                .byte $3F,$08,$04,$CF,$04,$04,$CF,$04,$04,$CF,$04,$04,$CF,$04,$03,$9A  ; ($EB11)
                .byte $04,$03,$9A,$04,$03,$9A,$04,$04,$49,$08,$03,$9A,$08,$03,$9A,$04  ; ($EB21)
                .byte $04,$0B,$04,$04,$0B,$04,$04,$0B,$04,$02,$B3,$08,$04,$0B,$04,$04  ; ($EB31)
                .byte $CF,$04,$04,$0B,$04,$04,$49,$04,$04,$49,$04,$04,$49,$04,$02,$B3  ; ($EB41)
                .byte $08,$04,$49,$08,$04,$49,$04,$03,$9A,$08,$03,$9A,$08,$03,$9A,$04  ; ($EB51)
                .byte $03,$9A,$04,$03,$9A,$04,$03,$9A,$04,$07,$35,$09,$00,$00,$01,$07  ; ($EB61)
                .byte $35,$01,$00,$00,$01,$07,$35,$01,$00,$00,$01,$07,$35,$01,$00,$00  ; ($EB71)
                .byte $01,$08,$92,$01,$00,$00,$01,$08,$92,$01,$00,$00,$01,$07,$35,$04  ; ($EB81)
                .byte $05,$66,$04,$07,$35,$04,$06,$6C,$09,$00,$00,$01,$06,$6C,$01,$00  ; ($EB91)
                .byte $00,$01,$06,$6C,$01,$00,$00,$01,$06,$6C,$01,$00,$00,$01,$09,$9F  ; ($EBA1)
                .byte $01,$00,$00,$01,$09,$9F,$01,$00,$00,$01,$08,$17,$04,$06,$6C,$04  ; ($EBB1)
                .byte $06,$6C,$04,$06,$6C,$09,$00,$00,$01,$06,$6C,$01,$00,$00,$01,$06  ; ($EBC1)
                .byte $6C,$01,$00,$00,$01,$06,$6C,$01,$00,$00,$01,$08,$92,$01,$00,$00  ; ($EBD1)
                .byte $01,$08,$92,$01,$00,$00,$01,$06,$6C,$04,$05,$66,$04,$06,$6C,$04  ; ($EBE1)
                .byte $09,$9F,$09,$00,$00,$01,$07,$35,$01,$00,$00,$01,$06,$0F,$01,$00  ; ($EBF1)
                .byte $00,$01,$04,$CF,$01,$00,$00,$01,$06,$0F,$01,$00,$00,$01,$07,$35  ; ($EC01)
                .byte $01,$00,$00,$01,$09,$9F,$04,$07,$35,$04,$09,$9F,$04,$07,$35,$09  ; ($EC11)
                .byte $00,$00,$01,$07,$35,$01,$00,$00,$01,$07,$35,$01,$00,$00,$01,$07  ; ($EC21)
                .byte $35,$01,$00,$00,$01,$08,$92,$01,$00,$00,$01,$08,$92,$01,$00,$00  ; ($EC31)
                .byte $01,$07,$35,$04,$05,$66,$04,$07,$35,$04,$06,$6C,$09,$00,$00,$01  ; ($EC41)
                .byte $06,$6C,$01,$00,$00,$01,$06,$6C,$01,$00,$00,$01,$06,$6C,$01,$00  ; ($EC51)
                .byte $00,$01,$09,$9F,$01,$00,$00,$01,$09,$9F,$01,$00,$00,$01,$08,$17  ; ($EC61)
                .byte $04,$06,$6C,$04,$06,$6C,$04,$06,$6C,$09,$00,$00,$01,$06,$6C,$01  ; ($EC71)
                .byte $00,$00,$01,$06,$6C,$01,$00,$00,$01,$06,$6C,$01,$00,$00,$01,$08  ; ($EC81)
                .byte $92,$01,$00,$00,$01,$08,$92,$01,$00,$00,$01,$06,$6C,$04,$05,$66  ; ($EC91)
                .byte $04,$06,$6C,$04,$09,$9F,$09,$00,$00,$01,$07,$35,$01,$00,$00,$01  ; ($ECA1)
                .byte $06,$0F,$01,$00,$00,$01,$04,$CF,$01,$00,$00,$01,$06,$0F,$01,$00  ; ($ECB1)
                .byte $00,$01,$07,$35,$01,$00,$00,$01,$09,$9F,$04,$07,$35,$04,$09,$9F  ; ($ECC1)
                .byte $04,$07,$35,$09,$00,$00,$01,$07,$35,$01,$00,$00,$01,$07,$35,$01  ; ($ECD1)
                .byte $00,$00,$01,$07,$35,$01,$00,$00,$01,$08,$92,$01,$00,$00,$01,$08  ; ($ECE1)
                .byte $92,$01,$00,$00,$01,$07,$35,$04,$05,$66,$04,$07,$35,$04,$07,$35  ; ($ECF1)
                .byte $08,$22,$4A,$08,$08,$92,$01,$00,$00,$01,$08,$92,$01,$00,$00,$01  ; ($ED01)
                .byte $07,$35,$04,$05,$66,$04,$07,$35,$04,$07,$35,$09,$00,$00,$01,$07  ; ($ED11)
                .byte $35,$01,$00,$00,$01,$07,$35,$01,$00,$00,$01,$07,$35,$01,$00,$00  ; ($ED21)
                .byte $01,$08,$92,$01,$00,$00,$01,$08,$92,$01,$00,$00,$01,$07,$35,$04  ; ($ED31)
                .byte $05,$66,$04,$07,$35,$04,$07,$35,$08,$22,$4A,$04,$22,$4A,$04,$00  ; ($ED41)
                .byte $00,$04,$22,$4A,$04,$22,$4A,$08,$07,$35,$09,$00,$00,$01,$07,$35  ; ($ED51)
                .byte $01,$00,$00,$01,$07,$35,$01,$00,$00,$01,$07,$35,$01,$00,$00,$01  ; ($ED61)
                .byte $08,$92,$01,$00,$00,$01,$08,$92,$01,$00,$00,$01,$07,$35,$04,$05  ; ($ED71)
                .byte $66,$04,$07,$35,$04,$06,$6C,$09,$00,$00,$01,$06,$6C,$01,$00,$00  ; ($ED81)
                .byte $01,$06,$6C,$01,$00,$00,$01,$06,$6C,$01,$00,$00,$01,$09,$9F,$01  ; ($ED91)
                .byte $00,$00,$01,$09,$9F,$01,$00,$00,$01,$08,$17,$04,$06,$6C,$04,$06  ; ($EDA1)
                .byte $6C,$04,$06,$6C,$09,$00,$00,$01,$06,$6C,$01,$00,$00,$01,$06,$6C  ; ($EDB1)
                .byte $01,$00,$00,$01,$06,$6C,$01,$00,$00,$01,$08,$92,$01,$00,$00,$01  ; ($EDC1)
                .byte $08,$92,$01,$00,$00,$01,$06,$6C,$04,$05,$66,$04,$06,$6C,$04,$09  ; ($EDD1)
                .byte $9F,$09,$00,$00,$01,$07,$35,$01,$00,$00,$01,$06,$0F,$01,$00,$00  ; ($EDE1)
                .byte $01,$04,$CF,$01,$00,$00,$01,$06,$0F,$01,$00,$00,$01,$07,$35,$01  ; ($EDF1)
                .byte $00,$00,$01,$09,$9F,$04,$07,$35,$04,$09,$9F,$04,$07,$35,$09,$00  ; ($EE01)
                .byte $00,$01,$07,$35,$01,$00,$00,$01,$07,$35,$01,$00,$00,$01,$07,$35  ; ($EE11)
                .byte $01,$00,$00,$01,$08,$92,$01,$00,$00,$01,$08,$92,$01,$00,$00,$01  ; ($EE21)
                .byte $07,$35,$04,$05,$66,$04,$07,$35,$04,$06,$6C,$09,$00,$00,$01,$06  ; ($EE31)
                .byte $6C,$01,$00,$00,$01,$06,$6C,$01,$00,$00,$01,$06,$6C,$01,$00,$00  ; ($EE41)
                .byte $01,$09,$9F,$01,$00,$00,$01,$09,$9F,$01,$00,$00,$01,$08,$17,$04  ; ($EE51)
                .byte $06,$6C,$04,$06,$6C,$04,$06,$6C,$09,$00,$00,$01,$06,$6C,$01,$00  ; ($EE61)
                .byte $00,$01,$06,$6C,$01,$00,$00,$01,$06,$6C,$01,$00,$00,$01,$08,$92  ; ($EE71)
                .byte $01,$00,$00,$01,$08,$92,$01,$00,$00,$01,$06,$6C,$04,$05,$66,$04  ; ($EE81)
                .byte $06,$6C,$04,$09,$9F,$09,$00,$00,$01,$07,$35,$01,$00,$00,$01,$06  ; ($EE91)
                .byte $0F,$01,$00,$00,$01,$04,$CF,$01,$00,$00,$01,$06,$0F,$01,$00,$00  ; ($EEA1)
                .byte $01,$07,$35,$01,$00,$00,$01,$09,$9F,$04,$07,$35,$04,$09,$9F,$04  ; ($EEB1)
                .byte $05,$B8,$09,$00,$00,$01,$05,$B8,$01,$00,$00,$01,$05,$B8,$01,$00  ; ($EEC1)
                .byte $00,$01,$05,$B8,$01,$00,$00,$01,$0B,$71,$01,$00,$00,$01,$0B,$71  ; ($EED1)
                .byte $01,$00,$00,$01,$05,$B8,$04,$05,$B8,$04,$05,$B8,$04,$0F,$46,$0C  ; ($EEE1)
                .byte $08,$92,$04,$0A,$31,$04,$09,$9F,$04,$08,$92,$08,$06,$CD,$08,$06  ; ($EEF1)
                .byte $CD,$08,$00,$00,$04,$08,$92,$04,$07,$A3,$04,$06,$CD,$04,$07,$A3  ; ($EF01)
                .byte $09,$00,$00,$01,$09,$9F,$01,$00,$00,$01,$09,$9F,$01,$00,$00,$01  ; ($EF11)
                .byte $09,$9F,$01,$00,$00,$01,$07,$A3,$01,$00,$00,$01,$05,$B8,$01,$00  ; ($EF21)
                .byte $00,$01,$07,$A3,$04,$09,$9F,$04,$07,$A3,$04,$05,$B8,$09,$00,$00  ; ($EF31)
                .byte $01,$05,$B8,$01,$00,$00,$01,$05,$B8,$01,$00,$00,$01,$05,$B8,$01  ; ($EF41)
                .byte $00,$00,$01,$0B,$71,$01,$00,$00,$01,$0B,$71,$01,$00,$00,$01,$05  ; ($EF51)
                .byte $B8,$04,$05,$B8,$04,$05,$B8,$04,$0F,$46,$0C,$08,$92,$04,$0A,$31  ; ($EF61)
                .byte $04,$09,$9F,$04,$08,$92,$08,$06,$CD,$08,$06,$CD,$08,$00,$00,$04  ; ($EF71)
                .byte $08,$92,$04,$07,$A3,$04,$06,$CD,$04,$07,$A3,$09,$00,$00,$01,$09  ; ($EF81)
                .byte $9F,$01,$00,$00,$01,$09,$9F,$01,$00,$00,$01,$09,$9F,$01,$00,$00  ; ($EF91)
                .byte $01,$07,$A3,$01,$00,$00,$01,$05,$B8,$01,$00,$00,$01,$07,$A3,$04  ; ($EFA1)
                .byte $09,$9F,$04,$07,$A3,$04,$04,$8A,$04,$04,$8A,$04,$09,$15,$04,$04  ; ($EFB1)
                .byte $8A,$04,$05,$18,$04,$05,$18,$04,$0A,$31,$04,$05,$18,$04,$05,$B8  ; ($EFC1)
                .byte $04,$05,$B8,$04,$0B,$71,$04,$05,$B8,$04,$05,$B8,$04,$05,$B8,$04  ; ($EFD1)
                .byte $0B,$71,$04,$05,$B8,$04,$07,$A3,$0C,$07,$A3,$04,$0B,$71,$04,$07  ; ($EFE1)
                .byte $A3,$04,$0B,$71,$08,$08,$92,$0C,$08,$92,$04,$0C,$D8,$04,$08,$92  ; ($EFF1)
                .byte $04,$0C,$D8,$08,$04,$8A,$04,$04,$8A,$04,$09,$15,$04,$04,$8A,$04  ; ($F001)
                .byte $05,$18,$04,$05,$18,$04,$0A,$31,$04,$05,$18,$04,$05,$B8,$04,$05  ; ($F011)
                .byte $B8,$04,$0B,$71,$04,$05,$B8,$04,$05,$B8,$04,$05,$B8,$04,$0B,$71  ; ($F021)
                .byte $04,$05,$B8,$04,$07,$A3,$0C,$07,$A3,$04,$0B,$71,$04,$07,$A3,$04  ; ($F031)
                .byte $0B,$71,$08,$08,$92,$0C,$08,$92,$04,$0C,$D8,$04,$08,$92,$04,$0C  ; ($F041)
                .byte $D8,$08,$04,$8A,$04,$04,$8A,$04,$09,$15,$04,$04,$8A,$04,$05,$18  ; ($F051)
                .byte $04,$05,$18,$04,$0A,$31,$04,$05,$18,$04,$05,$B8,$04,$05,$B8,$04  ; ($F061)
                .byte $0B,$71,$04,$05,$B8,$04,$05,$B8,$04,$05,$B8,$04,$0B,$71,$04,$05  ; ($F071)
                .byte $B8,$04,$07,$A3,$0C,$07,$A3,$04,$0B,$71,$04,$07,$A3,$04,$0B,$71  ; ($F081)
                .byte $08,$08,$92,$0C,$08,$92,$04,$0C,$D8,$04,$08,$92,$04,$0C,$D8,$08  ; ($F091)
                .byte $04,$8A,$04,$04,$8A,$04,$09,$15,$04,$04,$8A,$04,$05,$18,$04,$05  ; ($F0A1)
                .byte $18,$04,$0A,$31,$04,$05,$18,$04,$05,$B8,$04,$05,$B8,$04,$0B,$71  ; ($F0B1)
                .byte $04,$05,$B8,$04,$05,$B8,$04,$05,$B8,$04,$0B,$71,$04,$05,$B8,$04  ; ($F0C1)
                .byte $07,$A3,$0C,$07,$A3,$04,$0B,$71,$04,$07,$A3,$04,$0B,$71,$08,$08  ; ($F0D1)
                .byte $92,$0C,$08,$92,$04,$0C,$D8,$04,$08,$92,$04,$0C,$D8,$08,$05,$B8  ; ($F0E1)
                .byte $20,$05,$B8,$14,$04,$49,$04,$05,$18,$04,$04,$CF,$04,$05,$B8,$20  ; ($F0F1)
                .byte $07,$35,$14,$05,$66,$04,$06,$6C,$04,$06,$CD,$04,$07,$35,$09,$00  ; ($F101)
                .byte $00,$01,$07,$35,$01,$00,$00,$01,$07,$35,$01,$00,$00,$01,$07,$35  ; ($F111)
                .byte $01,$00,$00,$01,$08,$92,$01,$00,$00,$01,$08,$92,$01,$00,$00,$01  ; ($F121)
                .byte $07,$35,$04,$05,$66,$04,$07,$35,$04,$06,$6C,$09,$00,$00,$01,$06  ; ($F131)
                .byte $6C,$01,$00,$00,$01,$06,$6C,$01,$00,$00,$01,$06,$6C,$01,$00,$00  ; ($F141)
                .byte $01,$09,$9F,$01,$00,$00,$01,$09,$9F,$01,$00,$00,$01,$08,$17,$04  ; ($F151)
                .byte $06,$6C,$04,$06,$6C,$04,$06,$6C,$09,$00,$00,$01,$06,$6C,$01,$00  ; ($F161)
                .byte $00,$01,$06,$6C,$01,$00,$00,$01,$06,$6C,$01,$00,$00,$01,$08,$92  ; ($F171)
                .byte $01,$00,$00,$01,$08,$92,$01,$00,$00,$01,$06,$6C,$04,$05,$66,$04  ; ($F181)
                .byte $06,$6C,$04,$09,$9F,$09,$00,$00,$01,$07,$35,$01,$00,$00,$01,$06  ; ($F191)
                .byte $0F,$01,$00,$00,$01,$04,$CF,$01,$00,$00,$01,$06,$0F,$01,$00,$00  ; ($F1A1)
                .byte $01,$07,$35,$01,$00,$00,$01,$09,$9F,$04,$07,$35,$04,$09,$9F,$04  ; ($F1B1)
                .byte $07,$35,$09,$00,$00,$01,$07,$35,$01,$00,$00,$01,$07,$35,$01,$00  ; ($F1C1)
                .byte $00,$01,$07,$35,$01,$00,$00,$01,$08,$92,$01,$00,$00,$01,$08,$92  ; ($F1D1)
                .byte $01,$00,$00,$01,$07,$35,$04,$05,$66,$04,$07,$35,$04,$06,$6C,$09  ; ($F1E1)
                .byte $00,$00,$01,$06,$6C,$01,$00,$00,$01,$06,$6C,$01,$00,$00,$01,$06  ; ($F1F1)
                .byte $6C,$01,$00,$00,$01,$09,$9F,$01,$00,$00,$01,$09,$9F,$01,$00,$00  ; ($F201)
                .byte $01,$08,$17,$04,$06,$6C,$04,$06,$6C,$04,$06,$6C,$09,$00,$00,$01  ; ($F211)
                .byte $06,$6C,$01,$00,$00,$01,$06,$6C,$01,$00,$00,$01,$06,$6C,$01,$00  ; ($F221)
                .byte $00,$01,$08,$92,$01,$00,$00,$01,$08,$92,$01,$00,$00,$01,$06,$6C  ; ($F231)
                .byte $04,$05,$66,$04,$06,$6C,$04,$09,$9F,$09,$00,$00,$01,$07,$35,$01  ; ($F241)
                .byte $00,$00,$01,$06,$0F,$01,$00,$00,$01,$04,$CF,$01,$00,$00,$01,$06  ; ($F251)
                .byte $0F,$01,$00,$00,$01,$07,$35,$01,$00,$00,$01,$09,$9F,$04,$07,$35  ; ($F261)
                .byte $04,$09,$9F,$04,$07,$35,$09,$00,$00,$01,$07,$35,$01,$00,$00,$01  ; ($F271)
                .byte $07,$35,$01,$00,$00,$01,$07,$35,$01,$00,$00,$01,$08,$92,$01,$00  ; ($F281)
                .byte $00,$01,$08,$92,$01,$00,$00,$01,$07,$35,$04,$05,$66,$04,$07,$35  ; ($F291)
                .byte $04,$07,$35,$08,$22,$4A,$08,$08,$92,$01,$00,$00,$01,$08,$92,$01  ; ($F2A1)
                .byte $00,$00,$01,$07,$35,$04,$05,$66,$04,$07,$35,$04,$07,$35,$09,$00  ; ($F2B1)
                .byte $00,$01,$07,$35,$01,$00,$00,$01,$07,$35,$01,$00,$00,$01,$07,$35  ; ($F2C1)
                .byte $01,$00,$00,$01,$08,$92,$01,$00,$00,$01,$08,$92,$01,$00,$00,$01  ; ($F2D1)
                .byte $07,$35,$04,$05,$66,$04,$07,$35,$04,$07,$35,$08,$22,$4A,$04,$22  ; ($F2E1)
                .byte $4A,$04,$00,$00,$04,$22,$4A,$04,$22,$4A,$08,$07,$35,$09,$00,$00  ; ($F2F1)
                .byte $01,$07,$35,$01,$00,$00,$01,$07,$35,$01,$00,$00,$01,$07,$35,$01  ; ($F301)
                .byte $00,$00,$01,$08,$92,$01,$00,$00,$01,$08,$92,$01,$00,$00,$01,$07  ; ($F311)
                .byte $35,$04,$05,$66,$04,$07,$35,$04,$06,$6C,$09,$00,$00,$01,$06,$6C  ; ($F321)
                .byte $01,$00,$00,$01,$06,$6C,$01,$00,$00,$01,$06,$6C,$01,$00,$00,$01  ; ($F331)
                .byte $09,$9F,$01,$00,$00,$01,$09,$9F,$01,$00,$00,$01,$08,$17,$04,$06  ; ($F341)
                .byte $6C,$04,$06,$6C,$04,$06,$6C,$09,$00,$00,$01,$06,$6C,$01,$00,$00  ; ($F351)
                .byte $01,$06,$6C,$01,$00,$00,$01,$06,$6C,$01,$00,$00,$01,$08,$92,$01  ; ($F361)
                .byte $00,$00,$01,$08,$92,$01,$00,$00,$01,$06,$6C,$04,$05,$66,$04,$06  ; ($F371)
                .byte $6C,$04,$09,$9F,$09,$00,$00,$01,$07,$35,$01,$00,$00,$01,$06,$0F  ; ($F381)
                .byte $01,$00,$00,$01,$04,$CF,$01,$00,$00,$01,$06,$0F,$01,$00,$00,$01  ; ($F391)
                .byte $07,$35,$01,$00,$00,$01,$09,$9F,$04,$07,$35,$04,$09,$9F,$04,$07  ; ($F3A1)
                .byte $35,$09,$00,$00,$01,$07,$35,$01,$00,$00,$01,$07,$35,$01,$00,$00  ; ($F3B1)
                .byte $01,$07,$35,$01,$00,$00,$01,$08,$92,$01,$00,$00,$01,$08,$92,$01  ; ($F3C1)
                .byte $00,$00,$01,$07,$35,$04,$05,$66,$04,$07,$35,$04,$06,$6C,$09,$00  ; ($F3D1)
                .byte $00,$01,$06,$6C,$01,$00,$00,$01,$06,$6C,$01,$00,$00,$01,$06,$6C  ; ($F3E1)
                .byte $01,$00,$00,$01,$09,$9F,$01,$00,$00,$01,$09,$9F,$01,$00,$00,$01  ; ($F3F1)
                .byte $08,$17,$04,$06,$6C,$04,$06,$6C,$04,$06,$6C,$09,$00,$00,$01,$06  ; ($F401)
                .byte $6C,$01,$00,$00,$01,$06,$6C,$01,$00,$00,$01,$06,$6C,$01,$00,$00  ; ($F411)
                .byte $01,$08,$92,$01,$00,$00,$01,$08,$92,$01,$00,$00,$01,$06,$6C,$04  ; ($F421)
                .byte $05,$66,$04,$06,$6C,$04,$09,$9F,$09,$00,$00,$01,$07,$35,$01,$00  ; ($F431)
                .byte $00,$01,$06,$0F,$01,$00,$00,$01,$04,$CF,$01,$00,$00,$01,$06,$0F  ; ($F441)
                .byte $01,$00,$00,$01,$07,$35,$01,$00,$00,$01,$09,$9F,$04,$07,$35,$04  ; ($F451)
                .byte $09,$9F,$04,$05,$B8,$09,$00,$00,$01,$05,$B8,$01,$00,$00,$01,$05  ; ($F461)
                .byte $B8,$01,$00,$00,$01,$05,$B8,$01,$00,$00,$01,$0B,$71,$01,$00,$00  ; ($F471)
                .byte $01,$0B,$71,$01,$00,$00,$01,$05,$B8,$04,$05,$B8,$04,$05,$B8,$04  ; ($F481)
                .byte $0F,$46,$0C,$08,$92,$04,$0A,$31,$04,$09,$9F,$04,$08,$92,$08,$06  ; ($F491)
                .byte $CD,$08,$06,$CD,$08,$00,$00,$04,$08,$92,$04,$07,$A3,$04,$06,$CD  ; ($F4A1)
                .byte $04,$07,$A3,$09,$00,$00,$01,$09,$9F,$01,$00,$00,$01,$09,$9F,$01  ; ($F4B1)
                .byte $00,$00,$01,$09,$9F,$01,$00,$00,$01,$07,$A3,$01,$00,$00,$01,$05  ; ($F4C1)
                .byte $B8,$01,$00,$00,$01,$07,$A3,$04,$09,$9F,$04,$07,$A3,$04,$05,$B8  ; ($F4D1)
                .byte $09,$00,$00,$01,$05,$B8,$01,$00,$00,$01,$05,$B8,$01,$00,$00,$01  ; ($F4E1)
                .byte $05,$B8,$01,$00,$00,$01,$0B,$71,$01,$00,$00,$01,$0B,$71,$01,$00  ; ($F4F1)
                .byte $00,$01,$05,$B8,$04,$05,$B8,$04,$05,$B8,$04,$0F,$46,$0C,$08,$92  ; ($F501)
                .byte $04,$0A,$31,$04,$09,$9F,$04,$08,$92,$08,$06,$CD,$08,$06,$CD,$08  ; ($F511)
                .byte $00,$00,$04,$08,$92,$04,$07,$A3,$04,$06,$CD,$04,$07,$A3,$09,$00  ; ($F521)
                .byte $00,$01,$09,$9F,$01,$00,$00,$01,$09,$9F,$01,$00,$00,$01,$09,$9F  ; ($F531)
                .byte $01,$00,$00,$01,$07,$A3,$01,$00,$00,$01,$05,$B8,$01,$00,$00,$01  ; ($F541)
                .byte $07,$A3,$04,$09,$9F,$04,$07,$A3,$04,$04,$8A,$04,$04,$8A,$04,$09  ; ($F551)
                .byte $15,$04,$04,$8A,$04,$05,$18,$04,$05,$18,$04,$0A,$31,$04,$05,$18  ; ($F561)
                .byte $04,$05,$B8,$04,$05,$B8,$04,$0B,$71,$04,$05,$B8,$04,$05,$B8,$04  ; ($F571)
                .byte $05,$B8,$04,$0B,$71,$04,$05,$B8,$04,$07,$A3,$0C,$07,$A3,$04,$0B  ; ($F581)
                .byte $71,$04,$07,$A3,$04,$0B,$71,$08,$08,$92,$0C,$08,$92,$04,$0C,$D8  ; ($F591)
                .byte $04,$08,$92,$04,$0C,$D8,$08,$04,$8A,$04,$04,$8A,$04,$09,$15,$04  ; ($F5A1)
                .byte $04,$8A,$04,$05,$18,$04,$05,$18,$04,$0A,$31,$04,$05,$18,$04,$05  ; ($F5B1)
                .byte $B8,$04,$05,$B8,$04,$0B,$71,$04,$05,$B8,$04,$05,$B8,$04,$05,$B8  ; ($F5C1)
                .byte $04,$0B,$71,$04,$05,$B8,$04,$07,$A3,$0C,$07,$A3,$04,$0B,$71,$04  ; ($F5D1)
                .byte $07,$A3,$04,$0B,$71,$08,$08,$92,$0C,$08,$92,$04,$0C,$D8,$04,$08  ; ($F5E1)
                .byte $92,$04,$0C,$D8,$08,$04,$8A,$04,$04,$8A,$04,$09,$15,$04,$04,$8A  ; ($F5F1)
                .byte $04,$05,$18,$04,$05,$18,$04,$0A,$31,$04,$05,$18,$04,$05,$B8,$04  ; ($F601)
                .byte $05,$B8,$04,$0B,$71,$04,$05,$B8,$04,$05,$B8,$04,$05,$B8,$04,$0B  ; ($F611)
                .byte $71,$04,$05,$B8,$04,$07,$A3,$0C,$07,$A3,$04,$0B,$71,$04,$07,$A3  ; ($F621)
                .byte $04,$0B,$71,$08,$08,$92,$0C,$08,$92,$04,$0C,$D8,$04,$08,$92,$04  ; ($F631)
                .byte $0C,$D8,$08,$04,$8A,$04,$04,$8A,$04,$09,$15,$04,$04,$8A,$04,$05  ; ($F641)
                .byte $18,$04,$05,$18,$04,$0A,$31,$04,$05,$18,$04,$05,$B8,$04,$05,$B8  ; ($F651)
                .byte $04,$0B,$71,$04,$05,$B8,$04,$05,$B8,$04,$05,$B8,$04,$0B,$71,$04  ; ($F661)
                .byte $05,$B8,$04,$07,$A3,$0C,$07,$A3,$04,$0B,$71,$04,$07,$A3,$04,$0B  ; ($F671)
                .byte $71,$08,$08,$92,$0C,$08,$92,$04,$0C,$D8,$04,$08,$92,$04,$0C,$D8  ; ($F681)
                .byte $08,$04,$8A,$04,$04,$8A,$04,$09,$15,$04,$04,$8A,$04,$05,$18,$04  ; ($F691)
                .byte $05,$18,$04,$05,$66,$04,$05,$66,$04,$05,$B8,$04,$05,$B8,$04,$05  ; ($F6A1)
                .byte $18,$04,$04,$49,$04,$05,$B8,$04,$05,$B8,$04,$05,$18,$04,$05,$B8  ; ($F6B1)
                .byte $04,$04,$8A,$04,$04,$8A,$04,$09,$15,$04,$04,$8A,$04,$05,$18,$04  ; ($F6C1)
                .byte $05,$18,$04,$05,$66,$04,$05,$66,$04,$05,$B8,$04,$05,$B8,$04,$05  ; ($F6D1)
                .byte $18,$04,$04,$49,$04,$05,$B8,$04,$05,$B8,$04,$05,$18,$04,$05,$B8  ; ($F6E1)
                .byte $04,$04,$8A,$04,$04,$8A,$04,$09,$15,$04,$04,$8A,$04,$05,$18,$04  ; ($F6F1)
                .byte $05,$18,$04,$05,$66,$04,$05,$66,$04,$05,$B8,$04,$05,$B8,$04,$05  ; ($F701)
                .byte $18,$04,$04,$49,$04,$05,$B8,$04,$05,$B8,$04,$05,$18,$04,$05,$B8  ; ($F711)
                .byte $04,$04,$8A,$04,$04,$8A,$04,$09,$15,$04,$04,$8A,$04,$05,$18,$04  ; ($F721)
                .byte $05,$18,$04,$05,$66,$04,$05,$66,$04,$05,$B8,$04,$05,$B8,$04,$05  ; ($F731)
                .byte $18,$04,$04,$49,$04,$05,$B8,$04,$05,$B8,$04,$05,$18,$04,$05,$B8  ; ($F741)
                .byte $04,$00,$00,$63                     ; ($F751)

; ==================================================
; Unsectioned Data
; ==================================================

                .byte $00,$00,$40,$1C,$D6,$10,$00,$00,$04,$1C,$D6,$08,$1C,$D6,$04,$20  ; ($F755)
                .byte $5E,$10,$00,$00,$04,$20,$5E,$08,$20,$5E,$04,$22,$4A,$10,$00,$00  ; ($F765)
                .byte $04,$22,$4A,$08,$22,$4A,$04,$26,$7D,$07,$00,$00,$01,$26,$7D,$07  ; ($F775)
                .byte $00,$00,$11,$1C,$D6,$10,$00,$00,$04,$1C,$D6,$08,$1C,$D6,$04,$20  ; ($F785)
                .byte $5E,$10,$00,$00,$04,$20,$5E,$08,$20,$5E,$04,$22,$4A,$10,$00,$00  ; ($F795)
                .byte $04,$22,$4A,$08,$22,$4A,$04,$26,$7D,$07,$00,$00,$01,$26,$7D,$07  ; ($F7A5)
                .byte $00,$00,$01,$22,$4A,$04,$26,$7D,$04,$22,$4A,$04,$26,$7D,$04,$00  ; ($F7B5)
                .byte $00,$10,$1C,$D6,$04,$1C,$D6,$0C,$19,$B0,$10,$00,$00,$04,$19,$B0  ; ($F7C5)
                .byte $04,$15,$9A,$08,$19,$B0,$10,$1C,$D6,$04,$20,$5E,$0C,$1C,$D6,$10  ; ($F7D5)
                .byte $00,$00,$10,$00,$00,$10,$1C,$D6,$04,$1C,$D6,$0C,$19,$B0,$10,$00  ; ($F7E5)
                .byte $00,$04,$19,$B0,$04,$15,$9A,$08,$19,$B0,$10,$1C,$D6,$04,$20,$5E  ; ($F7F5)
                .byte $0C,$1C,$D6,$10,$00,$00,$10,$00,$00,$10,$00,$00,$10,$00,$00,$08  ; ($F805)
                .byte $19,$B0,$08,$00,$00,$10,$00,$00,$10,$00,$00,$10,$07,$35,$08,$15  ; ($F815)
                .byte $9A,$03,$00,$00,$01,$15,$9A,$04,$00,$00,$04,$15,$9A,$03,$00,$00  ; ($F825)
                .byte $01,$15,$9A,$08,$15,$9A,$08,$15,$9A,$08,$00,$00,$04,$15,$9A,$04  ; ($F835)
                .byte $1C,$D6,$04,$20,$5E,$14,$00,$00,$18,$20,$5E,$04,$1C,$D6,$04,$20  ; ($F845)
                .byte $5E,$0C,$1C,$D6,$04,$20,$5E,$08,$22,$4A,$08,$20,$5E,$04,$1C,$D6  ; ($F855)
                .byte $0C,$15,$9A,$08,$15,$9A,$08,$00,$00,$04,$15,$9A,$04,$1C,$D6,$04  ; ($F865)
                .byte $20,$5E,$14,$00,$00,$18,$22,$4A,$04,$1C,$D6,$04,$22,$4A,$0C,$1C  ; ($F875)
                .byte $D6,$04,$26,$7D,$08,$2B,$34,$08,$26,$7D,$04,$22,$4A,$04,$20,$5E  ; ($F885)
                .byte $04,$0E,$6B,$24,$0F,$46,$1C,$22,$4A,$04,$28,$C7,$04,$22,$4A,$08  ; ($F895)
                .byte $28,$C7,$10,$22,$4A,$04,$28,$C7,$08,$2D,$C6,$08,$28,$C7,$04,$26  ; ($F8A5)
                .byte $7D,$04,$22,$4A,$04,$26,$7D,$04,$0E,$6B,$20,$0F,$46,$1C,$22,$4A  ; ($F8B5)
                .byte $04,$28,$C7,$04,$22,$4A,$08,$28,$C7,$14,$00,$00,$08,$22,$4A,$08  ; ($F8C5)
                .byte $28,$C7,$08,$2D,$C6,$08,$2D,$C6,$10,$2D,$C6,$04,$28,$C7,$04,$22  ; ($F8D5)
                .byte $4A,$04,$28,$C7,$08,$2D,$C6,$18,$22,$4A,$04,$28,$C7,$04,$2D,$C6  ; ($F8E5)
                .byte $08,$2D,$C6,$10,$22,$4A,$04,$28,$C7,$08,$2D,$C6,$08,$33,$61,$04  ; ($F8F5)
                .byte $2D,$C6,$04,$28,$C7,$08,$2D,$C6,$10,$2D,$C6,$04,$28,$C7,$04,$22  ; ($F905)
                .byte $4A,$04,$28,$C7,$08,$2D,$C6,$18,$22,$4A,$04,$28,$C7,$04,$2D,$C6  ; ($F915)
                .byte $08,$2D,$C6,$10,$22,$4A,$04,$28,$C7,$08,$2D,$C6,$08,$33,$61,$04  ; ($F925)
                .byte $2D,$C6,$04,$28,$C7,$08,$00,$00,$08,$2D,$C6,$08,$2D,$C6,$04,$28  ; ($F935)
                .byte $C7,$04,$22,$4A,$04,$28,$C7,$08,$2D,$C6,$18,$22,$4A,$04,$28,$C7  ; ($F945)
                .byte $04,$2D,$C6,$08,$2D,$C6,$10,$22,$4A,$04,$28,$C7,$08,$2D,$C6,$08  ; ($F955)
                .byte $33,$61,$04,$2D,$C6,$04,$28,$C7,$08,$00,$00,$08,$2D,$C6,$08,$2D  ; ($F965)
                .byte $C6,$04,$28,$C7,$04,$22,$4A,$04,$28,$C7,$08,$2D,$C6,$1C,$00,$00  ; ($F975)
                .byte $40,$00,$00,$40,$00,$00,$40,$00,$00,$10,$1C,$D6,$04,$1C,$D6,$0C  ; ($F985)
                .byte $19,$B0,$10,$00,$00,$04,$19,$B0,$04,$15,$9A,$08,$19,$B0,$10,$1C  ; ($F995)
                .byte $D6,$04,$20,$5E,$0C,$1C,$D6,$10,$00,$00,$10,$00,$00,$10,$1C,$D6  ; ($F9A5)
                .byte $04,$1C,$D6,$0C,$19,$B0,$10,$00,$00,$04,$19,$B0,$04,$15,$9A,$08  ; ($F9B5)
                .byte $19,$B0,$10,$1C,$D6,$04,$20,$5E,$0C,$1C,$D6,$10,$00,$00,$10,$00  ; ($F9C5)
                .byte $00,$10,$00,$00,$10,$00,$00,$08,$19,$B0,$08,$00,$00,$10,$00,$00  ; ($F9D5)
                .byte $10,$00,$00,$10,$07,$35,$08,$15,$9A,$03,$00,$00,$01,$15,$9A,$04  ; ($F9E5)
                .byte $00,$00,$04,$15,$9A,$03,$00,$00,$01,$15,$9A,$08,$15,$9A,$08,$15  ; ($F9F5)
                .byte $9A,$08,$00,$00,$04,$15,$9A,$04,$1C,$D6,$04,$20,$5E,$14,$00,$00  ; ($FA05)
                .byte $18,$20,$5E,$04,$1C,$D6,$04,$20,$5E,$0C,$1C,$D6,$04,$20,$5E,$08  ; ($FA15)
                .byte $22,$4A,$08,$20,$5E,$04,$1C,$D6,$0C,$15,$9A,$08,$15,$9A,$08,$00  ; ($FA25)
                .byte $00,$04,$15,$9A,$04,$1C,$D6,$04,$20,$5E,$14,$00,$00,$18,$22,$4A  ; ($FA35)
                .byte $04,$1C,$D6,$04,$22,$4A,$0C,$1C,$D6,$04,$26,$7D,$08,$2B,$34,$08  ; ($FA45)
                .byte $26,$7D,$04,$22,$4A,$04,$20,$5E,$04,$0E,$6B,$24,$0F,$46,$1C,$22  ; ($FA55)
                .byte $4A,$04,$28,$C7,$04,$22,$4A,$08,$28,$C7,$10,$22,$4A,$04,$28,$C7  ; ($FA65)
                .byte $08,$2D,$C6,$08,$28,$C7,$04,$26,$7D,$04,$22,$4A,$04,$26,$7D,$04  ; ($FA75)
                .byte $0E,$6B,$20,$0F,$46,$1C,$22,$4A,$04,$28,$C7,$04,$22,$4A,$08,$28  ; ($FA85)
                .byte $C7,$14,$00,$00,$08,$22,$4A,$08,$28,$C7,$08,$2D,$C6,$08,$2D,$C6  ; ($FA95)
                .byte $10,$2D,$C6,$04,$28,$C7,$04,$22,$4A,$04,$28,$C7,$08,$2D,$C6,$18  ; ($FAA5)
                .byte $22,$4A,$04,$28,$C7,$04,$2D,$C6,$08,$2D,$C6,$10,$22,$4A,$04,$28  ; ($FAB5)
                .byte $C7,$08,$2D,$C6,$08,$33,$61,$04,$2D,$C6,$04,$28,$C7,$08,$2D,$C6  ; ($FAC5)
                .byte $10,$2D,$C6,$04,$28,$C7,$04,$22,$4A,$04,$28,$C7,$08,$2D,$C6,$18  ; ($FAD5)
                .byte $22,$4A,$04,$28,$C7,$04,$2D,$C6,$08,$2D,$C6,$10,$22,$4A,$04,$28  ; ($FAE5)
                .byte $C7,$08,$2D,$C6,$08,$33,$61,$04,$2D,$C6,$04,$28,$C7,$08,$00,$00  ; ($FAF5)
                .byte $08,$2D,$C6,$08,$2D,$C6,$04,$28,$C7,$04,$22,$4A,$04,$28,$C7,$08  ; ($FB05)
                .byte $2D,$C6,$18,$22,$4A,$04,$28,$C7,$04,$2D,$C6,$08,$2D,$C6,$10,$22  ; ($FB15)
                .byte $4A,$04,$28,$C7,$08,$2D,$C6,$08,$33,$61,$04,$2D,$C6,$04,$28,$C7  ; ($FB25)
                .byte $08,$00,$00,$08,$2D,$C6,$08,$2D,$C6,$04,$28,$C7,$04,$22,$4A,$04  ; ($FB35)
                .byte $28,$C7,$08,$2D,$C6,$18,$22,$4A,$04,$28,$C7,$04,$2D,$C6,$08,$2D  ; ($FB45)
                .byte $C6,$1C,$33,$61,$04,$33,$61,$04,$33,$61,$08,$2D,$C6,$04,$28,$C7  ; ($FB55)
                .byte $04,$2D,$C6,$20,$00,$00,$04,$16,$E3,$04,$14,$63,$04,$11,$25,$04  ; ($FB65)
                .byte $00,$00,$04,$16,$E3,$04,$14,$63,$04,$11,$25,$04,$00,$00,$20,$00  ; ($FB75)
                .byte $00,$04,$16,$E3,$04,$14,$63,$04,$11,$25,$04,$00,$00,$04,$16,$E3  ; ($FB85)
                .byte $04,$14,$63,$04,$11,$25,$04,$00,$00,$20,$00,$00,$04,$16,$E3,$04  ; ($FB95)
                .byte $14,$63,$04,$11,$25,$04,$00,$00,$04,$16,$E3,$04,$14,$63,$04,$11  ; ($FBA5)
                .byte $25,$04,$00,$00,$20,$00,$00,$04,$16,$E3,$04,$14,$63,$04,$11,$25  ; ($FBB5)
                .byte $04,$00,$00,$04,$16,$E3,$04,$14,$63,$04,$11,$25,$04,$00,$00,$63  ; ($FBC5)
                .byte $10,$2D,$C6,$04,$28,$C7,$04,$22,$4A,$04,$28,$C7,$08,$2D,$C6,$18  ; ($FBD5)
                .byte $22,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($FBE5)
                .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00  ; ($FBF5)

; End of assembly export
